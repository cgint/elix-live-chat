<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Ash.Resource.Interface - ash v3.5.33</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Ash.Resource.Interface 
    </h1>


      <section id="moduledoc" class="docstring">
<p>Represents a function in a resource's code interface</p><p>See the functions defined in this module for specifications of the options
that each type of code interface function supports in its options list.</p>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-types summary">
  <h2>
    <a href="#types">Types</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:t/0" data-no-tooltip="" translate="no">t()</a>

      </div>

    </div>

</div>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#calculate_opts/0" data-no-tooltip="" translate="no">calculate_opts()</a>

      </div>

        <div class="summary-synopsis"><p>Options supported by code interfaces for calculations</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#create_opts/0" data-no-tooltip="" translate="no">create_opts()</a>

      </div>

        <div class="summary-synopsis"><p>Options supported by code interfaces for create actions</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#destroy_opts/0" data-no-tooltip="" translate="no">destroy_opts()</a>

      </div>

        <div class="summary-synopsis"><p>Options supported by code interfaces for destroy actions</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#generic_action_opts/0" data-no-tooltip="" translate="no">generic_action_opts()</a>

      </div>

        <div class="summary-synopsis"><p>Options supported by code interfaces for generic actions</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#get_opts/0" data-no-tooltip="" translate="no">get_opts()</a>

      </div>

        <div class="summary-synopsis"><p>Options supported by code interfaces for read actions with <code class="inline">get?</code> or <code class="inline">get_by</code> set.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#read_opts/0" data-no-tooltip="" translate="no">read_opts()</a>

      </div>

        <div class="summary-synopsis"><p>Options supported by code interfaces for read actions</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#update_opts/0" data-no-tooltip="" translate="no">update_opts()</a>

      </div>

        <div class="summary-synopsis"><p>Options supported by code interfaces for update actions</p></div>

    </div>

</div>

      </section>


      <section id="types" class="details-list">
        <h1 class="section-heading">Types</h1>
        <div class="types-list">
<section class="detail" id="t:t/0">

  <div class="detail-header">
    <a href="#t:t/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">t()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/resource/interface.ex#L22" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> t() :: %Ash.Resource.Interface{
  action: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(),
  args: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(),
  custom_inputs: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(),
  default_options: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(),
  exclude_inputs: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(),
  get?: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(),
  get_by: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(),
  get_by_identity: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(),
  name: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(),
  not_found_error?: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(),
  require_reference?: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()
}</pre>

      </div>


  </section>
</section>

        </div>
      </section>

      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>
        <div class="functions-list">
<section class="detail" id="calculate_opts/0">

  <div class="detail-header">
    <a href="#calculate_opts/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">calculate_opts()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/resource/interface.ex#L267" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>Options supported by code interfaces for calculations</p><h2 id="calculate_opts/0-options" class="section-heading"><a href="#calculate_opts/0-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><ul><li><p><code class="inline">:actor</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - The actor for handling <a href="https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%5E/1"><code class="inline">^actor/1</code></a> templates, supplied to calculation context.</p></li><li><p><code class="inline">:scope</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A value that implements the <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> protocol. Will overwrite any actor, tenant or context provided. See <a href="Ash.Context.xhtml"><code class="inline">Ash.Context</code></a> for more.</p></li><li><p><code class="inline">:tenant</code> (value that implements the <a href="Ash.ToTenant.xhtml"><code class="inline">Ash.ToTenant</code></a> protocol) - The tenant, supplied to calculation context.</p></li><li><p><code class="inline">:context</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Context to set on the calculation input.</p></li><li><p><code class="inline">:authorize?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not the request is being authorized, provided to calculation context. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:tracer</code> (one or a list of module that adopts <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a>) - A tracer, provided to the calculation context.</p></li><li><p><code class="inline">:data_layer?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Set to <code class="inline">true</code> to require that the value be computed within the data layer. Only works for calculations that define an expression.</p></li><li><p><code class="inline">:reuse_values?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Set to <code class="inline">true</code> to reuse existing values on any provided record. Only necessary if providing a record as the basis for calculation. The default value is <code class="inline">false</code>.</p></li></ul>
  </section>
</section>
<section class="detail" id="create_opts/0">

  <div class="detail-header">
    <a href="#create_opts/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">create_opts()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/resource/interface.ex#L201" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>Options supported by code interfaces for create actions</p><h2 id="create_opts/0-options" class="section-heading"><a href="#create_opts/0-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><ul><li><p><code class="inline">:upsert?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If a conflict is found based on the primary key, the record is updated in the database (requires upsert support) The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:return_skipped_upsert?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If <code class="inline">true</code>, and a record was <em>not</em> upserted because its filter prevented the upsert, the original record (which was <em>not</em> upserted) will be returned. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:upsert_identity</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - The identity to use when detecting conflicts for <code class="inline">upsert?</code>, e.g. <code class="inline">upsert_identity: :full_name</code>. By default, the primary key is used. Has no effect if <code class="inline">upsert?: true</code> is not provided</p></li><li><p><code class="inline">:upsert_fields</code> - The fields to upsert. If not set, the action's upsert_fields is used, and if that is not set, then any fields not being set to defaults are written.</p></li><li><p><code class="inline">:upsert_condition</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - An expression to check if the record should be updated when there's a conflict.</p></li><li><p><code class="inline">:timeout</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">timeout/0</code></a>) - A positive integer, or <code class="inline">:infinity</code>. If none is provided, the timeout configured on the domain is used.</p></li><li><p><code class="inline">:tracer</code> (one or a list of module that adopts <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a>) - A tracer that implements the <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a> behaviour. See that module for more.</p></li><li><p><code class="inline">:action</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - The action to use, either an Action struct or the name of the action</p></li><li><p><code class="inline">:authorize?</code> - If an actor option is provided (even if it is <code class="inline">nil</code>), authorization happens automatically. If not, this flag can be used to authorize with no user.</p></li><li><p><code class="inline">:context</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Context to set on the query, changeset, or input</p></li><li><p><code class="inline">:tenant</code> (value that implements the <a href="Ash.ToTenant.xhtml"><code class="inline">Ash.ToTenant</code></a> protocol) - A tenant to set on the query or changeset</p></li><li><p><code class="inline">:actor</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - If an actor is provided, it will be used in conjunction with the authorizers of a resource to authorize access</p></li><li><p><code class="inline">:scope</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A value that implements the <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> protocol, for passing around actor/tenant/context in a single value. See <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> for more.</p></li><li><p><code class="inline">:return_notifications?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Use this if you're running ash actions in your own transaction and you want to manually handle sending notifications.<br/>If a transaction is ongoing, and this is false, notifications will be discarded, otherwise
the return value is <code class="inline">{:ok, result, notifications}</code> (or <code class="inline">{:ok, notifications}</code>)<br/>To send notifications later, use <code class="inline">Ash.Notifier.notify(notifications)</code>. It sends any notifications
that can be sent, and returns the rest. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:rollback_on_error?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to rollback the transaction on error, if the resource is in a transaction.<br/>If the action has <code class="inline">transaction? false</code> this option has no effect. If an error is returned from the
data layer and the resource is in a transaction, the transaction is always rolled back, regardless. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:notification_metadata</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - Metadata to be merged into the metadata field for all notifications sent from this operation. The default value is <code class="inline">%{}</code>.</p></li><li><p><code class="inline">:skip_unknown_inputs</code> - A list of inputs that, if provided, will be ignored if they are not recognized by the action. Use <code class="inline">:*</code> to indicate all unknown keys.</p></li><li><p><code class="inline">:load</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A load statement to add onto the changeset</p></li><li><p><code class="inline">:changeset</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A changeset to seed the action with.</p></li><li><p><code class="inline">:bulk_options</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">keyword/0</code></a>) - Options passed to <code class="inline">Ash.bulk_create</code>, if a list or stream of inputs is provided.</p><ul><li><p><code class="inline">:select</code> (list of <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - A select statement to apply to records. Ignored if <code class="inline">return_records?</code> is not true.</p></li><li><p><code class="inline">:after_action</code> (function of arity 2) - An after_action hook to be added to each processed changeset</p></li><li><p><code class="inline">:read_action</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - The action to use when building the read query.</p></li><li><p><code class="inline">:assume_casted?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to cast attributes and arguments as input. This is an optimization for cases where the input is already casted and/or not in need of casting The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:select</code> (list of <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - A select statement to apply to records. Ignored if <code class="inline">return_records?</code> is not true.</p></li><li><p><code class="inline">:authorize_query_with</code> - If set to <code class="inline">:error</code>, instead of filtering unauthorized query results, unauthorized query results will raise an appropriate forbidden error. Uses <code class="inline">authorize_with</code> if not set.</p></li><li><p><code class="inline">:authorize_changeset_with</code> - If set to <code class="inline">:error</code>, instead of filtering unauthorized changes, unauthorized changes will raise an appropriate forbidden error. Uses <code class="inline">authorize_with</code> if not set.</p></li><li><p><code class="inline">:authorize_with</code> - If set to <code class="inline">:error</code>, instead of filtering unauthorized query results, unauthorized query results will raise an appropriate forbidden error. The default value is <code class="inline">:filter</code>.</p></li><li><p><code class="inline">:private_arguments</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Private argument values to set on each changeset before validations and changes are run. The default value is <code class="inline">%{}</code>.</p></li><li><p><code class="inline">:sorted?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to sort results by their input position, in cases where <code class="inline">return_records?: true</code> was provided. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:return_records?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to return all of the records that were inserted. Defaults to false to account for large inserts. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:return_errors?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether to return all errors that occur during the operation. Defaults to the value of <code class="inline">:bulk_actions_default_to_errors?</code> in your config, or <code class="inline">false</code> if not set. Returning all errors may be expensive for large inserts. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:batch_size</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">pos_integer/0</code></a>) - The number of records to include in each batch. Defaults to the <code class="inline">default_limit</code>
or <code class="inline">max_page_size</code> of the action, or 100.</p></li><li><p><code class="inline">:return_stream?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If set to <code class="inline">true</code>, instead of an <a href="Ash.BulkResult.xhtml"><code class="inline">Ash.BulkResult</code></a>, a mixed stream is returned.</p><p>Potential elements:</p><p><code class="inline">{:notification, notification}</code> - if <code class="inline">return_notifications?</code> is set to <code class="inline">true</code>
<code class="inline">{:ok, record}</code> - if <code class="inline">return_records?</code> is set to <code class="inline">true</code>
<code class="inline">{:error, error}</code> - an error that occurred. May be changeset or an individual error.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:return_nothing?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Mutes warnings about returning nothing.</p><p>Only relevant if <code class="inline">return_stream?</code> is set to <code class="inline">true</code> and all other
<code class="inline">return_*?</code> options are set to <code class="inline">false</code>.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:stop_on_error?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If true, the first encountered error will stop the action and be returned. Otherwise, errors
will be skipped. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:notify?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to generate any notifications. If this is set to <code class="inline">true</code> then the data layer must return
the results from each batch. This may be intensive for large bulk actions.</p><p>Notifications will be automatically sent unless <code class="inline">return_notifications?</code> is set to <code class="inline">true</code>.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:transaction</code> - Whether or not to wrap the entire execution in a transaction, each batch, or not at all.</p><p>Keep in mind:</p><p><code class="inline">before_transaction</code> and <code class="inline">after_transaction</code> hooks attached to changesets will have to be run
<em>inside</em> the transaction if you choose <code class="inline">transaction: :all</code>.</p><p>The default value is <code class="inline">:batch</code>.</p></li><li><p><code class="inline">:max_concurrency</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">non_neg_integer/0</code></a>) - If set to a value greater than 0, up to that many tasks will be started to run batches asynchronously The default value is <code class="inline">0</code>.</p></li></ul></li><li><p><code class="inline">:private_arguments</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Private argument values to set before validations and changes. The default value is <code class="inline">%{}</code>.</p></li></ul>
  </section>
</section>
<section class="detail" id="destroy_opts/0">

  <div class="detail-header">
    <a href="#destroy_opts/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">destroy_opts()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/resource/interface.ex#L245" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>Options supported by code interfaces for destroy actions</p><h2 id="destroy_opts/0-options" class="section-heading"><a href="#destroy_opts/0-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><ul><li><p><code class="inline">:return_destroyed?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If true, the destroyed record is included in the return result, e.g <code class="inline">{:ok, destroyed}</code> or <code class="inline">{:ok, destroyed, notifications}</code> The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:timeout</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">timeout/0</code></a>) - A positive integer, or <code class="inline">:infinity</code>. If none is provided, the timeout configured on the domain is used.</p></li><li><p><code class="inline">:tracer</code> (one or a list of module that adopts <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a>) - A tracer that implements the <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a> behaviour. See that module for more.</p></li><li><p><code class="inline">:action</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - The action to use, either an Action struct or the name of the action</p></li><li><p><code class="inline">:authorize?</code> - If an actor option is provided (even if it is <code class="inline">nil</code>), authorization happens automatically. If not, this flag can be used to authorize with no user.</p></li><li><p><code class="inline">:context</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Context to set on the query, changeset, or input</p></li><li><p><code class="inline">:tenant</code> (value that implements the <a href="Ash.ToTenant.xhtml"><code class="inline">Ash.ToTenant</code></a> protocol) - A tenant to set on the query or changeset</p></li><li><p><code class="inline">:actor</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - If an actor is provided, it will be used in conjunction with the authorizers of a resource to authorize access</p></li><li><p><code class="inline">:scope</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A value that implements the <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> protocol, for passing around actor/tenant/context in a single value. See <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> for more.</p></li><li><p><code class="inline">:return_notifications?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Use this if you're running ash actions in your own transaction and you want to manually handle sending notifications.<br/>If a transaction is ongoing, and this is false, notifications will be discarded, otherwise
the return value is <code class="inline">{:ok, result, notifications}</code> (or <code class="inline">{:ok, notifications}</code>)<br/>To send notifications later, use <code class="inline">Ash.Notifier.notify(notifications)</code>. It sends any notifications
that can be sent, and returns the rest. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:rollback_on_error?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to rollback the transaction on error, if the resource is in a transaction.<br/>If the action has <code class="inline">transaction? false</code> this option has no effect. If an error is returned from the
data layer and the resource is in a transaction, the transaction is always rolled back, regardless. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:notification_metadata</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - Metadata to be merged into the metadata field for all notifications sent from this operation. The default value is <code class="inline">%{}</code>.</p></li><li><p><code class="inline">:skip_unknown_inputs</code> - A list of inputs that, if provided, will be ignored if they are not recognized by the action. Use <code class="inline">:*</code> to indicate all unknown keys.</p></li><li><p><code class="inline">:load</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A load statement to add onto the changeset</p></li><li><p><code class="inline">:bulk_options</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">keyword/0</code></a>) - Options passed to <code class="inline">Ash.bulk_destroy</code>, if a query, list, or stream of inputs is provided.</p><ul><li><p><code class="inline">:stream_batch_size</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">integer/0</code></a>) - Batch size to use if provided a query and the query must be streamed</p></li><li><p><code class="inline">:allow_stream_with</code> - The 'worst' strategy allowed to be used to fetch records if the <code class="inline">:stream</code> strategy is chosen. See the <a href="Ash.xhtml#stream!/2"><code class="inline">Ash.stream!/2</code></a> docs for more. The default value is <code class="inline">:keyset</code>.</p></li><li><p><code class="inline">:authorize_query?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If a query is given, determines whether or not authorization is run on that query. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:strategy</code> - The strategy or strategies to enable. :stream is used in all cases if the data layer does not support atomics. The default value is <code class="inline">:atomic</code>.</p></li><li><p><code class="inline">:filter</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A filter to apply to records. This is also applied to a stream of inputs.</p></li><li><p><code class="inline">:allow_stream_with</code> - The 'worst' strategy allowed to be used to fetch records. See <a href="Ash.xhtml#stream!/2"><code class="inline">Ash.stream!/2</code></a> docs for more. The default value is <code class="inline">:keyset</code>.</p></li><li><p><code class="inline">:stream_with</code> - The specific strategy to use to fetch records. See <a href="Ash.xhtml#stream!/2"><code class="inline">Ash.stream!/2</code></a> docs for more.</p></li><li><p><code class="inline">:max_concurrency</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">non_neg_integer/0</code></a>) - The maximum number of processes allowed to be started for parallel loading of relationships and calculations. Defaults to <code class="inline">System.schedulers_online() * 2</code></p></li><li><p><code class="inline">:lock</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A lock statement to add onto the query</p></li><li><p><code class="inline">:return_query?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If <code class="inline">true</code>, the query that was ultimately used is returned as a third tuple element.</p><p>The query goes through many potential changes during a request, potentially adding
authorization filters, or replacing relationships for other data layers with their
corresponding ids. This option can be used to get the true query that was sent to
the data layer.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:reuse_values?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether calculations are allowed to reuse values that have already been loaded, or must refetch them from the data layer. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:strict?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If set to true, only specified attributes will be loaded when passing
  a list of fields to fetch on a relationship, which allows for more
  optimized data-fetching.</p><p>  See <a href="Ash.Query.xhtml#load/2"><code class="inline">Ash.Query.load/2</code></a>.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:authorize_with</code> - If set to <code class="inline">:error</code>, instead of applying authorization filters as a filter, any records not matching the authorization filter will cause an error to be returned. The default value is <code class="inline">:filter</code>.</p></li><li><p><code class="inline">:read_action</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - The action to use when building the read query.</p></li><li><p><code class="inline">:assume_casted?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to cast attributes and arguments as input. This is an optimization for cases where the input is already casted and/or not in need of casting The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:select</code> (list of <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - A select statement to apply to records. Ignored if <code class="inline">return_records?</code> is not true.</p></li><li><p><code class="inline">:authorize_query_with</code> - If set to <code class="inline">:error</code>, instead of filtering unauthorized query results, unauthorized query results will raise an appropriate forbidden error. Uses <code class="inline">authorize_with</code> if not set.</p></li><li><p><code class="inline">:authorize_changeset_with</code> - If set to <code class="inline">:error</code>, instead of filtering unauthorized changes, unauthorized changes will raise an appropriate forbidden error. Uses <code class="inline">authorize_with</code> if not set.</p></li><li><p><code class="inline">:authorize_with</code> - If set to <code class="inline">:error</code>, instead of filtering unauthorized query results, unauthorized query results will raise an appropriate forbidden error. The default value is <code class="inline">:filter</code>.</p></li><li><p><code class="inline">:private_arguments</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Private argument values to set on each changeset before validations and changes are run. The default value is <code class="inline">%{}</code>.</p></li><li><p><code class="inline">:sorted?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to sort results by their input position, in cases where <code class="inline">return_records?: true</code> was provided. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:return_records?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to return all of the records that were inserted. Defaults to false to account for large inserts. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:return_errors?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether to return all errors that occur during the operation. Defaults to the value of <code class="inline">:bulk_actions_default_to_errors?</code> in your config, or <code class="inline">false</code> if not set. Returning all errors may be expensive for large inserts. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:batch_size</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">pos_integer/0</code></a>) - The number of records to include in each batch. Defaults to the <code class="inline">default_limit</code>
or <code class="inline">max_page_size</code> of the action, or 100.</p></li><li><p><code class="inline">:return_stream?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If set to <code class="inline">true</code>, instead of an <a href="Ash.BulkResult.xhtml"><code class="inline">Ash.BulkResult</code></a>, a mixed stream is returned.</p><p>Potential elements:</p><p><code class="inline">{:notification, notification}</code> - if <code class="inline">return_notifications?</code> is set to <code class="inline">true</code>
<code class="inline">{:ok, record}</code> - if <code class="inline">return_records?</code> is set to <code class="inline">true</code>
<code class="inline">{:error, error}</code> - an error that occurred. May be changeset or an individual error.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:return_nothing?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Mutes warnings about returning nothing.</p><p>Only relevant if <code class="inline">return_stream?</code> is set to <code class="inline">true</code> and all other
<code class="inline">return_*?</code> options are set to <code class="inline">false</code>.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:stop_on_error?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If true, the first encountered error will stop the action and be returned. Otherwise, errors
will be skipped. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:notify?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to generate any notifications. If this is set to <code class="inline">true</code> then the data layer must return
the results from each batch. This may be intensive for large bulk actions.</p><p>Notifications will be automatically sent unless <code class="inline">return_notifications?</code> is set to <code class="inline">true</code>.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:transaction</code> - Whether or not to wrap the entire execution in a transaction, each batch, or not at all.</p><p>Keep in mind:</p><p><code class="inline">before_transaction</code> and <code class="inline">after_transaction</code> hooks attached to changesets will have to be run
<em>inside</em> the transaction if you choose <code class="inline">transaction: :all</code>.</p><p>The default value is <code class="inline">:batch</code>.</p></li><li><p><code class="inline">:max_concurrency</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">non_neg_integer/0</code></a>) - If set to a value greater than 0, up to that many tasks will be started to run batches asynchronously The default value is <code class="inline">0</code>.</p></li></ul></li><li><p><code class="inline">:private_arguments</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Private argument values to set before validations and changes. The default value is <code class="inline">%{}</code>.</p></li></ul>
  </section>
</section>
<section class="detail" id="generic_action_opts/0">

  <div class="detail-header">
    <a href="#generic_action_opts/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">generic_action_opts()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/resource/interface.ex#L256" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>Options supported by code interfaces for generic actions</p><h2 id="generic_action_opts/0-options" class="section-heading"><a href="#generic_action_opts/0-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><ul><li><p><code class="inline">:actor</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - The actor for handling <a href="https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%5E/1"><code class="inline">^actor/1</code></a> templates, supplied to calculation context.</p></li><li><p><code class="inline">:scope</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A value that implements the <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> protocol. Will overwrite any actor, tenant or context provided. See <a href="Ash.Context.xhtml"><code class="inline">Ash.Context</code></a> for more.</p></li><li><p><code class="inline">:tenant</code> (value that implements the <a href="Ash.ToTenant.xhtml"><code class="inline">Ash.ToTenant</code></a> protocol) - The tenant, supplied to calculation context.</p></li><li><p><code class="inline">:authorize?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not the request should be authorized.</p></li><li><p><code class="inline">:tracer</code> (one or a list of module that adopts <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a>) - A tracer, provided to the calculation context.</p></li><li><p><code class="inline">:context</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Context to set on the action input</p></li><li><p><code class="inline">:skip_unknown_inputs</code> - A list of inputs that, if provided, will be ignored if they are not recognized by the action. Use <code class="inline">:*</code> to indicate all unknown keys.</p></li><li><p><code class="inline">:private_arguments</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Private argument values to set before validations and changes. The default value is <code class="inline">%{}</code>.</p></li></ul>
  </section>
</section>
<section class="detail" id="get_opts/0">

  <div class="detail-header">
    <a href="#get_opts/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">get_opts()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/resource/interface.ex#L212" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>Options supported by code interfaces for read actions with <code class="inline">get?</code> or <code class="inline">get_by</code> set.</p><h2 id="get_opts/0-options" class="section-heading"><a href="#get_opts/0-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><ul><li><p><code class="inline">:page</code> - Pagination options, see <a href="Ash.xhtml#read/2"><code class="inline">Ash.read/2</code></a> for more.</p></li><li><p><code class="inline">:load</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A load statement to add onto the query</p></li><li><p><code class="inline">:max_concurrency</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">non_neg_integer/0</code></a>) - The maximum number of processes allowed to be started for parallel loading of relationships and calculations. Defaults to <code class="inline">System.schedulers_online() * 2</code></p></li><li><p><code class="inline">:lock</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A lock statement to add onto the query</p></li><li><p><code class="inline">:return_query?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If <code class="inline">true</code>, the query that was ultimately used is returned as a third tuple element.<br/>The query goes through many potential changes during a request, potentially adding
authorization filters, or replacing relationships for other data layers with their
corresponding ids. This option can be used to get the true query that was sent to
the data layer. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:skip_unknown_inputs</code> - A list of inputs that, if provided, will be ignored if they are not recognized by the action. Use <code class="inline">:*</code> to indicate all unknown keys.</p></li><li><p><code class="inline">:reuse_values?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether calculations are allowed to reuse values that have already been loaded, or must refetch them from the data layer. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:strict?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If set to true, only specified attributes will be loaded when passing
  a list of fields to fetch on a relationship, which allows for more
  optimized data-fetching.<br/>  See <a href="Ash.Query.xhtml#load/2"><code class="inline">Ash.Query.load/2</code></a>. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:authorize_with</code> - If set to <code class="inline">:error</code>, instead of applying authorization filters as a filter, any records not matching the authorization filter will cause an error to be returned. Valid values are :filter, :error The default value is <code class="inline">:filter</code>.</p></li><li><p><code class="inline">:timeout</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">timeout/0</code></a>) - A positive integer, or <code class="inline">:infinity</code>. If none is provided, the timeout configured on the domain is used.</p></li><li><p><code class="inline">:tracer</code> (one or a list of module that adopts <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a>) - A tracer that implements the <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a> behaviour. See that module for more.</p></li><li><p><code class="inline">:action</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - The action to use, either an Action struct or the name of the action</p></li><li><p><code class="inline">:authorize?</code> - If an actor option is provided (even if it is <code class="inline">nil</code>), authorization happens automatically. If not, this flag can be used to authorize with no user.</p></li><li><p><code class="inline">:context</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Context to set on the query, changeset, or input</p></li><li><p><code class="inline">:tenant</code> (value that implements the <a href="Ash.ToTenant.xhtml"><code class="inline">Ash.ToTenant</code></a> protocol) - A tenant to set on the query or changeset</p></li><li><p><code class="inline">:actor</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - If an actor is provided, it will be used in conjunction with the authorizers of a resource to authorize access</p></li><li><p><code class="inline">:scope</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A value that implements the <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> protocol, for passing around actor/tenant/context in a single value. See <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> for more.</p></li><li><p><code class="inline">:query</code> - A query to seed the action with.</p></li><li><p><code class="inline">:not_found_error?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to return or raise a <code class="inline">NotFound</code> error or to return <code class="inline">nil</code> when a get? action/interface is called.</p></li><li><p><code class="inline">:stream?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If true, a stream of the results will be returned The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:stream_options</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">keyword/0</code></a>) - Options passed to <code class="inline">Ash.stream!</code>, if <code class="inline">stream?: true</code> is given</p><ul><li><p><code class="inline">:batch_size</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">integer/0</code></a>) - How many records to request in each query run. Defaults to the pagination limits on the resource, or 250.</p></li><li><p><code class="inline">:allow_stream_with</code> - The 'worst' strategy allowed to be used to fetch records. See <a href="Ash.xhtml#stream!/2"><code class="inline">Ash.stream!/2</code></a> docs for more. The default value is <code class="inline">:keyset</code>.</p></li><li><p><code class="inline">:stream_with</code> - The specific strategy to use to fetch records. See <a href="Ash.xhtml#stream!/2"><code class="inline">Ash.stream!/2</code></a> docs for more.</p></li></ul></li></ul>
  </section>
</section>
<section class="detail" id="read_opts/0">

  <div class="detail-header">
    <a href="#read_opts/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">read_opts()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/resource/interface.ex#L223" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>Options supported by code interfaces for read actions</p><h2 id="read_opts/0-options" class="section-heading"><a href="#read_opts/0-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><ul><li><p><code class="inline">:page</code> - Pagination options, see <a href="Ash.xhtml#read/2"><code class="inline">Ash.read/2</code></a> for more.</p></li><li><p><code class="inline">:load</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A load statement to add onto the query</p></li><li><p><code class="inline">:max_concurrency</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">non_neg_integer/0</code></a>) - The maximum number of processes allowed to be started for parallel loading of relationships and calculations. Defaults to <code class="inline">System.schedulers_online() * 2</code></p></li><li><p><code class="inline">:lock</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A lock statement to add onto the query</p></li><li><p><code class="inline">:return_query?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If <code class="inline">true</code>, the query that was ultimately used is returned as a third tuple element.<br/>The query goes through many potential changes during a request, potentially adding
authorization filters, or replacing relationships for other data layers with their
corresponding ids. This option can be used to get the true query that was sent to
the data layer. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:skip_unknown_inputs</code> - A list of inputs that, if provided, will be ignored if they are not recognized by the action. Use <code class="inline">:*</code> to indicate all unknown keys.</p></li><li><p><code class="inline">:reuse_values?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether calculations are allowed to reuse values that have already been loaded, or must refetch them from the data layer. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:strict?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If set to true, only specified attributes will be loaded when passing
  a list of fields to fetch on a relationship, which allows for more
  optimized data-fetching.<br/>  See <a href="Ash.Query.xhtml#load/2"><code class="inline">Ash.Query.load/2</code></a>. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:authorize_with</code> - If set to <code class="inline">:error</code>, instead of applying authorization filters as a filter, any records not matching the authorization filter will cause an error to be returned. Valid values are :filter, :error The default value is <code class="inline">:filter</code>.</p></li><li><p><code class="inline">:timeout</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">timeout/0</code></a>) - A positive integer, or <code class="inline">:infinity</code>. If none is provided, the timeout configured on the domain is used.</p></li><li><p><code class="inline">:tracer</code> (one or a list of module that adopts <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a>) - A tracer that implements the <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a> behaviour. See that module for more.</p></li><li><p><code class="inline">:action</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - The action to use, either an Action struct or the name of the action</p></li><li><p><code class="inline">:authorize?</code> - If an actor option is provided (even if it is <code class="inline">nil</code>), authorization happens automatically. If not, this flag can be used to authorize with no user.</p></li><li><p><code class="inline">:context</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Context to set on the query, changeset, or input</p></li><li><p><code class="inline">:tenant</code> (value that implements the <a href="Ash.ToTenant.xhtml"><code class="inline">Ash.ToTenant</code></a> protocol) - A tenant to set on the query or changeset</p></li><li><p><code class="inline">:actor</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - If an actor is provided, it will be used in conjunction with the authorizers of a resource to authorize access</p></li><li><p><code class="inline">:scope</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A value that implements the <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> protocol, for passing around actor/tenant/context in a single value. See <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> for more.</p></li><li><p><code class="inline">:query</code> - A query to seed the action with.</p></li><li><p><code class="inline">:not_found_error?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to return or raise a <code class="inline">NotFound</code> error or to return <code class="inline">nil</code> when a get? action/interface is called.</p></li><li><p><code class="inline">:stream?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If true, a stream of the results will be returned The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:stream_options</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">keyword/0</code></a>) - Options passed to <code class="inline">Ash.stream!</code>, if <code class="inline">stream?: true</code> is given</p><ul><li><p><code class="inline">:batch_size</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">integer/0</code></a>) - How many records to request in each query run. Defaults to the pagination limits on the resource, or 250.</p></li><li><p><code class="inline">:allow_stream_with</code> - The 'worst' strategy allowed to be used to fetch records. See <a href="Ash.xhtml#stream!/2"><code class="inline">Ash.stream!/2</code></a> docs for more. The default value is <code class="inline">:keyset</code>.</p></li><li><p><code class="inline">:stream_with</code> - The specific strategy to use to fetch records. See <a href="Ash.xhtml#stream!/2"><code class="inline">Ash.stream!/2</code></a> docs for more.</p></li></ul></li></ul>
  </section>
</section>
<section class="detail" id="update_opts/0">

  <div class="detail-header">
    <a href="#update_opts/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">update_opts()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/resource/interface.ex#L234" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>Options supported by code interfaces for update actions</p><h2 id="update_opts/0-options" class="section-heading"><a href="#update_opts/0-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><ul><li><p><code class="inline">:params</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Parameters to supply, ignored if the input is a changeset, only used when an identifier is given.</p></li><li><p><code class="inline">:atomic_upgrade?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If true the action will be done atomically if it can (and is configured to do so), ignoring the in memory transformations and validations. You should not generally need to disable this. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:timeout</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">timeout/0</code></a>) - A positive integer, or <code class="inline">:infinity</code>. If none is provided, the timeout configured on the domain is used.</p></li><li><p><code class="inline">:tracer</code> (one or a list of module that adopts <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a>) - A tracer that implements the <a href="Ash.Tracer.xhtml"><code class="inline">Ash.Tracer</code></a> behaviour. See that module for more.</p></li><li><p><code class="inline">:action</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - The action to use, either an Action struct or the name of the action</p></li><li><p><code class="inline">:authorize?</code> - If an actor option is provided (even if it is <code class="inline">nil</code>), authorization happens automatically. If not, this flag can be used to authorize with no user.</p></li><li><p><code class="inline">:context</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Context to set on the query, changeset, or input</p></li><li><p><code class="inline">:tenant</code> (value that implements the <a href="Ash.ToTenant.xhtml"><code class="inline">Ash.ToTenant</code></a> protocol) - A tenant to set on the query or changeset</p></li><li><p><code class="inline">:actor</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - If an actor is provided, it will be used in conjunction with the authorizers of a resource to authorize access</p></li><li><p><code class="inline">:scope</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A value that implements the <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> protocol, for passing around actor/tenant/context in a single value. See <a href="Ash.Scope.ToOpts.xhtml"><code class="inline">Ash.Scope.ToOpts</code></a> for more.</p></li><li><p><code class="inline">:return_notifications?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Use this if you're running ash actions in your own transaction and you want to manually handle sending notifications.<br/>If a transaction is ongoing, and this is false, notifications will be discarded, otherwise
the return value is <code class="inline">{:ok, result, notifications}</code> (or <code class="inline">{:ok, notifications}</code>)<br/>To send notifications later, use <code class="inline">Ash.Notifier.notify(notifications)</code>. It sends any notifications
that can be sent, and returns the rest. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:rollback_on_error?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to rollback the transaction on error, if the resource is in a transaction.<br/>If the action has <code class="inline">transaction? false</code> this option has no effect. If an error is returned from the
data layer and the resource is in a transaction, the transaction is always rolled back, regardless. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:notification_metadata</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - Metadata to be merged into the metadata field for all notifications sent from this operation. The default value is <code class="inline">%{}</code>.</p></li><li><p><code class="inline">:skip_unknown_inputs</code> - A list of inputs that, if provided, will be ignored if they are not recognized by the action. Use <code class="inline">:*</code> to indicate all unknown keys.</p></li><li><p><code class="inline">:load</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A load statement to add onto the changeset</p></li><li><p><code class="inline">:bulk_options</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">keyword/0</code></a>) - Options passed to <code class="inline">Ash.bulk_update</code>, if a query, list, or stream of inputs is provided.</p><ul><li><p><code class="inline">:atomic_update</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - A map of atomic updates to apply. See <a href="Ash.Changeset.xhtml#atomic_update/3"><code class="inline">Ash.Changeset.atomic_update/3</code></a> for more.</p></li><li><p><code class="inline">:stream_batch_size</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">integer/0</code></a>) - Batch size to use if provided a query and the query must be streamed</p></li><li><p><code class="inline">:allow_stream_with</code> - The 'worst' strategy allowed to be used to fetch records if the <code class="inline">:stream</code> strategy is chosen. See the <a href="Ash.xhtml#stream!/2"><code class="inline">Ash.stream!/2</code></a> docs for more. The default value is <code class="inline">:keyset</code>.</p></li><li><p><code class="inline">:authorize_query?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If a query is given, determines whether or not authorization is run on that query. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:select</code> (list of <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - A select statement to apply to records. Ignored if <code class="inline">return_records?</code> is not true.</p></li><li><p><code class="inline">:filter</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A filter to apply to records. This is also applied to a stream of inputs.</p></li><li><p><code class="inline">:strategy</code> - The strategy or strategies to enable. :stream is used in all cases if the data layer does not support atomics. The default value is <code class="inline">[:atomic]</code>.</p></li><li><p><code class="inline">:allow_stream_with</code> - The 'worst' strategy allowed to be used to fetch records. See <a href="Ash.xhtml#stream!/2"><code class="inline">Ash.stream!/2</code></a> docs for more. The default value is <code class="inline">:keyset</code>.</p></li><li><p><code class="inline">:stream_with</code> - The specific strategy to use to fetch records. See <a href="Ash.xhtml#stream!/2"><code class="inline">Ash.stream!/2</code></a> docs for more.</p></li><li><p><code class="inline">:max_concurrency</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">non_neg_integer/0</code></a>) - The maximum number of processes allowed to be started for parallel loading of relationships and calculations. Defaults to <code class="inline">System.schedulers_online() * 2</code></p></li><li><p><code class="inline">:lock</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">term/0</code></a>) - A lock statement to add onto the query</p></li><li><p><code class="inline">:return_query?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If <code class="inline">true</code>, the query that was ultimately used is returned as a third tuple element.</p><p>The query goes through many potential changes during a request, potentially adding
authorization filters, or replacing relationships for other data layers with their
corresponding ids. This option can be used to get the true query that was sent to
the data layer.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:reuse_values?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether calculations are allowed to reuse values that have already been loaded, or must refetch them from the data layer. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:strict?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If set to true, only specified attributes will be loaded when passing
  a list of fields to fetch on a relationship, which allows for more
  optimized data-fetching.</p><p>  See <a href="Ash.Query.xhtml#load/2"><code class="inline">Ash.Query.load/2</code></a>.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:authorize_with</code> - If set to <code class="inline">:error</code>, instead of applying authorization filters as a filter, any records not matching the authorization filter will cause an error to be returned. The default value is <code class="inline">:filter</code>.</p></li><li><p><code class="inline">:read_action</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - The action to use when building the read query.</p></li><li><p><code class="inline">:assume_casted?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to cast attributes and arguments as input. This is an optimization for cases where the input is already casted and/or not in need of casting The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:select</code> (list of <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - A select statement to apply to records. Ignored if <code class="inline">return_records?</code> is not true.</p></li><li><p><code class="inline">:authorize_query_with</code> - If set to <code class="inline">:error</code>, instead of filtering unauthorized query results, unauthorized query results will raise an appropriate forbidden error. Uses <code class="inline">authorize_with</code> if not set.</p></li><li><p><code class="inline">:authorize_changeset_with</code> - If set to <code class="inline">:error</code>, instead of filtering unauthorized changes, unauthorized changes will raise an appropriate forbidden error. Uses <code class="inline">authorize_with</code> if not set.</p></li><li><p><code class="inline">:authorize_with</code> - If set to <code class="inline">:error</code>, instead of filtering unauthorized query results, unauthorized query results will raise an appropriate forbidden error. The default value is <code class="inline">:filter</code>.</p></li><li><p><code class="inline">:private_arguments</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Private argument values to set on each changeset before validations and changes are run. The default value is <code class="inline">%{}</code>.</p></li><li><p><code class="inline">:sorted?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to sort results by their input position, in cases where <code class="inline">return_records?: true</code> was provided. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:return_records?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to return all of the records that were inserted. Defaults to false to account for large inserts. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:return_errors?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether to return all errors that occur during the operation. Defaults to the value of <code class="inline">:bulk_actions_default_to_errors?</code> in your config, or <code class="inline">false</code> if not set. Returning all errors may be expensive for large inserts. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:batch_size</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">pos_integer/0</code></a>) - The number of records to include in each batch. Defaults to the <code class="inline">default_limit</code>
or <code class="inline">max_page_size</code> of the action, or 100.</p></li><li><p><code class="inline">:return_stream?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If set to <code class="inline">true</code>, instead of an <a href="Ash.BulkResult.xhtml"><code class="inline">Ash.BulkResult</code></a>, a mixed stream is returned.</p><p>Potential elements:</p><p><code class="inline">{:notification, notification}</code> - if <code class="inline">return_notifications?</code> is set to <code class="inline">true</code>
<code class="inline">{:ok, record}</code> - if <code class="inline">return_records?</code> is set to <code class="inline">true</code>
<code class="inline">{:error, error}</code> - an error that occurred. May be changeset or an individual error.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:return_nothing?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Mutes warnings about returning nothing.</p><p>Only relevant if <code class="inline">return_stream?</code> is set to <code class="inline">true</code> and all other
<code class="inline">return_*?</code> options are set to <code class="inline">false</code>.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:stop_on_error?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If true, the first encountered error will stop the action and be returned. Otherwise, errors
will be skipped. The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:notify?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Whether or not to generate any notifications. If this is set to <code class="inline">true</code> then the data layer must return
the results from each batch. This may be intensive for large bulk actions.</p><p>Notifications will be automatically sent unless <code class="inline">return_notifications?</code> is set to <code class="inline">true</code>.</p><p>The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:transaction</code> - Whether or not to wrap the entire execution in a transaction, each batch, or not at all.</p><p>Keep in mind:</p><p><code class="inline">before_transaction</code> and <code class="inline">after_transaction</code> hooks attached to changesets will have to be run
<em>inside</em> the transaction if you choose <code class="inline">transaction: :all</code>.</p><p>The default value is <code class="inline">:batch</code>.</p></li><li><p><code class="inline">:max_concurrency</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">non_neg_integer/0</code></a>) - If set to a value greater than 0, up to that many tasks will be started to run batches asynchronously The default value is <code class="inline">0</code>.</p></li></ul></li><li><p><code class="inline">:private_arguments</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">map/0</code></a>) - Private argument values to set before validations and changes. The default value is <code class="inline">%{}</code>.</p></li></ul>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
