<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Ash.Resource.Change.CascadeDestroy - ash v3.5.33</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Ash.Resource.Change.CascadeDestroy 
    </h1>


      <section id="moduledoc" class="docstring">
<p>Cascade a resource's destroy action to a related resource's destroy action.</p><h2 id="module-timing-control">Timing Control</h2><p>The <code class="inline">after_action?</code> option controls when the cascade destroy occurs:</p><ul><li><code class="inline">after_action?: true</code> (default) - Runs as an after-action hook, making it safe for atomic actions</li><li><code class="inline">after_action?: false</code> - Runs as a before-action hook</li></ul><p>When <code class="inline">after_action?: true</code>, the change adds an after-action hook that explicitly
calls destroy on any records related via the named relationship. It will optimise
for bulk destroys where possible. This makes it safe to use in atomic actions, but
might not be possible depending on the data layer setup (see warning below).</p><p>When <code class="inline">after_action?: false</code>, the change simply runs as a before_action.
Requires keyset pagination on the primary read action of the targeted relation.</p><section role="note" class="admonition warning"><h4 class="admonition-title warning">Beware database constraints</h4><p>Think carefully before using this change with data layers which enforce
referential integrity (ie PostgreSQL and SQLite) and you may need to defer
constraints for the relationship in question.</p><p>See also:</p><ol><li><a href="https://hexdocs.pm/ash_postgres/dsl-ashpostgres-datalayer.html#postgres-references-reference-deferrable"><code class="inline">postgres.references.reference.deferrable</code> DSL</a></li><li><a href="https://hexdocs.pm/ash_sqlite/dsl-ashsqlite-datalayer.html#sqlite-references-reference-deferrable"><code class="inline">sqlite.references.reference.deferrable</code> DSL</a></li><li><a href="https://www.postgresql.org/docs/current/sql-set-constraints.html">PostgreSQL's <code class="inline">SET CONSTRAINTS</code> documentation</a></li><li><a href="https://www.sqlite.org/pragma.html#pragma_defer_foreign_keys">SQLite's <code class="inline">PRAGMA defer_foreign_keys</code> documentation</a></li></ol></section><section role="note" class="admonition tip"><h4 class="admonition-title tip">Cascading notifications</h4><p>By default notifications are disabled for the related destroy. This is to avoid potentially sending a <strong>lot</strong> of notifications for high-cardinality relationships.</p></section><h2 id="module-options">Options</h2><ul><li><p><code class="inline">:relationship</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - Required. The name of the relationship to work on</p></li><li><p><code class="inline">:action</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - The name of the destroy action to call on the related resource. Uses the primary destroy by default.</p></li><li><p><code class="inline">:read_action</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - The name of the read action to call on the related resource to find results to be destroyed</p></li><li><p><code class="inline">:return_notifications?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - Return notifications for all destroyed records? The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:after_action?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If true, cascade destroys are done in after_action hooks. If false, they run as before_action hooks. Defaults to true for atomic action compatibility The default value is <code class="inline">true</code>.</p></li></ul><h2 id="module-example">Example</h2><pre><code class="makeup elixir" translate="no"><samp class="n">change</samp><samp class="w"> </samp><samp class="p" data-group-id="3657738110-1">{</samp><samp class="nc">Ash.Resource.Change.CascadeDestroy</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">relationship</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:comments</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">action</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:destroy</samp><samp class="p" data-group-id="3657738110-1">}</samp></code></pre><p>  or, equivalently using <a href="Ash.Resource.Change.Builtins.xhtml#cascade_destroy/2"><code class="inline">Ash.Resource.Change.Builtins.cascade_destroy/2</code></a>:</p><pre><code class="makeup elixir" translate="no"><samp class="n">change</samp><samp class="w"> </samp><samp class="n">cascade_destroy</samp><samp class="p" data-group-id="9346208259-1">(</samp><samp class="ss">:comments</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">action</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:destroy</samp><samp class="p" data-group-id="9346208259-1">)</samp></code></pre>
      </section>




  </body>
</html>
