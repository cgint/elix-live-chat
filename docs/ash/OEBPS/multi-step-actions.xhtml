<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Multi-Step Actions - ash v3.5.33</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">Multi-Step Actions</h1>
<p>Actions in Ash allow you to create sophisticated workflows that coordinate multiple changes or processes. Often business logic crosses multiple resources, and we often want it to be transactional. By leveraging action lifecycle hooks, you can build powerful domain-specific operations. This guide will explore how to build and use multi-step actions using a helpdesk example.</p><p>For most use cases, hooks are the preferred approach due to their simplicity and tight integration with Ash's action lifecycle. <a href="reactor.xhtml">Reactor</a> is the comprehensive solution for truly complex orchestration scenarios. Additionally, you can write <a href="generic-actions.xhtml">generic actions</a> by hand, implementing an action with fully custom code. Reactors can be used as the <code class="inline">run</code> function for generic actions, giving them first class support in Ash extensions. See <a href="#generic-action-example">below</a> for an example.</p><h2 id="when-to-use-hooks-vs-reactors-vs-generic-actions">When to use hooks vs reactors vs generic actions</h2><p>You should use hooks for most multi-step workflow scenarios as they provide simplicity and leverage Ash's transactional nature. The key decision point is whether you need compensation/rollback across external services:</p><p><strong>Use hooks when:</strong></p><ul><li>Coordinating changes within Ash resources (leverages database transactions)</li><li>Performing side effects that don't require rollback (logging, notifications)</li><li>Working with external services that don't need compensation logic</li><li>Building small-to-medium complexity workflows</li></ul><p><strong>Use <a href="reactor.xhtml">reactor</a> when:</strong></p><ul><li>You need to compensate/undo changes across multiple external services</li><li>Building complex workflows that require sophisticated error handling and rollback logic</li><li>Coordinating long-running processes that span multiple systems</li></ul><p><strong>Use <a href="generic-actions.xhtml">generic actions</a> when:</strong></p><ul><li>You need a high-level action that works on multiple resources, and reactor or hooks are not fitting</li><li>There aren't side effects or external services</li><li>Short transactional operations that can be understood at a glance</li></ul><section role="note" class="admonition info"><h3 id="durable-workflows" class="admonition-title info">Durable Workflows</h3><p>For durable workflows, we suggest to use Oban. We provide tools to integrate with Oban in <a href="https://hexdocs.pm/ash_oban">AshOban</a>. AshOban supports very specific types of common workflows, like &quot;triggers&quot; that run periodically for resources, and &quot;scheduled actions&quot; which run generic actions on a cron. You should not be afraid to write &quot;standard&quot; Oban jobs and code where possible. Don't bend over backwards trying to fit everything into AshOban.</p></section><h2 id="action-lifecycle-hooks">Action Lifecycle Hooks</h2><p>At the core of Ash's multi-step action capability are action lifecycle hooks. These hooks allow you to run code at specific points during an action's execution:</p><ul><li><p><strong>before_transaction</strong>: Runs before the transaction is started. Useful for operations that should happen before the transaction, like external API calls.</p></li><li><p><strong>before_action</strong>: Runs in the transaction, before the data layer is called. Perfect for side effects and expensive logic. This hook can be used with changesets and queries.</p></li><li><p><strong>after_action</strong>: Runs in the transaction, after the data layer is called, only if the action is successful. Ideal for transactional side effects that should only happen on success. This hook can be used with changesets and queries.</p></li><li><p><strong>after_transaction</strong>: Runs after the transaction completes, in both success and error cases. Ideal for operations that should happen regardless of the transaction outcome, and for operations that work with external services.</p></li></ul><p>There are other hooks that we won't go into here, as they are rarely used. See the documentation in <a href="Ash.Changeset.xhtml"><code class="inline">Ash.Changeset</code></a> for more.</p><ul><li><strong>around_action</strong>: Runs code both before and after the action logic, within the transaction.</li><li><strong>around_transaction</strong>: Runs code both before and after the transaction, outside the transaction.</li></ul><h2 id="examples">Examples</h2><p>Let's explore multi-step actions through a series of increasingly complex examples using a helpdesk system. Each example builds on concepts from the previous ones.</p><h3 id="example-1-simple-activity-logging">Example 1: Simple Activity Logging</h3><p>The simplest multi-step action uses a single hook to perform a transactional effect. Here's a basic example that logs ticket creation by inserting an activity log.</p><pre><code class="makeup elixir" translate="no"><span class="kd">defmodule</span><span class="w"> </span><span class="nc">HelpDesk.Changes.LogActivity</span><span class="w"> </span><span class="k" data-group-id="8246651038-1">do</span><span class="w">
  </span><span class="kn">use</span><span class="w"> </span><span class="nc">Ash.Resource.Change</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">change</span><span class="p" data-group-id="8246651038-2">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="c">_opts</span><span class="p">,</span><span class="w"> </span><span class="c">_context</span><span class="p" data-group-id="8246651038-2">)</span><span class="w"> </span><span class="k" data-group-id="8246651038-3">do</span><span class="w">
    </span><span class="c1"># Log activity after the ticket is successfully created</span><span class="w">
    </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">after_action</span><span class="p" data-group-id="8246651038-4">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="k" data-group-id="8246651038-5">fn</span><span class="w"> </span><span class="c">_changeset</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
      </span><span class="nc">HelpDesk.ActivityLog</span><span class="o">.</span><span class="n">log</span><span class="p" data-group-id="8246651038-6">(</span><span class="s">&quot;Ticket </span><span class="si" data-group-id="8246651038-7">#{</span><span class="n">ticket</span><span class="o">.</span><span class="n">id</span><span class="si" data-group-id="8246651038-7">}</span><span class="s"> created: </span><span class="si" data-group-id="8246651038-8">#{</span><span class="n">ticket</span><span class="o">.</span><span class="n">title</span><span class="si" data-group-id="8246651038-8">}</span><span class="s">&quot;</span><span class="p" data-group-id="8246651038-6">)</span><span class="w">
      </span><span class="p" data-group-id="8246651038-9">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="8246651038-9">}</span><span class="w">
    </span><span class="k" data-group-id="8246651038-5">end</span><span class="p" data-group-id="8246651038-4">)</span><span class="w">
  </span><span class="k" data-group-id="8246651038-3">end</span><span class="w">
</span><span class="k" data-group-id="8246651038-1">end</span></code></pre><p>Use it in your Ticket resource:</p><pre><code class="makeup elixir" translate="no"><span class="n">actions</span><span class="w"> </span><span class="k" data-group-id="0851628304-1">do</span><span class="w">
  </span><span class="n">create</span><span class="w"> </span><span class="ss">:create</span><span class="w"> </span><span class="k" data-group-id="0851628304-2">do</span><span class="w">
    </span><span class="n">accept</span><span class="w"> </span><span class="p" data-group-id="0851628304-3">[</span><span class="ss">:title</span><span class="p">,</span><span class="w"> </span><span class="ss">:description</span><span class="p" data-group-id="0851628304-3">]</span><span class="w">
    </span><span class="n">change</span><span class="w"> </span><span class="nc">HelpDesk.Changes.LogActivity</span><span class="w">
  </span><span class="k" data-group-id="0851628304-2">end</span><span class="w">
</span><span class="k" data-group-id="0851628304-1">end</span></code></pre><h3 id="example-2-multi-hook-ticket-assignment">Example 2: Multi-Hook Ticket Assignment</h3><p>Building on the first example, let's add ticket assignment logic that uses multiple hooks to coordinate a transactional workflow:</p><pre><code class="makeup elixir" translate="no"><span class="kd">defmodule</span><span class="w"> </span><span class="nc">HelpDesk.Changes.AssignTicket</span><span class="w"> </span><span class="k" data-group-id="5240606585-1">do</span><span class="w">
  </span><span class="kn">use</span><span class="w"> </span><span class="nc">Ash.Resource.Change</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">change</span><span class="p" data-group-id="5240606585-2">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="c">_opts</span><span class="p">,</span><span class="w"> </span><span class="c">_context</span><span class="p" data-group-id="5240606585-2">)</span><span class="w"> </span><span class="k" data-group-id="5240606585-3">do</span><span class="w">
    </span><span class="n">changeset</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">before_action</span><span class="p" data-group-id="5240606585-4">(</span><span class="o">&amp;</span><span class="n">find_and_assign_agent</span><span class="o">/</span><span class="mi">1</span><span class="p" data-group-id="5240606585-4">)</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">after_action</span><span class="p" data-group-id="5240606585-5">(</span><span class="o">&amp;</span><span class="n">notify_assignment</span><span class="o">/</span><span class="mi">2</span><span class="p" data-group-id="5240606585-5">)</span><span class="w">
  </span><span class="k" data-group-id="5240606585-3">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">find_and_assign_agent</span><span class="p" data-group-id="5240606585-6">(</span><span class="n">changeset</span><span class="p" data-group-id="5240606585-6">)</span><span class="w"> </span><span class="k" data-group-id="5240606585-7">do</span><span class="w">
    </span><span class="k">case</span><span class="w"> </span><span class="nc">HelpDesk.AgentManager</span><span class="o">.</span><span class="n">find_available_agent</span><span class="p" data-group-id="5240606585-8">(</span><span class="p" data-group-id="5240606585-8">)</span><span class="w"> </span><span class="k" data-group-id="5240606585-9">do</span><span class="w">
      </span><span class="p" data-group-id="5240606585-10">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">agent</span><span class="p" data-group-id="5240606585-10">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="n">changeset</span><span class="w">
        </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">force_change_attribute</span><span class="p" data-group-id="5240606585-11">(</span><span class="ss">:agent_id</span><span class="p">,</span><span class="w"> </span><span class="n">agent</span><span class="o">.</span><span class="n">id</span><span class="p" data-group-id="5240606585-11">)</span><span class="w">
        </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">force_change_attribute</span><span class="p" data-group-id="5240606585-12">(</span><span class="ss">:status</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;assigned&quot;</span><span class="p" data-group-id="5240606585-12">)</span><span class="w">
        </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">put_context</span><span class="p" data-group-id="5240606585-13">(</span><span class="ss">:assigned_agent</span><span class="p">,</span><span class="w"> </span><span class="n">agent</span><span class="p" data-group-id="5240606585-13">)</span><span class="w">

      </span><span class="p" data-group-id="5240606585-14">{</span><span class="ss">:error</span><span class="p">,</span><span class="w"> </span><span class="n">reason</span><span class="p" data-group-id="5240606585-14">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">add_error</span><span class="p" data-group-id="5240606585-15">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;No agents available: </span><span class="si" data-group-id="5240606585-16">#{</span><span class="n">reason</span><span class="si" data-group-id="5240606585-16">}</span><span class="s">&quot;</span><span class="p" data-group-id="5240606585-15">)</span><span class="w">
    </span><span class="k" data-group-id="5240606585-9">end</span><span class="w">
  </span><span class="k" data-group-id="5240606585-7">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">notify_assignment</span><span class="p" data-group-id="5240606585-17">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="5240606585-17">)</span><span class="w"> </span><span class="k" data-group-id="5240606585-18">do</span><span class="w">
    </span><span class="nc">HelpDesk.Notifications</span><span class="o">.</span><span class="n">notify_assignment</span><span class="p" data-group-id="5240606585-19">(</span><span class="n">changeset</span><span class="o">.</span><span class="n">context</span><span class="p" data-group-id="5240606585-20">[</span><span class="ss">:agent</span><span class="p" data-group-id="5240606585-20">]</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="5240606585-19">)</span><span class="w">

    </span><span class="p" data-group-id="5240606585-21">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="5240606585-21">}</span><span class="w">
  </span><span class="k" data-group-id="5240606585-18">end</span><span class="w">
</span><span class="k" data-group-id="5240606585-1">end</span></code></pre><h3 id="example-3-complex-workflow-with-external-services">Example 3: Complex Workflow with External Services</h3><p>This example shows a sophisticated workflow that interacts with external services and handles various error conditions:</p><pre><code class="makeup elixir" translate="no"><span class="kd">defmodule</span><span class="w"> </span><span class="nc">HelpDesk.Changes.ProcessUrgentTicket</span><span class="w"> </span><span class="k" data-group-id="6632149957-1">do</span><span class="w">
  </span><span class="kn">use</span><span class="w"> </span><span class="nc">Ash.Resource.Change</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">change</span><span class="p" data-group-id="6632149957-2">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="c">_opts</span><span class="p">,</span><span class="w"> </span><span class="c">_context</span><span class="p" data-group-id="6632149957-2">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-3">do</span><span class="w">
    </span><span class="n">changeset</span><span class="w">
    </span><span class="c1"># uses before_transaction as it communicates with an external service</span><span class="w">
    </span><span class="c1"># and we don&#39;t want to keep a transaction longer than necessary</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">before_transaction</span><span class="p" data-group-id="6632149957-4">(</span><span class="o">&amp;</span><span class="n">validate_external_services</span><span class="o">/</span><span class="mi">1</span><span class="p" data-group-id="6632149957-4">)</span><span class="w">
    </span><span class="c1"># Prepare for processing transactionally</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">before_action</span><span class="p" data-group-id="6632149957-5">(</span><span class="o">&amp;</span><span class="n">prepare_urgent_processing</span><span class="o">/</span><span class="mi">1</span><span class="p" data-group-id="6632149957-5">)</span><span class="w">
    </span><span class="c1"># Complete the workflow transactionally</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">after_action</span><span class="p" data-group-id="6632149957-6">(</span><span class="o">&amp;</span><span class="n">complete_urgent_workflow</span><span class="o">/</span><span class="mi">2</span><span class="p" data-group-id="6632149957-6">)</span><span class="w">
    </span><span class="c1"># Perform success or failure logic after the transaction</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">after_transaction</span><span class="p" data-group-id="6632149957-7">(</span><span class="o">&amp;</span><span class="n">cleanup_and_notify</span><span class="o">/</span><span class="mi">2</span><span class="p" data-group-id="6632149957-7">)</span><span class="w">
  </span><span class="k" data-group-id="6632149957-3">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">validate_external_services</span><span class="p" data-group-id="6632149957-8">(</span><span class="n">changeset</span><span class="p" data-group-id="6632149957-8">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-9">do</span><span class="w">
    </span><span class="c1"># Check external services before starting transaction</span><span class="w">
    </span><span class="k">case</span><span class="w"> </span><span class="nc">HelpDesk.ExternalServices</span><span class="o">.</span><span class="n">health_check</span><span class="p" data-group-id="6632149957-10">(</span><span class="p" data-group-id="6632149957-10">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-11">do</span><span class="w">
      </span><span class="ss">:ok</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="n">changeset</span><span class="w">

      </span><span class="p" data-group-id="6632149957-12">{</span><span class="ss">:error</span><span class="p">,</span><span class="w"> </span><span class="n">service</span><span class="p" data-group-id="6632149957-12">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">add_error</span><span class="p" data-group-id="6632149957-13">(</span><span class="n">changeset</span><span class="p">,</span><span class="w">
          </span><span class="ss">message</span><span class="p">:</span><span class="w"> </span><span class="s">&quot;External service </span><span class="si" data-group-id="6632149957-14">#{</span><span class="n">service</span><span class="si" data-group-id="6632149957-14">}</span><span class="s"> unavailable for urgent processing&quot;</span><span class="p" data-group-id="6632149957-13">)</span><span class="w">
    </span><span class="k" data-group-id="6632149957-11">end</span><span class="w">
  </span><span class="k" data-group-id="6632149957-9">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">prepare_urgent_processing</span><span class="p" data-group-id="6632149957-15">(</span><span class="n">changeset</span><span class="p" data-group-id="6632149957-15">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-16">do</span><span class="w">
    </span><span class="n">priority</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">get_attribute</span><span class="p" data-group-id="6632149957-17">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="ss">:priority</span><span class="p" data-group-id="6632149957-17">)</span><span class="w">

    </span><span class="k">if</span><span class="w"> </span><span class="n">priority</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s">&quot;urgent&quot;</span><span class="w"> </span><span class="k" data-group-id="6632149957-18">do</span><span class="w">
      </span><span class="c1"># Reserve resources for urgent processing</span><span class="w">
      </span><span class="k">case</span><span class="w"> </span><span class="nc">HelpDesk.ResourceManager</span><span class="o">.</span><span class="n">reserve_urgent_slot</span><span class="p" data-group-id="6632149957-19">(</span><span class="p" data-group-id="6632149957-19">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-20">do</span><span class="w">
        </span><span class="p" data-group-id="6632149957-21">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">slot_id</span><span class="p" data-group-id="6632149957-21">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
          </span><span class="n">changeset</span><span class="w">
          </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">force_change_attribute</span><span class="p" data-group-id="6632149957-22">(</span><span class="ss">:status</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;urgent_processing&quot;</span><span class="p" data-group-id="6632149957-22">)</span><span class="w">
          </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">force_change_attribute</span><span class="p" data-group-id="6632149957-23">(</span><span class="ss">:processing_slot_id</span><span class="p">,</span><span class="w"> </span><span class="n">slot_id</span><span class="p" data-group-id="6632149957-23">)</span><span class="w">
          </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">put_context</span><span class="p" data-group-id="6632149957-24">(</span><span class="ss">:reserved_slot</span><span class="p">,</span><span class="w"> </span><span class="n">slot_id</span><span class="p" data-group-id="6632149957-24">)</span><span class="w">

        </span><span class="p" data-group-id="6632149957-25">{</span><span class="ss">:error</span><span class="p">,</span><span class="w"> </span><span class="ss">:no_slots_available</span><span class="p" data-group-id="6632149957-25">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
          </span><span class="c1"># Fallback to normal priority with notification</span><span class="w">
          </span><span class="n">changeset</span><span class="w">
          </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">force_change_attribute</span><span class="p" data-group-id="6632149957-26">(</span><span class="ss">:priority</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;high&quot;</span><span class="p" data-group-id="6632149957-26">)</span><span class="w">
          </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">put_context</span><span class="p" data-group-id="6632149957-27">(</span><span class="ss">:priority_downgraded</span><span class="p">,</span><span class="w"> </span><span class="no">true</span><span class="p" data-group-id="6632149957-27">)</span><span class="w">
      </span><span class="k" data-group-id="6632149957-20">end</span><span class="w">
    </span><span class="k" data-group-id="6632149957-18">else</span><span class="w">
      </span><span class="n">changeset</span><span class="w">
    </span><span class="k" data-group-id="6632149957-18">end</span><span class="w">
  </span><span class="k" data-group-id="6632149957-16">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">complete_urgent_workflow</span><span class="p" data-group-id="6632149957-28">(</span><span class="c">_changeset</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="6632149957-28">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-29">do</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="n">ticket</span><span class="o">.</span><span class="n">status</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s">&quot;urgent_processing&quot;</span><span class="w"> </span><span class="k" data-group-id="6632149957-30">do</span><span class="w">
      </span><span class="c1"># Create escalation path and update external tracking</span><span class="w">
      </span><span class="k">with</span><span class="w"> </span><span class="p" data-group-id="6632149957-31">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="c">_escalation</span><span class="p" data-group-id="6632149957-31">}</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">create_escalation_path</span><span class="p" data-group-id="6632149957-32">(</span><span class="n">ticket</span><span class="p" data-group-id="6632149957-32">)</span><span class="p">,</span><span class="w">
           </span><span class="p" data-group-id="6632149957-33">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="c">_external_ref</span><span class="p" data-group-id="6632149957-33">}</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nc">HelpDesk.ExternalServices</span><span class="o">.</span><span class="n">create_urgent_case</span><span class="p" data-group-id="6632149957-34">(</span><span class="n">ticket</span><span class="p" data-group-id="6632149957-34">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-35">do</span><span class="w">

        </span><span class="c1"># Update ticket with external reference</span><span class="w">
        </span><span class="n">ticket</span><span class="w">
        </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">for_update</span><span class="p" data-group-id="6632149957-36">(</span><span class="ss">:add_external_reference</span><span class="p">,</span><span class="w"> </span><span class="p" data-group-id="6632149957-37">%{</span><span class="w">
          </span><span class="ss">external_ref</span><span class="p">:</span><span class="w"> </span><span class="s">&quot;URG-</span><span class="si" data-group-id="6632149957-38">#{</span><span class="n">ticket</span><span class="o">.</span><span class="n">id</span><span class="si" data-group-id="6632149957-38">}</span><span class="s">-</span><span class="si" data-group-id="6632149957-39">#{</span><span class="nc">System</span><span class="o">.</span><span class="n">system_time</span><span class="p" data-group-id="6632149957-40">(</span><span class="ss">:second</span><span class="p" data-group-id="6632149957-40">)</span><span class="si" data-group-id="6632149957-39">}</span><span class="s">&quot;</span><span class="w">
        </span><span class="p" data-group-id="6632149957-37">}</span><span class="p" data-group-id="6632149957-36">)</span><span class="w">
        </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">HelpDesk.Ticket</span><span class="o">.</span><span class="n">update!</span><span class="p" data-group-id="6632149957-41">(</span><span class="p" data-group-id="6632149957-41">)</span><span class="w">
      </span><span class="k" data-group-id="6632149957-35">else</span><span class="w">
        </span><span class="p" data-group-id="6632149957-42">{</span><span class="ss">:error</span><span class="p">,</span><span class="w"> </span><span class="n">reason</span><span class="p" data-group-id="6632149957-42">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
          </span><span class="c1"># Handle errors gracefully</span><span class="w">
          </span><span class="nc">HelpDesk.Logger</span><span class="o">.</span><span class="n">error</span><span class="p" data-group-id="6632149957-43">(</span><span class="s">&quot;Failed to complete urgent workflow for ticket </span><span class="si" data-group-id="6632149957-44">#{</span><span class="n">ticket</span><span class="o">.</span><span class="n">id</span><span class="si" data-group-id="6632149957-44">}</span><span class="s">: </span><span class="si" data-group-id="6632149957-45">#{</span><span class="n">inspect</span><span class="p" data-group-id="6632149957-46">(</span><span class="n">reason</span><span class="p" data-group-id="6632149957-46">)</span><span class="si" data-group-id="6632149957-45">}</span><span class="s">&quot;</span><span class="p" data-group-id="6632149957-43">)</span><span class="w">
          </span><span class="p" data-group-id="6632149957-47">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="6632149957-47">}</span><span class="w">
      </span><span class="k" data-group-id="6632149957-35">end</span><span class="w">
    </span><span class="k" data-group-id="6632149957-30">end</span><span class="w">

    </span><span class="p" data-group-id="6632149957-48">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="6632149957-48">}</span><span class="w">
  </span><span class="k" data-group-id="6632149957-29">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">cleanup_and_notify</span><span class="p" data-group-id="6632149957-49">(</span><span class="p" data-group-id="6632149957-50">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="6632149957-50">}</span><span class="p">,</span><span class="w"> </span><span class="n">changeset</span><span class="p" data-group-id="6632149957-49">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-51">do</span><span class="w">
    </span><span class="c1"># Success case - perform cleanup and notifications</span><span class="w">
    </span><span class="c1"># Any more complex cleanup than this should be</span><span class="w">
    </span><span class="c1"># pushing you to consider reactor and/or oban</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="n">slot_id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">get_context</span><span class="p" data-group-id="6632149957-52">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="ss">:reserved_slot</span><span class="p" data-group-id="6632149957-52">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-53">do</span><span class="w">
      </span><span class="nc">HelpDesk.ResourceManager</span><span class="o">.</span><span class="n">release_slot</span><span class="p" data-group-id="6632149957-54">(</span><span class="n">slot_id</span><span class="p" data-group-id="6632149957-54">)</span><span class="w">
    </span><span class="k" data-group-id="6632149957-53">end</span><span class="w">

    </span><span class="k">if</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">get_context</span><span class="p" data-group-id="6632149957-55">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="ss">:priority_downgraded</span><span class="p" data-group-id="6632149957-55">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-56">do</span><span class="w">
      </span><span class="nc">HelpDesk.Notifications</span><span class="o">.</span><span class="n">notify_priority_downgrade</span><span class="p" data-group-id="6632149957-57">(</span><span class="n">ticket</span><span class="p" data-group-id="6632149957-57">)</span><span class="w">
    </span><span class="k" data-group-id="6632149957-56">end</span><span class="w">

    </span><span class="nc">HelpDesk.Metrics</span><span class="o">.</span><span class="n">increment_urgent_tickets</span><span class="p" data-group-id="6632149957-58">(</span><span class="p" data-group-id="6632149957-58">)</span><span class="w">
    </span><span class="p" data-group-id="6632149957-59">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="6632149957-59">}</span><span class="w">
  </span><span class="k" data-group-id="6632149957-51">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">cleanup_and_notify</span><span class="p" data-group-id="6632149957-60">(</span><span class="p" data-group-id="6632149957-61">{</span><span class="ss">:error</span><span class="p">,</span><span class="w"> </span><span class="c">_reason</span><span class="p" data-group-id="6632149957-61">}</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">error</span><span class="p">,</span><span class="w"> </span><span class="n">changeset</span><span class="p" data-group-id="6632149957-60">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-62">do</span><span class="w">
    </span><span class="c1"># Error case - clean up resources</span><span class="w">
    </span><span class="k">if</span><span class="w"> </span><span class="n">slot_id</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">get_context</span><span class="p" data-group-id="6632149957-63">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="ss">:reserved_slot</span><span class="p" data-group-id="6632149957-63">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-64">do</span><span class="w">
      </span><span class="nc">HelpDesk.ResourceManager</span><span class="o">.</span><span class="n">release_slot</span><span class="p" data-group-id="6632149957-65">(</span><span class="n">slot_id</span><span class="p" data-group-id="6632149957-65">)</span><span class="w">
    </span><span class="k" data-group-id="6632149957-64">end</span><span class="w">

    </span><span class="n">error</span><span class="w">
  </span><span class="k" data-group-id="6632149957-62">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">create_escalation_path</span><span class="p" data-group-id="6632149957-66">(</span><span class="n">ticket</span><span class="p" data-group-id="6632149957-66">)</span><span class="w"> </span><span class="k" data-group-id="6632149957-67">do</span><span class="w">
    </span><span class="nc">HelpDesk.Escalation</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">for_create</span><span class="p" data-group-id="6632149957-68">(</span><span class="ss">:create</span><span class="p">,</span><span class="w"> </span><span class="p" data-group-id="6632149957-69">%{</span><span class="w">
      </span><span class="ss">ticket_id</span><span class="p">:</span><span class="w"> </span><span class="n">ticket</span><span class="o">.</span><span class="n">id</span><span class="p">,</span><span class="w">
      </span><span class="ss">level</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
      </span><span class="ss">escalated_at</span><span class="p">:</span><span class="w"> </span><span class="nc">DateTime</span><span class="o">.</span><span class="n">utc_now</span><span class="p" data-group-id="6632149957-70">(</span><span class="p" data-group-id="6632149957-70">)</span><span class="w">
    </span><span class="p" data-group-id="6632149957-69">}</span><span class="p" data-group-id="6632149957-68">)</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">HelpDesk.Escalation</span><span class="o">.</span><span class="n">create</span><span class="p" data-group-id="6632149957-71">(</span><span class="p" data-group-id="6632149957-71">)</span><span class="w">
  </span><span class="k" data-group-id="6632149957-67">end</span><span class="w">
</span><span class="k" data-group-id="6632149957-1">end</span></code></pre><p>These examples demonstrate the progression from simple logging to complex cross-resource workflows. Each example builds on the previous concepts while introducing new patterns and considerations for multi-step actions.</p><h3 id="shortcuts-for-hooks">Shortcuts for hooks</h3><p>There are multiple ways to add hooks to actions. What we showed above, defining an <a href="Ash.Resource.Change.xhtml"><code class="inline">Ash.Resource.Change</code></a> module, and using the functions in <a href="Ash.Changeset.xhtml"><code class="inline">Ash.Changeset</code></a> to add callbacks to the module is the most organized &amp; idiomatic way. However, you can also use the following techniques as shorthand. In general, prefer to write your changes into modules to keep your resources clean and keep compile times down (more smaller modules is typically better than fewer larger modules).</p><h4>Anonymous Function Changes</h4><p>Here we use an anonymous function change, which is a shorthand for defining a change module with a single function. Just like in the <code class="inline">change/3</code> function, you can add hooks to the changeset.</p><pre><code class="makeup elixir" translate="no"><span class="n">create</span><span class="w"> </span><span class="ss">:open_and_assign</span><span class="w"> </span><span class="k" data-group-id="5501308834-1">do</span><span class="w">
  </span><span class="n">change</span><span class="w"> </span><span class="k" data-group-id="5501308834-2">fn</span><span class="w"> </span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="n">context</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
    </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">after_action</span><span class="p" data-group-id="5501308834-3">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="k" data-group-id="5501308834-4">fn</span><span class="w"> </span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="n">result</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
      </span><span class="n">...</span><span class="w">
    </span><span class="k" data-group-id="5501308834-4">end</span><span class="p" data-group-id="5501308834-3">)</span><span class="w">
  </span><span class="k" data-group-id="5501308834-2">end</span><span class="w">
</span><span class="k" data-group-id="5501308834-1">end</span></code></pre><h4>Builtin Hook Changes</h4><p>If you know that you just want to add a single hook to an action, you can use some of the functions in <a href="Ash.Resource.Change.Builtins.xhtml"><code class="inline">Ash.Resource.Change.Builtins</code></a>, which are simple shorthands for the above form. For example:</p><pre><code class="makeup elixir" translate="no"><span class="n">create</span><span class="w"> </span><span class="ss">:open_and_assign</span><span class="w"> </span><span class="k" data-group-id="1780513170-1">do</span><span class="w">
  </span><span class="n">change</span><span class="w"> </span><span class="n">after_action</span><span class="p" data-group-id="1780513170-2">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="n">result</span><span class="p">,</span><span class="w"> </span><span class="n">context</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
    </span><span class="n">...</span><span class="w">
  </span><span class="k">end</span><span class="p" data-group-id="1780513170-2">)</span><span class="w">
</span><span class="k" data-group-id="1780513170-1">end</span></code></pre><p>Notice how the anonymous function takes an extra argument. In the first format above, the <code class="inline">context</code> value came from <code class="inline">change fn changeset, context -&gt;</code>, but in this format, it is provided as an argument at the end of the builtin function, i.e <code class="inline">change after_action(changeset, result, context -&gt; .</code></p><h2 id="batch-callbacks">Batch Callbacks</h2><p>When working with bulk actions (like <a href="Ash.xhtml#bulk_create/3"><code class="inline">Ash.bulk_create/3</code></a>, <a href="Ash.xhtml#bulk_update/3"><code class="inline">Ash.bulk_update/3</code></a>, etc.), you can optimize your changes by implementing batch callbacks. These allow you to process multiple changesets together, which can be much more efficient than processing them individually.</p><h3 id="understanding-batch-callbacks">Understanding Batch Callbacks</h3><p>Batch callbacks are optional methods you can implement in your change modules:</p><ul><li><strong><code class="inline">batch_change/3</code></strong>: Replaces <code class="inline">change/3</code> for batch operations, receiving a list of changesets</li><li><strong><code class="inline">before_batch/3</code></strong>: Runs before the batch is sent to the data layer</li><li><strong><code class="inline">after_batch/3</code></strong>: Runs after the batch completes, receiving changeset-result pairs</li></ul><section role="note" class="admonition info"><h3 id="batch-operations-and-transactions" class="admonition-title info">Batch Operations and Transactions</h3><p>The batch logic is currently all within transactions. There is no <code class="inline">before_batch_transaction</code> or <code class="inline">after_batch_transaction</code> hooks yet.</p></section><section role="note" class="admonition warning"><h3 id="when-are-batch-callbacks-used" class="admonition-title warning">When are batch callbacks used?</h3><ul><li><code class="inline">batch_change/3</code> must be defined for <code class="inline">before_batch/3</code> and <code class="inline">after_batch/3</code> to be called</li><li>The exception is <code class="inline">after_batch/3</code>, which is also called after atomic changes when <code class="inline">atomic/3</code> is defined</li><li><code class="inline">before_batch/3</code> is ignored when calling changes atomically</li><li>If you define <code class="inline">batch_change/3</code>, you can omit <code class="inline">change/3</code> entirely</li></ul></section><h3 id="example-batch-processing-with-external-api">Example: Batch Processing with External API</h3><p>Here's an example that demonstrates efficient batch processing for ticket creation with external service integration:</p><pre><code class="makeup elixir" translate="no"><span class="kd">defmodule</span><span class="w"> </span><span class="nc">HelpDesk.Changes.BatchNotifyExternalSystem</span><span class="w"> </span><span class="k" data-group-id="7782020680-1">do</span><span class="w">
  </span><span class="kn">use</span><span class="w"> </span><span class="nc">Ash.Resource.Change</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">batch_change</span><span class="p" data-group-id="7782020680-2">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="c">_opts</span><span class="p">,</span><span class="w"> </span><span class="c">_context</span><span class="p" data-group-id="7782020680-2">)</span><span class="w"> </span><span class="k" data-group-id="7782020680-3">do</span><span class="w">
    </span><span class="c1"># Process all changesets together - you can do expensive setup here</span><span class="w">
    </span><span class="c1"># that would be wasteful to repeat for each individual changeset</span><span class="w">
    </span><span class="nc">Enum</span><span class="o">.</span><span class="n">map</span><span class="p" data-group-id="7782020680-4">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="o">&amp;</span><span class="n">prepare_for_external_notification</span><span class="o">/</span><span class="mi">1</span><span class="p" data-group-id="7782020680-4">)</span><span class="w">
  </span><span class="k" data-group-id="7782020680-3">end</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">before_batch</span><span class="p" data-group-id="7782020680-5">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">,</span><span class="w"> </span><span class="n">context</span><span class="p" data-group-id="7782020680-5">)</span><span class="w"> </span><span class="k" data-group-id="7782020680-6">do</span><span class="w">
    </span><span class="c1"># Validate external service availability before processing the batch</span><span class="w">
    </span><span class="k">case</span><span class="w"> </span><span class="nc">HelpDesk.ExternalAPI</span><span class="o">.</span><span class="n">health_check</span><span class="p" data-group-id="7782020680-7">(</span><span class="p" data-group-id="7782020680-7">)</span><span class="w"> </span><span class="k" data-group-id="7782020680-8">do</span><span class="w">
      </span><span class="ss">:ok</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="c1"># Mark all changesets as ready for external notification</span><span class="w">
        </span><span class="nc">Enum</span><span class="o">.</span><span class="n">map</span><span class="p" data-group-id="7782020680-9">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="k" data-group-id="7782020680-10">fn</span><span class="w"> </span><span class="n">changeset</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
          </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">put_context</span><span class="p" data-group-id="7782020680-11">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="ss">:external_api_ready</span><span class="p">,</span><span class="w"> </span><span class="no">true</span><span class="p" data-group-id="7782020680-11">)</span><span class="w">
        </span><span class="k" data-group-id="7782020680-10">end</span><span class="p" data-group-id="7782020680-9">)</span><span class="w">

      </span><span class="p" data-group-id="7782020680-12">{</span><span class="ss">:error</span><span class="p">,</span><span class="w"> </span><span class="n">reason</span><span class="p" data-group-id="7782020680-12">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="c1"># Add errors to all changesets if external service is down</span><span class="w">
        </span><span class="nc">Enum</span><span class="o">.</span><span class="n">map</span><span class="p" data-group-id="7782020680-13">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="k" data-group-id="7782020680-14">fn</span><span class="w"> </span><span class="n">changeset</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
          </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">add_error</span><span class="p" data-group-id="7782020680-15">(</span><span class="n">changeset</span><span class="p">,</span><span class="w">
            </span><span class="ss">message</span><span class="p">:</span><span class="w"> </span><span class="s">&quot;External API unavailable: </span><span class="si" data-group-id="7782020680-16">#{</span><span class="n">reason</span><span class="si" data-group-id="7782020680-16">}</span><span class="s">&quot;</span><span class="p" data-group-id="7782020680-15">)</span><span class="w">
        </span><span class="k" data-group-id="7782020680-14">end</span><span class="p" data-group-id="7782020680-13">)</span><span class="w">
    </span><span class="k" data-group-id="7782020680-8">end</span><span class="w">
  </span><span class="k" data-group-id="7782020680-6">end</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">after_batch</span><span class="p" data-group-id="7782020680-17">(</span><span class="n">changesets_and_results</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">,</span><span class="w"> </span><span class="n">context</span><span class="p" data-group-id="7782020680-17">)</span><span class="w"> </span><span class="k" data-group-id="7782020680-18">do</span><span class="w">
    </span><span class="c1"># Efficiently batch notify external system</span><span class="w">
    </span><span class="n">notifications</span><span class="w"> </span><span class="o">=</span><span class="w">
      </span><span class="n">changesets_and_results</span><span class="w">
      </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Enum</span><span class="o">.</span><span class="n">filter</span><span class="p" data-group-id="7782020680-19">(</span><span class="k" data-group-id="7782020680-20">fn</span><span class="w"> </span><span class="p" data-group-id="7782020680-21">{</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="c">_result</span><span class="p" data-group-id="7782020680-21">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">get_context</span><span class="p" data-group-id="7782020680-22">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="ss">:external_api_ready</span><span class="p">,</span><span class="w"> </span><span class="no">false</span><span class="p" data-group-id="7782020680-22">)</span><span class="w">
      </span><span class="k" data-group-id="7782020680-20">end</span><span class="p" data-group-id="7782020680-19">)</span><span class="w">
      </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Enum</span><span class="o">.</span><span class="n">map</span><span class="p" data-group-id="7782020680-23">(</span><span class="k" data-group-id="7782020680-24">fn</span><span class="w"> </span><span class="p" data-group-id="7782020680-25">{</span><span class="c">_changeset</span><span class="p">,</span><span class="w"> </span><span class="n">result</span><span class="p" data-group-id="7782020680-25">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="p" data-group-id="7782020680-26">%{</span><span class="w">
          </span><span class="ss">ticket_id</span><span class="p">:</span><span class="w"> </span><span class="n">result</span><span class="o">.</span><span class="n">id</span><span class="p">,</span><span class="w">
          </span><span class="ss">title</span><span class="p">:</span><span class="w"> </span><span class="n">result</span><span class="o">.</span><span class="n">title</span><span class="p">,</span><span class="w">
          </span><span class="ss">created_at</span><span class="p">:</span><span class="w"> </span><span class="n">result</span><span class="o">.</span><span class="n">inserted_at</span><span class="w">
        </span><span class="p" data-group-id="7782020680-26">}</span><span class="w">
      </span><span class="k" data-group-id="7782020680-24">end</span><span class="p" data-group-id="7782020680-23">)</span><span class="w">

    </span><span class="c1"># Single API call for entire batch instead of one per ticket</span><span class="w">
    </span><span class="k">case</span><span class="w"> </span><span class="nc">HelpDesk.ExternalAPI</span><span class="o">.</span><span class="n">batch_notify_tickets</span><span class="p" data-group-id="7782020680-27">(</span><span class="n">notifications</span><span class="p" data-group-id="7782020680-27">)</span><span class="w"> </span><span class="k" data-group-id="7782020680-28">do</span><span class="w">
      </span><span class="p" data-group-id="7782020680-29">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="c">_response</span><span class="p" data-group-id="7782020680-29">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="c1"># Return :ok to indicate success</span><span class="w">
        </span><span class="ss">:ok</span><span class="w">

      </span><span class="p" data-group-id="7782020680-30">{</span><span class="ss">:error</span><span class="p">,</span><span class="w"> </span><span class="n">error</span><span class="p" data-group-id="7782020680-30">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="c1"># You can return individual errors or notifications</span><span class="w">
        </span><span class="nc">Enum</span><span class="o">.</span><span class="n">map</span><span class="p" data-group-id="7782020680-31">(</span><span class="n">changesets_and_results</span><span class="p">,</span><span class="w"> </span><span class="k" data-group-id="7782020680-32">fn</span><span class="w"> </span><span class="p" data-group-id="7782020680-33">{</span><span class="c">_changeset</span><span class="p">,</span><span class="w"> </span><span class="n">result</span><span class="p" data-group-id="7782020680-33">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
          </span><span class="p" data-group-id="7782020680-34">{</span><span class="ss">:error</span><span class="p">,</span><span class="w"> </span><span class="nc">Ash.Error.Invalid</span><span class="o">.</span><span class="n">exception</span><span class="p" data-group-id="7782020680-35">(</span><span class="w">
            </span><span class="ss">message</span><span class="p">:</span><span class="w"> </span><span class="s">&quot;Failed to notify external system for ticket </span><span class="si" data-group-id="7782020680-36">#{</span><span class="n">result</span><span class="o">.</span><span class="n">id</span><span class="si" data-group-id="7782020680-36">}</span><span class="s">: </span><span class="si" data-group-id="7782020680-37">#{</span><span class="n">error</span><span class="si" data-group-id="7782020680-37">}</span><span class="s">&quot;</span><span class="w">
          </span><span class="p" data-group-id="7782020680-35">)</span><span class="p" data-group-id="7782020680-34">}</span><span class="w">
        </span><span class="k" data-group-id="7782020680-32">end</span><span class="p" data-group-id="7782020680-31">)</span><span class="w">
    </span><span class="k" data-group-id="7782020680-28">end</span><span class="w">
  </span><span class="k" data-group-id="7782020680-18">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">prepare_for_external_notification</span><span class="p" data-group-id="7782020680-38">(</span><span class="n">changeset</span><span class="p" data-group-id="7782020680-38">)</span><span class="w"> </span><span class="k" data-group-id="7782020680-39">do</span><span class="w">
    </span><span class="c1"># Add any metadata needed for external notification</span><span class="w">
    </span><span class="n">changeset</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">put_context</span><span class="p" data-group-id="7782020680-40">(</span><span class="ss">:needs_external_notification</span><span class="p">,</span><span class="w"> </span><span class="no">true</span><span class="p" data-group-id="7782020680-40">)</span><span class="w">
  </span><span class="k" data-group-id="7782020680-39">end</span><span class="w">
</span><span class="k" data-group-id="7782020680-1">end</span></code></pre><h3 id="example-optimized-database-operations">Example: Optimized Database Operations</h3><p>This example shows how to use batch callbacks to optimize database operations:</p><pre><code class="makeup elixir" translate="no"><span class="kd">defmodule</span><span class="w"> </span><span class="nc">HelpDesk.Changes.BatchAssignAgents</span><span class="w"> </span><span class="k" data-group-id="5041285746-1">do</span><span class="w">
  </span><span class="kn">use</span><span class="w"> </span><span class="nc">Ash.Resource.Change</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">before_batch</span><span class="p" data-group-id="5041285746-2">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="c">_opts</span><span class="p">,</span><span class="w"> </span><span class="c">_context</span><span class="p" data-group-id="5041285746-2">)</span><span class="w"> </span><span class="k" data-group-id="5041285746-3">do</span><span class="w">
    </span><span class="c1"># Pre-load all available agents once for the entire batch</span><span class="w">
    </span><span class="n">available_agents</span><span class="w"> </span><span class="o">=</span><span class="w">
      </span><span class="nc">HelpDesk.Agent</span><span class="w">
      </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Query</span><span class="o">.</span><span class="n">filter</span><span class="p" data-group-id="5041285746-4">(</span><span class="n">status</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s">&quot;available&quot;</span><span class="p" data-group-id="5041285746-4">)</span><span class="w">
      </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Query</span><span class="o">.</span><span class="n">sort</span><span class="p" data-group-id="5041285746-5">(</span><span class="ss">:workload</span><span class="p" data-group-id="5041285746-5">)</span><span class="w">
      </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash</span><span class="o">.</span><span class="n">read!</span><span class="p" data-group-id="5041285746-6">(</span><span class="p" data-group-id="5041285746-6">)</span><span class="w">

    </span><span class="c1"># Distribute agents across the batch</span><span class="w">
    </span><span class="p" data-group-id="5041285746-7">{</span><span class="n">assigned_changesets</span><span class="p">,</span><span class="w"> </span><span class="c">_remaining_agents</span><span class="p" data-group-id="5041285746-7">}</span><span class="w"> </span><span class="o">=</span><span class="w">
      </span><span class="nc">Enum</span><span class="o">.</span><span class="n">map_reduce</span><span class="p" data-group-id="5041285746-8">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="n">available_agents</span><span class="p">,</span><span class="w"> </span><span class="k" data-group-id="5041285746-9">fn</span><span class="w"> </span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="p" data-group-id="5041285746-10">[</span><span class="n">agent</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="n">rest</span><span class="p" data-group-id="5041285746-10">]</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="n">updated_changeset</span><span class="w"> </span><span class="o">=</span><span class="w">
          </span><span class="n">changeset</span><span class="w">
          </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">change_attribute</span><span class="p" data-group-id="5041285746-11">(</span><span class="ss">:agent_id</span><span class="p">,</span><span class="w"> </span><span class="n">agent</span><span class="o">.</span><span class="n">id</span><span class="p" data-group-id="5041285746-11">)</span><span class="w">
          </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">change_attribute</span><span class="p" data-group-id="5041285746-12">(</span><span class="ss">:status</span><span class="p">,</span><span class="w"> </span><span class="s">&quot;assigned&quot;</span><span class="p" data-group-id="5041285746-12">)</span><span class="w">
          </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">put_context</span><span class="p" data-group-id="5041285746-13">(</span><span class="ss">:assigned_agent</span><span class="p">,</span><span class="w"> </span><span class="n">agent</span><span class="p" data-group-id="5041285746-13">)</span><span class="w">

        </span><span class="p" data-group-id="5041285746-14">{</span><span class="n">updated_changeset</span><span class="p">,</span><span class="w"> </span><span class="n">rest</span><span class="w"> </span><span class="o">++</span><span class="w"> </span><span class="p" data-group-id="5041285746-15">[</span><span class="p" data-group-id="5041285746-16">%{</span><span class="n">agent</span><span class="w"> </span><span class="o">|</span><span class="w"> </span><span class="ss">workload</span><span class="p">:</span><span class="w"> </span><span class="n">agent</span><span class="o">.</span><span class="n">workload</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mi">1</span><span class="p" data-group-id="5041285746-16">}</span><span class="p" data-group-id="5041285746-15">]</span><span class="p" data-group-id="5041285746-14">}</span><span class="w">
      </span><span class="k" data-group-id="5041285746-9">end</span><span class="p" data-group-id="5041285746-8">)</span><span class="w">

    </span><span class="n">assigned_changesets</span><span class="w">
  </span><span class="k" data-group-id="5041285746-3">end</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">after_batch</span><span class="p" data-group-id="5041285746-17">(</span><span class="n">changesets_and_results</span><span class="p">,</span><span class="w"> </span><span class="c">_opts</span><span class="p">,</span><span class="w"> </span><span class="c">_context</span><span class="p" data-group-id="5041285746-17">)</span><span class="w"> </span><span class="k" data-group-id="5041285746-18">do</span><span class="w">
    </span><span class="c1"># Batch update agent workloads</span><span class="w">
    </span><span class="n">agent_updates</span><span class="w"> </span><span class="o">=</span><span class="w">
      </span><span class="n">changesets_and_results</span><span class="w">
      </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Enum</span><span class="o">.</span><span class="n">map</span><span class="p" data-group-id="5041285746-19">(</span><span class="k" data-group-id="5041285746-20">fn</span><span class="w"> </span><span class="p" data-group-id="5041285746-21">{</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="c">_result</span><span class="p" data-group-id="5041285746-21">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="nc">Ash.Changeset</span><span class="o">.</span><span class="n">get_context</span><span class="p" data-group-id="5041285746-22">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="ss">:assigned_agent</span><span class="p" data-group-id="5041285746-22">)</span><span class="w">
      </span><span class="k" data-group-id="5041285746-20">end</span><span class="p" data-group-id="5041285746-19">)</span><span class="w">
      </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Enum</span><span class="o">.</span><span class="n">filter</span><span class="p" data-group-id="5041285746-23">(</span><span class="o">&amp;</span><span class="w"> </span><span class="ni">&amp;1</span><span class="p" data-group-id="5041285746-23">)</span><span class="w">
      </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Enum</span><span class="o">.</span><span class="n">group_by</span><span class="p" data-group-id="5041285746-24">(</span><span class="o">&amp;</span><span class="w"> </span><span class="ni">&amp;1</span><span class="o">.</span><span class="n">id</span><span class="p" data-group-id="5041285746-24">)</span><span class="w">
      </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Enum</span><span class="o">.</span><span class="n">map</span><span class="p" data-group-id="5041285746-25">(</span><span class="k" data-group-id="5041285746-26">fn</span><span class="w"> </span><span class="p" data-group-id="5041285746-27">{</span><span class="n">agent_id</span><span class="p">,</span><span class="w"> </span><span class="n">assignments</span><span class="p" data-group-id="5041285746-27">}</span><span class="w"> </span><span class="o">-&gt;</span><span class="w">
        </span><span class="p" data-group-id="5041285746-28">%{</span><span class="ss">id</span><span class="p">:</span><span class="w"> </span><span class="n">agent_id</span><span class="p">,</span><span class="w"> </span><span class="ss">workload_increment</span><span class="p">:</span><span class="w"> </span><span class="n">length</span><span class="p" data-group-id="5041285746-29">(</span><span class="n">assignments</span><span class="p" data-group-id="5041285746-29">)</span><span class="p" data-group-id="5041285746-28">}</span><span class="w">
      </span><span class="k" data-group-id="5041285746-26">end</span><span class="p" data-group-id="5041285746-25">)</span><span class="w">

    </span><span class="c1"># Single bulk operation to update all agent workloads</span><span class="w">
    </span><span class="nc">HelpDesk.Agent</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="nc">Ash</span><span class="o">.</span><span class="n">bulk_update</span><span class="p" data-group-id="5041285746-30">(</span><span class="ss">:increment_workload</span><span class="p">,</span><span class="w"> </span><span class="n">agent_updates</span><span class="p" data-group-id="5041285746-30">)</span><span class="w">

    </span><span class="ss">:ok</span><span class="w">
  </span><span class="k" data-group-id="5041285746-18">end</span><span class="w">

  </span><span class="c1"># Define batch_change/3 to enable batch callbacks</span><span class="w">
  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">batch_change</span><span class="p" data-group-id="5041285746-31">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="c">_opts</span><span class="p">,</span><span class="w"> </span><span class="c">_context</span><span class="p" data-group-id="5041285746-31">)</span><span class="w"> </span><span class="k" data-group-id="5041285746-32">do</span><span class="w">
    </span><span class="c1"># The actual changeset modifications happen in before_batch</span><span class="w">
    </span><span class="c1"># This just returns the changesets as-is</span><span class="w">
    </span><span class="n">changesets</span><span class="w">
  </span><span class="k" data-group-id="5041285746-32">end</span><span class="w">
</span><span class="k" data-group-id="5041285746-1">end</span></code></pre><h3 id="example-conditional-batch-processing">Example: Conditional Batch Processing</h3><p>You can control when batch callbacks are used with the <code class="inline">batch_callbacks?/3</code> callback:</p><pre><code class="makeup elixir" translate="no"><span class="kd">defmodule</span><span class="w"> </span><span class="nc">HelpDesk.Changes.ConditionalBatchProcessing</span><span class="w"> </span><span class="k" data-group-id="0390842449-1">do</span><span class="w">
  </span><span class="kn">use</span><span class="w"> </span><span class="nc">Ash.Resource.Change</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">batch_callbacks?</span><span class="p" data-group-id="0390842449-2">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">,</span><span class="w"> </span><span class="n">context</span><span class="p" data-group-id="0390842449-2">)</span><span class="w"> </span><span class="k" data-group-id="0390842449-3">do</span><span class="w">
    </span><span class="c1"># Only use batch processing for large batches</span><span class="w">
    </span><span class="n">length</span><span class="p" data-group-id="0390842449-4">(</span><span class="n">changesets</span><span class="p" data-group-id="0390842449-4">)</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="mi">10</span><span class="w">
  </span><span class="k" data-group-id="0390842449-3">end</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">change</span><span class="p" data-group-id="0390842449-5">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">,</span><span class="w"> </span><span class="n">context</span><span class="p" data-group-id="0390842449-5">)</span><span class="w"> </span><span class="k" data-group-id="0390842449-6">do</span><span class="w">
    </span><span class="c1"># This runs for individual changes or small batches</span><span class="w">
    </span><span class="n">changeset</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="n">perform_individual_processing</span><span class="p" data-group-id="0390842449-7">(</span><span class="n">opts</span><span class="p">,</span><span class="w"> </span><span class="n">context</span><span class="p" data-group-id="0390842449-7">)</span><span class="w">
  </span><span class="k" data-group-id="0390842449-6">end</span><span class="w">

  </span><span class="na">@impl</span><span class="w"> </span><span class="no">true</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">batch_change</span><span class="p" data-group-id="0390842449-8">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="n">opts</span><span class="p">,</span><span class="w"> </span><span class="n">context</span><span class="p" data-group-id="0390842449-8">)</span><span class="w"> </span><span class="k" data-group-id="0390842449-9">do</span><span class="w">
    </span><span class="c1"># This runs for large batches (10+ items)</span><span class="w">
    </span><span class="n">changesets</span><span class="w">
    </span><span class="o">|&gt;</span><span class="w"> </span><span class="n">perform_optimized_batch_processing</span><span class="p" data-group-id="0390842449-10">(</span><span class="n">opts</span><span class="p">,</span><span class="w"> </span><span class="n">context</span><span class="p" data-group-id="0390842449-10">)</span><span class="w">
  </span><span class="k" data-group-id="0390842449-9">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">perform_individual_processing</span><span class="p" data-group-id="0390842449-11">(</span><span class="n">changeset</span><span class="p">,</span><span class="w"> </span><span class="c">_opts</span><span class="p">,</span><span class="w"> </span><span class="c">_context</span><span class="p" data-group-id="0390842449-11">)</span><span class="w"> </span><span class="k" data-group-id="0390842449-12">do</span><span class="w">
    </span><span class="c1"># Simple processing for individual items</span><span class="w">
    </span><span class="n">changeset</span><span class="w">
  </span><span class="k" data-group-id="0390842449-12">end</span><span class="w">

  </span><span class="kd">defp</span><span class="w"> </span><span class="nf">perform_optimized_batch_processing</span><span class="p" data-group-id="0390842449-13">(</span><span class="n">changesets</span><span class="p">,</span><span class="w"> </span><span class="c">_opts</span><span class="p">,</span><span class="w"> </span><span class="c">_context</span><span class="p" data-group-id="0390842449-13">)</span><span class="w"> </span><span class="k" data-group-id="0390842449-14">do</span><span class="w">
    </span><span class="c1"># Optimized processing for large batches</span><span class="w">
    </span><span class="n">changesets</span><span class="w">
  </span><span class="k" data-group-id="0390842449-14">end</span><span class="w">
</span><span class="k" data-group-id="0390842449-1">end</span></code></pre><h3 id="best-practices-for-batch-callbacks">Best Practices for Batch Callbacks</h3><ol><li><strong>Use batch callbacks for expensive operations</strong>: Database queries, external API calls, file I/O</li><li><strong>Keep individual operations fast</strong>: If your change is already fast, batch callbacks may not be worth the complexity</li><li><strong>Handle errors gracefully</strong>: Return appropriate error tuples from <code class="inline">after_batch/3</code> when things go wrong</li><li><strong>Test both paths</strong>: Ensure your change works correctly both individually and in batches</li></ol><h2 id="generic-action-example">Generic Action Example</h2><pre><code class="makeup elixir" translate="no"><span class="c1"># Define a plain-old elixir module/function to express the action</span><span class="w">
</span><span class="kd">defmodule</span><span class="w"> </span><span class="nc">HelpDesk.Actions.AssignTicket</span><span class="w"> </span><span class="k" data-group-id="7134015539-1">do</span><span class="w">
  </span><span class="kd">def</span><span class="w"> </span><span class="nf">run</span><span class="p" data-group-id="7134015539-2">(</span><span class="n">input</span><span class="p">,</span><span class="w"> </span><span class="n">context</span><span class="p" data-group-id="7134015539-2">)</span><span class="w"> </span><span class="k" data-group-id="7134015539-3">do</span><span class="w">
    </span><span class="k">with</span><span class="w"> </span><span class="p" data-group-id="7134015539-4">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">agent</span><span class="p" data-group-id="7134015539-4">}</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nc">HelpDesk.AgentManager</span><span class="o">.</span><span class="n">find_available_agent</span><span class="p" data-group-id="7134015539-5">(</span><span class="p" data-group-id="7134015539-5">)</span><span class="p">,</span><span class="w">
         </span><span class="p" data-group-id="7134015539-6">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="7134015539-6">}</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nc">HelpDesk</span><span class="o">.</span><span class="n">get_ticket_by_id</span><span class="p" data-group-id="7134015539-7">(</span><span class="n">input</span><span class="o">.</span><span class="n">arguments</span><span class="o">.</span><span class="n">ticket_id</span><span class="p" data-group-id="7134015539-7">)</span><span class="p">,</span><span class="w">
         </span><span class="p" data-group-id="7134015539-8">{</span><span class="ss">:ok</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="7134015539-8">}</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nc">HelpDesk</span><span class="o">.</span><span class="n">update_ticket</span><span class="p" data-group-id="7134015539-9">(</span><span class="n">ticket</span><span class="p">,</span><span class="w"> </span><span class="p" data-group-id="7134015539-10">%{</span><span class="ss">agent_id</span><span class="p">:</span><span class="w"> </span><span class="n">agent</span><span class="o">.</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="ss">status</span><span class="p">:</span><span class="w"> </span><span class="ss">:assigned</span><span class="p" data-group-id="7134015539-10">}</span><span class="p">,</span><span class="w"> </span><span class="ss">actor</span><span class="p">:</span><span class="w"> </span><span class="n">input</span><span class="o">.</span><span class="n">actor</span><span class="p" data-group-id="7134015539-9">)</span><span class="w">
         </span><span class="ss">:ok</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nc">Helpdesk.Notifications</span><span class="o">.</span><span class="n">notify_assignment</span><span class="p" data-group-id="7134015539-11">(</span><span class="n">agent</span><span class="p">,</span><span class="w"> </span><span class="n">ticket</span><span class="p" data-group-id="7134015539-11">)</span><span class="w">
    </span><span class="k" data-group-id="7134015539-3">end</span><span class="w">
  </span><span class="k" data-group-id="7134015539-1">end</span><span class="w">
</span><span class="k">end</span><span class="w">

</span><span class="c1"># Invoke the action from Resource</span><span class="w">
</span><span class="n">actions</span><span class="w"> </span><span class="k" data-group-id="7134015539-12">do</span><span class="w">
  </span><span class="n">action</span><span class="w"> </span><span class="ss">:assign_to_available_agent</span><span class="w"> </span><span class="k" data-group-id="7134015539-13">do</span><span class="w">
    </span><span class="n">transaction?</span><span class="w"> </span><span class="no">true</span><span class="w">
    </span><span class="n">argument</span><span class="w"> </span><span class="ss">:ticket_id</span><span class="p">,</span><span class="w"> </span><span class="ss">:uuid</span><span class="w">
    </span><span class="n">run</span><span class="w"> </span><span class="nc">HelpDesk.Actions.AssignTicket</span><span class="w">
  </span><span class="k" data-group-id="7134015539-13">end</span><span class="w">
</span><span class="k" data-group-id="7134015539-12">end</span></code></pre>

  </body>
</html>
