<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Ash.Type.NewType - ash v3.5.33</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Ash.Type.NewType <small>behaviour</small>
    </h1>


      <section id="moduledoc" class="docstring">
<p>Allows defining a new type that is the combination of an existing type and custom constraints</p><p>A subtle difference between this type and its supertype (one that will almost certainly not matter
in any case) is that we use the <code class="inline">apply_constraints</code> logic of the underlying type in the same step
as <code class="inline">cast_input</code>. We do this because new types like these are, generally speaking, considering the constraint
application as part of the core type. Other types, if you simply do <a href="Ash.Type.xhtml#cast_input/3"><code class="inline">Ash.Type.cast_input/3</code></a> you will not be
also applying their constraints.</p><h2 id="module-options">Options</h2><ul><li><code class="inline">:subtype_of</code> - The type that this new type is a subtype of.</li><li><code class="inline">:constraints</code> - The constraints that this new type uses for the underlying type.</li><li><code class="inline">:lazy_init?</code> - If true, the <code class="inline">init/1</code> function will be called at runtime instead of compile time.
Allows for recursive types.</li></ul><p>For Example:</p><pre><code class="makeup elixir" translate="no"><samp class="kd">defmodule</samp><samp class="w"> </samp><samp class="nc">MyApp.Types.SSN</samp><samp class="w"> </samp><samp class="k" data-group-id="2381914872-1">do</samp><samp class="w">
  </samp><samp class="kn">use</samp><samp class="w"> </samp><samp class="nc">Ash.Type.NewType</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">subtype_of</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:string</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">constraints</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="2381914872-2">[</samp><samp class="ss">match</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="sr">~r/regex for ssn/</samp><samp class="p" data-group-id="2381914872-2">]</samp><samp class="w">
</samp><samp class="k" data-group-id="2381914872-1">end</samp><samp class="w">

</samp><samp class="kd">defmodule</samp><samp class="w"> </samp><samp class="nc">MyApp.Types.Metadata</samp><samp class="w"> </samp><samp class="k" data-group-id="2381914872-3">do</samp><samp class="w">
  </samp><samp class="kn">use</samp><samp class="w"> </samp><samp class="nc">Ash.Type.NewType</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">subtype_of</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:union</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">constraints</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="2381914872-4">[</samp><samp class="ss">types</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="2381914872-5">[</samp><samp class="w">
    </samp><samp class="ss">foo</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="2381914872-6">[</samp><samp class="n">...</samp><samp class="p" data-group-id="2381914872-6">]</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="ss">bar</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="2381914872-7">[</samp><samp class="n">...</samp><samp class="p" data-group-id="2381914872-7">]</samp><samp class="w">
  </samp><samp class="p" data-group-id="2381914872-5">]</samp><samp class="p" data-group-id="2381914872-4">]</samp><samp class="w">
</samp><samp class="k" data-group-id="2381914872-3">end</samp></code></pre>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-types summary">
  <h2>
    <a href="#types">Types</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:t/0" data-no-tooltip="" translate="no">t()</a>

      </div>

    </div>

</div>
<div class="summary-callbacks summary">
  <h2>
    <a href="#callbacks">Callbacks</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:lazy_init?/0" data-no-tooltip="" translate="no">lazy_init?()</a>

      </div>

        <div class="summary-synopsis"><p>Whether or not the type is lazy initialized (so needs to be initialized when fetching constraints)</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:subtype_constraints/0" data-no-tooltip="" translate="no">subtype_constraints()</a>

      </div>

        <div class="summary-synopsis"><p>Returns the underlying subtype constraints</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:subtype_of/0" data-no-tooltip="" translate="no">subtype_of()</a>

      </div>

        <div class="summary-synopsis"><p>Returns the type that the NewType is a subtype of.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:type_constraints/2" data-no-tooltip="" translate="no">type_constraints(constraints, subtype_constraints)</a>

      </div>

        <div class="summary-synopsis"><p>Returns the modified NewType constraints</p></div>

    </div>

</div>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#constraints/2" data-no-tooltip="" translate="no">constraints(type, constraints)</a>

      </div>

        <div class="summary-synopsis"><p>Returns the constraints schema.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#new_type?/1" data-no-tooltip="" translate="no">new_type?(type)</a>

      </div>

        <div class="summary-synopsis"><p>Returns true if the corresponding type is an Ash.Type.NewType</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#subtype_of/1" data-no-tooltip="" translate="no">subtype_of(type)</a>

      </div>

        <div class="summary-synopsis"><p>Returns the type that the given newtype is a subtype of</p></div>

    </div>

</div>

      </section>


      <section id="types" class="details-list">
        <h1 class="section-heading">Types</h1>
        <div class="types-list">
<section class="detail" id="t:t/0">

  <div class="detail-header">
    <a href="#t:t/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">t()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/type/new_type.ex#L44" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> t() :: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">module</a>() | <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>() | {:array, <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">module</a>() | <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>()}</pre>

      </div>


  </section>
</section>

        </div>
      </section>

      <section id="callbacks" class="details-list">
        <h1 class="section-heading">Callbacks</h1>
        <div class="callbacks-list">
<section class="detail" id="c:lazy_init?/0">

  <div class="detail-header">
    <a href="#c:lazy_init?/0" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">lazy_init?()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/type/new_type.ex#L37" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> lazy_init?() :: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">boolean</a>()</pre>

      </div>

<p>Whether or not the type is lazy initialized (so needs to be initialized when fetching constraints)</p>
  </section>
</section>
<section class="detail" id="c:subtype_constraints/0">

  <div class="detail-header">
    <a href="#c:subtype_constraints/0" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">subtype_constraints()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/type/new_type.ex#L39" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> subtype_constraints() :: <a href="https://hexdocs.pm/elixir/Keyword.html#t:t/0">Keyword.t</a>()</pre>

      </div>

<p>Returns the underlying subtype constraints</p>
  </section>
</section>
<section class="detail" id="c:subtype_of/0">

  <div class="detail-header">
    <a href="#c:subtype_of/0" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">subtype_of()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/type/new_type.ex#L35" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> subtype_of() :: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">module</a>() | <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>()</pre>

      </div>

<p>Returns the type that the NewType is a subtype of.</p>
  </section>
</section>
<section class="detail" id="c:type_constraints/2">

  <div class="detail-header">
    <a href="#c:type_constraints/2" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">type_constraints(constraints, subtype_constraints)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/type/new_type.ex#L41" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> type_constraints(constraints :: <a href="https://hexdocs.pm/elixir/Keyword.html#t:t/0">Keyword.t</a>(), subtype_constraints :: <a href="https://hexdocs.pm/elixir/Keyword.html#t:t/0">Keyword.t</a>()) ::
  <a href="https://hexdocs.pm/elixir/Keyword.html#t:t/0">Keyword.t</a>()</pre>

      </div>

<p>Returns the modified NewType constraints</p>
  </section>
</section>

        </div>
      </section>

      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>
        <div class="functions-list">
<section class="detail" id="constraints/2">

  <div class="detail-header">
    <a href="#constraints/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">constraints(type, constraints)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/type/new_type.ex#L71" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> constraints(<a href="Ash.Type.xhtml#t:t/0">Ash.Type.t</a>(), <a href="https://hexdocs.pm/elixir/Keyword.html#t:t/0">Keyword.t</a>()) :: <a href="https://hexdocs.pm/elixir/Keyword.html#t:t/0">Keyword.t</a>()</pre>

      </div>

<p>Returns the constraints schema.</p>
  </section>
</section>
<section class="detail" id="new_type?/1">

  <div class="detail-header">
    <a href="#new_type?/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">new_type?(type)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/type/new_type.ex#L48" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> new_type?(<a href="Ash.Type.xhtml#t:t/0">Ash.Type.t</a>()) :: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">boolean</a>()</pre>

      </div>

<p>Returns true if the corresponding type is an Ash.Type.NewType</p>
  </section>
</section>
<section class="detail" id="subtype_of/1">

  <div class="detail-header">
    <a href="#subtype_of/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">subtype_of(type)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/type/new_type.ex#L53" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> subtype_of(<a href="#t:t/0">t</a>()) :: <a href="Ash.Type.xhtml#t:t/0">Ash.Type.t</a>()</pre>

      </div>

<p>Returns the type that the given newtype is a subtype of</p>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
