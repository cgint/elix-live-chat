<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Ash.Policy.SimpleCheck - ash v3.5.33</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Ash.Policy.SimpleCheck <small>behaviour</small>
    </h1>


      <section id="moduledoc" class="docstring">
<p>A type of check that operates only on request context, never on the data</p><p>Define <a href="#c:match?/3"><code class="inline">match?/3</code></a>, which gets the actor, request context, and opts, and returns true or false</p><h2 id="module-example">Example</h2><p>This is a simple check that checks if the user is changing anything other than the
provided list.</p><pre><code class="makeup elixir" translate="no"><samp class="kd">defmodule</samp><samp class="w"> </samp><samp class="nc">ChangingNothingExcept</samp><samp class="w"> </samp><samp class="k" data-group-id="5657973828-1">do</samp><samp class="w">
  </samp><samp class="kn">use</samp><samp class="w"> </samp><samp class="nc">Ash.Policy.SimpleCheck</samp><samp class="w">

  </samp><samp class="kd">def</samp><samp class="w"> </samp><samp class="nf">match?</samp><samp class="p" data-group-id="5657973828-2">(</samp><samp class="c">_actor</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5657973828-3">%{</samp><samp class="ss">subject</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5657973828-4">%</samp><samp class="nc" data-group-id="5657973828-4">Ash.Changeset</samp><samp class="p" data-group-id="5657973828-4">{</samp><samp class="p" data-group-id="5657973828-4">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="n">changeset</samp><samp class="p" data-group-id="5657973828-3">}</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">opts</samp><samp class="p" data-group-id="5657973828-2">)</samp><samp class="w"> </samp><samp class="k" data-group-id="5657973828-5">do</samp><samp class="w">
    </samp><samp class="n">allowed</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="n">opts</samp><samp class="p" data-group-id="5657973828-6">[</samp><samp class="ss">:attributes</samp><samp class="p" data-group-id="5657973828-6">]</samp><samp class="w">
    </samp><samp class="p" data-group-id="5657973828-7">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">Enum</samp><samp class="o">.</samp><samp class="n">all?</samp><samp class="p" data-group-id="5657973828-8">(</samp><samp class="nc">Map</samp><samp class="o">.</samp><samp class="n">keys</samp><samp class="p" data-group-id="5657973828-9">(</samp><samp class="n">changeset</samp><samp class="o">.</samp><samp class="n">attributes</samp><samp class="p" data-group-id="5657973828-9">)</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="o">&amp;</samp><samp class="p" data-group-id="5657973828-10">(</samp><samp class="ni">&amp;1</samp><samp class="w"> </samp><samp class="ow">in</samp><samp class="w"> </samp><samp class="n">allowed</samp><samp class="p" data-group-id="5657973828-10">)</samp><samp class="p" data-group-id="5657973828-8">)</samp><samp class="p" data-group-id="5657973828-7">}</samp><samp class="w">
  </samp><samp class="k" data-group-id="5657973828-5">end</samp><samp class="w">

  </samp><samp class="kd">def</samp><samp class="w"> </samp><samp class="nf">match?</samp><samp class="p" data-group-id="5657973828-11">(</samp><samp class="bp">_</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="bp">_</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="bp">_</samp><samp class="p" data-group-id="5657973828-11">)</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">do</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5657973828-12">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p" data-group-id="5657973828-12">}</samp><samp class="w">
</samp><samp class="k" data-group-id="5657973828-1">end</samp></code></pre><p>You could then use this like</p><pre><code class="makeup elixir" translate="no"><samp class="n">policy</samp><samp class="w"> </samp><samp class="n">actor_attribute_equals</samp><samp class="p" data-group-id="9261167667-1">(</samp><samp class="ss">:role</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:foobar</samp><samp class="p" data-group-id="9261167667-1">)</samp><samp class="w"> </samp><samp class="k" data-group-id="9261167667-2">do</samp><samp class="w">
  </samp><samp class="n">authorize_if</samp><samp class="w"> </samp><samp class="p" data-group-id="9261167667-3">{</samp><samp class="nc">ChangingNothingExcept</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">attributes</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="9261167667-4">[</samp><samp class="ss">:foo</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p" data-group-id="9261167667-4">]</samp><samp class="p" data-group-id="9261167667-3">}</samp><samp class="w">
</samp><samp class="k" data-group-id="9261167667-2">end</samp></code></pre>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-types summary">
  <h2>
    <a href="#types">Types</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:actor/0" data-no-tooltip="" translate="no">actor()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:context/0" data-no-tooltip="" translate="no">context()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:options/0" data-no-tooltip="" translate="no">options()</a>

      </div>

    </div>

</div>
<div class="summary-callbacks summary">
  <h2>
    <a href="#callbacks">Callbacks</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:match?/3" data-no-tooltip="" translate="no">match?(actor, context, options)</a>

      </div>

        <div class="summary-synopsis"><p>Whether or not the request matches the check</p></div>

    </div>

</div>

      </section>


      <section id="types" class="details-list">
        <h1 class="section-heading">Types</h1>
        <div class="types-list">
<section class="detail" id="t:actor/0">

  <div class="detail-header">
    <a href="#t:actor/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">actor()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/simple_check.ex#L34" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> actor() :: <a href="Ash.Policy.Check.xhtml#t:actor/0">Ash.Policy.Check.actor</a>()</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:context/0">

  <div class="detail-header">
    <a href="#t:context/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">context()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/simple_check.ex#L35" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> context() :: <a href="Ash.Policy.Authorizer.xhtml#t:t/0">Ash.Policy.Authorizer.t</a>()</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:options/0">

  <div class="detail-header">
    <a href="#t:options/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">options()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/simple_check.ex#L36" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> options() :: <a href="https://hexdocs.pm/elixir/Keyword.html#t:t/0">Keyword.t</a>()</pre>

      </div>


  </section>
</section>

        </div>
      </section>

      <section id="callbacks" class="details-list">
        <h1 class="section-heading">Callbacks</h1>
        <div class="callbacks-list">
<section class="detail" id="c:match?/3">

  <div class="detail-header">
    <a href="#c:match?/3" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">match?(actor, context, options)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/simple_check.ex#L39" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> match?(<a href="#t:actor/0">actor</a>(), <a href="#t:context/0">context</a>(), <a href="#t:options/0">options</a>()) ::
  <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">boolean</a>() | {:ok, <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">boolean</a>()} | {:error, <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()}</pre>

      </div>

<p>Whether or not the request matches the check</p>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
