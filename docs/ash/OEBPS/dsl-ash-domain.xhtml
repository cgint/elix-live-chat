<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Ash.Domain - ash v3.5.33</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">Ash.Domain</h1>
<h2 id="domain">domain</h2><p>General domain configuration</p><h3 id="examples">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">domain</span><span class="w"> </span><span class="k" data-group-id="4244779593-1">do</span><span class="w">
  </span><span class="n">description</span><span class="w"> </span><span class="s">&quot;&quot;&quot;
  Resources related to the flux capacitor.
  &quot;&quot;&quot;</span><span class="w">
</span><span class="k" data-group-id="4244779593-1">end</span><span class="w">
</span></code></pre><h3 id="options">Options</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a href="#domain-description" id="domain-description"><code class="inline">description</code></a></td><td style="text-align: left;"><code class="inline">String.t</code></td><td style="text-align: left;"></td><td style="text-align: left;">A description for the domain.</td></tr></tbody></table><h2 id="resources">resources</h2><p>List the resources of this domain</p><h3 id="nested-dsls">Nested DSLs</h3><ul><li><a href="#resources-resource">resource</a><ul><li>define<ul><li>custom_input<ul><li>transform</li></ul></li></ul></li><li>define_calculation<ul><li>custom_input<ul><li>transform</li></ul></li></ul></li></ul></li></ul><h3 id="examples-1">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">resources</span><span class="w"> </span><span class="k" data-group-id="1804903544-1">do</span><span class="w">
  </span><span class="n">resource</span><span class="w"> </span><span class="nc">MyApp.Tweet</span><span class="w">
  </span><span class="n">resource</span><span class="w"> </span><span class="nc">MyApp.Comment</span><span class="w">
</span><span class="k" data-group-id="1804903544-1">end</span><span class="w">
</span></code></pre><h3 id="options-1">Options</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a href="#resources-allow" id="resources-allow"><code class="inline">allow</code></a></td><td style="text-align: left;"><code class="inline">mfa</code></td><td style="text-align: left;"></td><td style="text-align: left;">Support a dynamic resource list by providing a callback that checks whether or not the resource should be allowed.</td></tr><tr><td style="text-align: left;"><a href="#resources-allow_unregistered?" id="resources-allow_unregistered?"><code class="inline">allow_unregistered?</code></a></td><td style="text-align: left;"><code class="inline">boolean</code></td><td style="text-align: left;"><code class="inline">false</code></td><td style="text-align: left;">Whether the domain will support only registered entries or not.</td></tr></tbody></table><h3 id="resources-resource">resources.resource</h3><pre><code class="makeup elixir" translate="no"><span class="n">resource</span><span class="w"> </span><span class="n">resource</span></code></pre><p>A resource present in the domain</p><h3 id="nested-dsls-1">Nested DSLs</h3><ul><li><a href="#resources-resource-define">define</a><ul><li>custom_input<ul><li>transform</li></ul></li></ul></li><li><a href="#resources-resource-define_calculation">define_calculation</a><ul><li>custom_input<ul><li>transform</li></ul></li></ul></li></ul><h3 id="examples-2">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">resource</span><span class="w"> </span><span class="nc">Foo</span></code></pre><h3 id="arguments">Arguments</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a class="spark-required" href="#resources-resource-resource" id="resources-resource-resource"><code class="inline">resource</code></a></td><td style="text-align: left;"><code class="inline">module</code></td><td style="text-align: left;"></td><td style="text-align: left;"></td></tr></tbody></table><h3 id="resources-resource-define">resources.resource.define</h3><pre><code class="makeup elixir" translate="no"><span class="n">define</span><span class="w"> </span><span class="n">name</span></code></pre><p>Defines a function with the corresponding name and arguments. See the <a href="code-interfaces.xhtml">code interface guide</a> for more.</p><h3 id="nested-dsls-2">Nested DSLs</h3><ul><li><a href="#resources-resource-define-custom_input">custom_input</a><ul><li>transform</li></ul></li></ul><h3 id="examples-3">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">define</span><span class="w"> </span><span class="ss">:get_user_by_id</span><span class="p">,</span><span class="w"> </span><span class="ss">action</span><span class="p">:</span><span class="w"> </span><span class="ss">:get_by_id</span><span class="p">,</span><span class="w"> </span><span class="ss">args</span><span class="p">:</span><span class="w"> </span><span class="p" data-group-id="7966328635-1">[</span><span class="ss">:id</span><span class="p" data-group-id="7966328635-1">]</span><span class="p">,</span><span class="w"> </span><span class="ss">get?</span><span class="p">:</span><span class="w"> </span><span class="no">true</span></code></pre><h3 id="arguments-1">Arguments</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a class="spark-required" href="#resources-resource-define-name" id="resources-resource-define-name"><code class="inline">name</code></a></td><td style="text-align: left;"><code class="inline">atom</code></td><td style="text-align: left;"></td><td style="text-align: left;">The name of the function that will be defined</td></tr></tbody></table><h3 id="options-2">Options</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a href="#resources-resource-define-action" id="resources-resource-define-action"><code class="inline">action</code></a></td><td style="text-align: left;"><code class="inline">atom</code></td><td style="text-align: left;"></td><td style="text-align: left;">The name of the action that will be called. Defaults to the same name as the function.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-args" id="resources-resource-define-args"><code class="inline">args</code></a></td><td style="text-align: left;"><code class="inline">list(atom | {:optional, atom})</code></td><td style="text-align: left;"></td><td style="text-align: left;">Map specific arguments to named inputs. Can provide any argument/attributes that the action allows.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-not_found_error?" id="resources-resource-define-not_found_error?"><code class="inline">not_found_error?</code></a></td><td style="text-align: left;"><code class="inline">boolean</code></td><td style="text-align: left;"><code class="inline">true</code></td><td style="text-align: left;">If the action or interface is configured with <code class="inline">get?: true</code>, this determines whether or not an error is raised or <code class="inline">nil</code> is returned.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-require_reference?" id="resources-resource-define-require_reference?"><code class="inline">require_reference?</code></a></td><td style="text-align: left;"><code class="inline">boolean</code></td><td style="text-align: left;"><code class="inline">true</code></td><td style="text-align: left;">For update and destroy actions, require a resource or identifier to be passed in as the first argument. Not relevant for other action types.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-exclude_inputs" id="resources-resource-define-exclude_inputs"><code class="inline">exclude_inputs</code></a></td><td style="text-align: left;"><code class="inline">list(atom)</code></td><td style="text-align: left;"><code class="inline">[]</code></td><td style="text-align: left;">A list of action inputs to not accept in the defined interface</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-get?" id="resources-resource-define-get?"><code class="inline">get?</code></a></td><td style="text-align: left;"><code class="inline">boolean</code></td><td style="text-align: left;"><code class="inline">false</code></td><td style="text-align: left;">Expects to only receive a single result from a read action or a bulk update/destroy, and returns a single result instead of a list. Sets <code class="inline">require_reference?</code> to false automatically.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-get_by" id="resources-resource-define-get_by"><code class="inline">get_by</code></a></td><td style="text-align: left;"><code class="inline">atom | list(atom)</code></td><td style="text-align: left;"></td><td style="text-align: left;">Takes a list of fields and adds those fields as arguments, which will then be used to filter. Sets <code class="inline">get?</code> to true and <code class="inline">require_reference?</code> to false automatically. Adds filters for read, update and destroy actions, replacing the <code class="inline">record</code> first argument.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-get_by_identity" id="resources-resource-define-get_by_identity"><code class="inline">get_by_identity</code></a></td><td style="text-align: left;"><code class="inline">atom</code></td><td style="text-align: left;"></td><td style="text-align: left;">Takes an identity, gets its field list, and performs the same logic as <code class="inline">get_by</code> with those fields. Adds filters for read, update and destroy actions, replacing the <code class="inline">record</code> first argument.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-default_options" id="resources-resource-define-default_options"><code class="inline">default_options</code></a></td><td style="text-align: left;"><code class="inline">keyword | (-&gt; any)</code></td><td style="text-align: left;"><code class="inline">[]</code></td><td style="text-align: left;">Default options to be merged with client-provided options. These can override domain or action defaults. <code class="inline">:load</code>, <code class="inline">:bulk_options</code>, and <code class="inline">:page</code> options will be deep merged. Can be a keyword list or a zero-arity function that returns a keyword list.</td></tr></tbody></table><h3 id="resources-resource-define-custom_input">resources.resource.define.custom_input</h3><pre><code class="makeup elixir" translate="no"><span class="n">custom_input</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">type</span></code></pre><p>Define or customize an input to the action.</p><p>See the <a href="code-interfaces.xhtml">code interface guide</a> for more.</p><h3 id="nested-dsls-3">Nested DSLs</h3><ul><li><a href="#resources-resource-define-custom_input-transform">transform</a></li></ul><h3 id="examples-4">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">custom_input</span><span class="w"> </span><span class="ss">:artist</span><span class="p">,</span><span class="w"> </span><span class="ss">:struct</span><span class="w"> </span><span class="k" data-group-id="2197201999-1">do</span><span class="w">
  </span><span class="n">transform</span><span class="w"> </span><span class="ss">to</span><span class="p">:</span><span class="w"> </span><span class="ss">:artist_id</span><span class="p">,</span><span class="w"> </span><span class="ss">using</span><span class="p">:</span><span class="w"> </span><span class="o">&amp;</span><span class="p" data-group-id="2197201999-2">(</span><span class="ni">&amp;1</span><span class="o">.</span><span class="n">id</span><span class="p" data-group-id="2197201999-2">)</span><span class="w">

  </span><span class="n">constraints</span><span class="w"> </span><span class="ss">instance_of</span><span class="p">:</span><span class="w"> </span><span class="nc">Artist</span><span class="w">
</span><span class="k" data-group-id="2197201999-1">end</span><span class="w">
</span></code></pre><h3 id="arguments-2">Arguments</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a class="spark-required" href="#resources-resource-define-custom_input-name" id="resources-resource-define-custom_input-name"><code class="inline">name</code></a></td><td style="text-align: left;"><code class="inline">atom</code></td><td style="text-align: left;"></td><td style="text-align: left;">The name of the argument</td></tr><tr><td style="text-align: left;"><a class="spark-required" href="#resources-resource-define-custom_input-type" id="resources-resource-define-custom_input-type"><code class="inline">type</code></a></td><td style="text-align: left;"><code class="inline">module</code></td><td style="text-align: left;"></td><td style="text-align: left;">The type of the argument. See <a href="Ash.Type.xhtml"><code class="inline">Ash.Type</code></a> for more.</td></tr></tbody></table><h3 id="options-3">Options</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a href="#resources-resource-define-custom_input-description" id="resources-resource-define-custom_input-description"><code class="inline">description</code></a></td><td style="text-align: left;"><code class="inline">String.t</code></td><td style="text-align: left;"></td><td style="text-align: left;">An optional description for the argument.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-custom_input-constraints" id="resources-resource-define-custom_input-constraints"><code class="inline">constraints</code></a></td><td style="text-align: left;"><code class="inline">keyword</code></td><td style="text-align: left;"><code class="inline">[]</code></td><td style="text-align: left;">Constraints to provide to the type when casting the value. For more information, see <a href="Ash.Type.xhtml"><code class="inline">Ash.Type</code></a>.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-custom_input-allow_nil?" id="resources-resource-define-custom_input-allow_nil?"><code class="inline">allow_nil?</code></a></td><td style="text-align: left;"><code class="inline">boolean</code></td><td style="text-align: left;"><code class="inline">true</code></td><td style="text-align: left;">Whether or not the argument value may be nil (or may be not provided). If nil value is given error is raised.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-custom_input-sensitive?" id="resources-resource-define-custom_input-sensitive?"><code class="inline">sensitive?</code></a></td><td style="text-align: left;"><code class="inline">boolean</code></td><td style="text-align: left;"><code class="inline">false</code></td><td style="text-align: left;">Whether or not the argument value contains sensitive information, like PII(Personally Identifiable Information). See the <a href="sensitive-data.xhtml">security guide</a> for more.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-custom_input-default" id="resources-resource-define-custom_input-default"><code class="inline">default</code></a></td><td style="text-align: left;"><code class="inline">any</code></td><td style="text-align: left;"></td><td style="text-align: left;">The default value for the argument to take. It can be a zero argument function e.g <code class="inline">&amp;MyMod.my_fun/0</code> or a value</td></tr></tbody></table><h3 id="resources-resource-define-custom_input-transform">resources.resource.define.custom_input.transform</h3><p>A transformation to be applied to the custom input.</p><h3 id="examples-5">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">transform</span><span class="w"> </span><span class="k" data-group-id="9218480766-1">do</span><span class="w">
  </span><span class="n">to</span><span class="w"> </span><span class="ss">:artist_id</span><span class="w">
  </span><span class="n">using</span><span class="w"> </span><span class="o">&amp;</span><span class="p" data-group-id="9218480766-2">(</span><span class="ni">&amp;1</span><span class="o">.</span><span class="n">id</span><span class="p" data-group-id="9218480766-2">)</span><span class="w">
</span><span class="k" data-group-id="9218480766-1">end</span><span class="w">
</span></code></pre><pre><code class="makeup elixir" translate="no"><span class="n">transform</span><span class="w"> </span><span class="k" data-group-id="6732033961-1">do</span><span class="w">
  </span><span class="n">to</span><span class="w"> </span><span class="ss">:points</span><span class="w">
  </span><span class="n">using</span><span class="w"> </span><span class="o">&amp;</span><span class="n">try_parse_integer</span><span class="o">/</span><span class="mi">1</span><span class="w">
</span><span class="k" data-group-id="6732033961-1">end</span><span class="w">
</span></code></pre><h3 id="options-4">Options</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a href="#resources-resource-define-custom_input-transform-to" id="resources-resource-define-custom_input-transform-to"><code class="inline">to</code></a></td><td style="text-align: left;"><code class="inline">atom</code></td><td style="text-align: left;"></td><td style="text-align: left;">A key to rewrite the argument to. If the custom input is also a required positional argument, then the <code class="inline">to</code> is automatically added to the <code class="inline">exclude_inputs</code> list.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define-custom_input-transform-using" id="resources-resource-define-custom_input-transform-using"><code class="inline">using</code></a></td><td style="text-align: left;"><code class="inline">(any -&gt; any)</code></td><td style="text-align: left;"></td><td style="text-align: left;">A function to use to transform the value. Must return <code class="inline">value</code> or <code class="inline">nil</code></td></tr></tbody></table><h3 id="introspection">Introspection</h3><p>Target: <a href="Ash.Resource.Interface.CustomInput.Transform.xhtml"><code class="inline">Ash.Resource.Interface.CustomInput.Transform</code></a></p><h3 id="introspection-1">Introspection</h3><p>Target: <a href="Ash.Resource.Interface.CustomInput.xhtml"><code class="inline">Ash.Resource.Interface.CustomInput</code></a></p><h3 id="introspection-2">Introspection</h3><p>Target: <a href="Ash.Resource.Interface.xhtml"><code class="inline">Ash.Resource.Interface</code></a></p><h3 id="resources-resource-define_calculation">resources.resource.define_calculation</h3><pre><code class="makeup elixir" translate="no"><span class="n">define_calculation</span><span class="w"> </span><span class="n">name</span></code></pre><p>Defines a function with the corresponding name and arguments, that evaluates a calculation. Use <code class="inline">:_record</code> to take an instance of a record. See the <a href="code-interfaces.xhtml">code interface guide</a> for more.</p><h3 id="nested-dsls-4">Nested DSLs</h3><ul><li><a href="#resources-resource-define_calculation-custom_input">custom_input</a><ul><li>transform</li></ul></li></ul><h3 id="examples-6">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">define_calculation</span><span class="w"> </span><span class="ss">:referral_link</span><span class="p">,</span><span class="w"> </span><span class="nc">User</span><span class="p">,</span><span class="w"> </span><span class="ss">args</span><span class="p">:</span><span class="w"> </span><span class="p" data-group-id="7682935877-1">[</span><span class="ss">:id</span><span class="p" data-group-id="7682935877-1">]</span></code></pre><pre><code class="makeup elixir" translate="no"><span class="n">define_calculation</span><span class="w"> </span><span class="ss">:referral_link</span><span class="p">,</span><span class="w"> </span><span class="nc">User</span><span class="p">,</span><span class="w"> </span><span class="ss">args</span><span class="p">:</span><span class="w"> </span><span class="p" data-group-id="7336293430-1">[</span><span class="p" data-group-id="7336293430-2">{</span><span class="ss">:arg</span><span class="p">,</span><span class="w"> </span><span class="ss">:id</span><span class="p" data-group-id="7336293430-2">}</span><span class="p">,</span><span class="w"> </span><span class="p" data-group-id="7336293430-3">{</span><span class="ss">:ref</span><span class="p">,</span><span class="w"> </span><span class="ss">:id</span><span class="p" data-group-id="7336293430-3">}</span><span class="p" data-group-id="7336293430-1">]</span></code></pre><h3 id="arguments-3">Arguments</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a class="spark-required" href="#resources-resource-define_calculation-name" id="resources-resource-define_calculation-name"><code class="inline">name</code></a></td><td style="text-align: left;"><code class="inline">atom</code></td><td style="text-align: left;"></td><td style="text-align: left;">The name of the function that will be defined</td></tr></tbody></table><h3 id="options-5">Options</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a href="#resources-resource-define_calculation-calculation" id="resources-resource-define_calculation-calculation"><code class="inline">calculation</code></a></td><td style="text-align: left;"><code class="inline">atom</code></td><td style="text-align: left;"></td><td style="text-align: left;">The name of the calculation that will be evaluated. Defaults to the same name as the function.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define_calculation-exclude_inputs" id="resources-resource-define_calculation-exclude_inputs"><code class="inline">exclude_inputs</code></a></td><td style="text-align: left;"><code class="inline">list(atom)</code></td><td style="text-align: left;"><code class="inline">[]</code></td><td style="text-align: left;">A list of calculation inputs to not accept in the defined interface</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define_calculation-args" id="resources-resource-define_calculation-args"><code class="inline">args</code></a></td><td style="text-align: left;"><code class="inline">any</code></td><td style="text-align: left;"><code class="inline">[]</code></td><td style="text-align: left;">Supply field or argument values referenced by the calculation, in the form of :name, <code class="inline">{:arg, :name}</code> and/or <code class="inline">{:ref, :name}</code>. See the <a href="code-interfaces.xhtml">code interface guide</a> for more.</td></tr></tbody></table><h3 id="resources-resource-define_calculation-custom_input">resources.resource.define_calculation.custom_input</h3><pre><code class="makeup elixir" translate="no"><span class="n">custom_input</span><span class="w"> </span><span class="n">name</span><span class="p">,</span><span class="w"> </span><span class="n">type</span></code></pre><p>Define or customize an input to the action.</p><p>See the <a href="code-interfaces.xhtml">code interface guide</a> for more.</p><h3 id="nested-dsls-5">Nested DSLs</h3><ul><li><a href="#resources-resource-define_calculation-custom_input-transform">transform</a></li></ul><h3 id="examples-7">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">custom_input</span><span class="w"> </span><span class="ss">:artist</span><span class="p">,</span><span class="w"> </span><span class="ss">:struct</span><span class="w"> </span><span class="k" data-group-id="5355545955-1">do</span><span class="w">
  </span><span class="n">transform</span><span class="w"> </span><span class="ss">to</span><span class="p">:</span><span class="w"> </span><span class="ss">:artist_id</span><span class="p">,</span><span class="w"> </span><span class="ss">using</span><span class="p">:</span><span class="w"> </span><span class="o">&amp;</span><span class="p" data-group-id="5355545955-2">(</span><span class="ni">&amp;1</span><span class="o">.</span><span class="n">id</span><span class="p" data-group-id="5355545955-2">)</span><span class="w">

  </span><span class="n">constraints</span><span class="w"> </span><span class="ss">instance_of</span><span class="p">:</span><span class="w"> </span><span class="nc">Artist</span><span class="w">
</span><span class="k" data-group-id="5355545955-1">end</span><span class="w">
</span></code></pre><h3 id="arguments-4">Arguments</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a class="spark-required" href="#resources-resource-define_calculation-custom_input-name" id="resources-resource-define_calculation-custom_input-name"><code class="inline">name</code></a></td><td style="text-align: left;"><code class="inline">atom</code></td><td style="text-align: left;"></td><td style="text-align: left;">The name of the argument</td></tr><tr><td style="text-align: left;"><a class="spark-required" href="#resources-resource-define_calculation-custom_input-type" id="resources-resource-define_calculation-custom_input-type"><code class="inline">type</code></a></td><td style="text-align: left;"><code class="inline">module</code></td><td style="text-align: left;"></td><td style="text-align: left;">The type of the argument. See <a href="Ash.Type.xhtml"><code class="inline">Ash.Type</code></a> for more.</td></tr></tbody></table><h3 id="options-6">Options</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a href="#resources-resource-define_calculation-custom_input-description" id="resources-resource-define_calculation-custom_input-description"><code class="inline">description</code></a></td><td style="text-align: left;"><code class="inline">String.t</code></td><td style="text-align: left;"></td><td style="text-align: left;">An optional description for the argument.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define_calculation-custom_input-constraints" id="resources-resource-define_calculation-custom_input-constraints"><code class="inline">constraints</code></a></td><td style="text-align: left;"><code class="inline">keyword</code></td><td style="text-align: left;"><code class="inline">[]</code></td><td style="text-align: left;">Constraints to provide to the type when casting the value. For more information, see <a href="Ash.Type.xhtml"><code class="inline">Ash.Type</code></a>.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define_calculation-custom_input-allow_nil?" id="resources-resource-define_calculation-custom_input-allow_nil?"><code class="inline">allow_nil?</code></a></td><td style="text-align: left;"><code class="inline">boolean</code></td><td style="text-align: left;"><code class="inline">true</code></td><td style="text-align: left;">Whether or not the argument value may be nil (or may be not provided). If nil value is given error is raised.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define_calculation-custom_input-sensitive?" id="resources-resource-define_calculation-custom_input-sensitive?"><code class="inline">sensitive?</code></a></td><td style="text-align: left;"><code class="inline">boolean</code></td><td style="text-align: left;"><code class="inline">false</code></td><td style="text-align: left;">Whether or not the argument value contains sensitive information, like PII(Personally Identifiable Information). See the <a href="sensitive-data.xhtml">security guide</a> for more.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define_calculation-custom_input-default" id="resources-resource-define_calculation-custom_input-default"><code class="inline">default</code></a></td><td style="text-align: left;"><code class="inline">any</code></td><td style="text-align: left;"></td><td style="text-align: left;">The default value for the argument to take. It can be a zero argument function e.g <code class="inline">&amp;MyMod.my_fun/0</code> or a value</td></tr></tbody></table><h3 id="resources-resource-define_calculation-custom_input-transform">resources.resource.define_calculation.custom_input.transform</h3><p>A transformation to be applied to the custom input.</p><h3 id="examples-8">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">transform</span><span class="w"> </span><span class="k" data-group-id="8759679025-1">do</span><span class="w">
  </span><span class="n">to</span><span class="w"> </span><span class="ss">:artist_id</span><span class="w">
  </span><span class="n">using</span><span class="w"> </span><span class="o">&amp;</span><span class="p" data-group-id="8759679025-2">(</span><span class="ni">&amp;1</span><span class="o">.</span><span class="n">id</span><span class="p" data-group-id="8759679025-2">)</span><span class="w">
</span><span class="k" data-group-id="8759679025-1">end</span><span class="w">
</span></code></pre><pre><code class="makeup elixir" translate="no"><span class="n">transform</span><span class="w"> </span><span class="k" data-group-id="9937969647-1">do</span><span class="w">
  </span><span class="n">to</span><span class="w"> </span><span class="ss">:points</span><span class="w">
  </span><span class="n">using</span><span class="w"> </span><span class="o">&amp;</span><span class="n">try_parse_integer</span><span class="o">/</span><span class="mi">1</span><span class="w">
</span><span class="k" data-group-id="9937969647-1">end</span><span class="w">
</span></code></pre><h3 id="options-7">Options</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a href="#resources-resource-define_calculation-custom_input-transform-to" id="resources-resource-define_calculation-custom_input-transform-to"><code class="inline">to</code></a></td><td style="text-align: left;"><code class="inline">atom</code></td><td style="text-align: left;"></td><td style="text-align: left;">A key to rewrite the argument to. If the custom input is also a required positional argument, then the <code class="inline">to</code> is automatically added to the <code class="inline">exclude_inputs</code> list.</td></tr><tr><td style="text-align: left;"><a href="#resources-resource-define_calculation-custom_input-transform-using" id="resources-resource-define_calculation-custom_input-transform-using"><code class="inline">using</code></a></td><td style="text-align: left;"><code class="inline">(any -&gt; any)</code></td><td style="text-align: left;"></td><td style="text-align: left;">A function to use to transform the value. Must return <code class="inline">value</code> or <code class="inline">nil</code></td></tr></tbody></table><h3 id="introspection-3">Introspection</h3><p>Target: <a href="Ash.Resource.Interface.CustomInput.Transform.xhtml"><code class="inline">Ash.Resource.Interface.CustomInput.Transform</code></a></p><h3 id="introspection-4">Introspection</h3><p>Target: <a href="Ash.Resource.Interface.CustomInput.xhtml"><code class="inline">Ash.Resource.Interface.CustomInput</code></a></p><h3 id="introspection-5">Introspection</h3><p>Target: <a href="Ash.Resource.CalculationInterface.xhtml"><code class="inline">Ash.Resource.CalculationInterface</code></a></p><h3 id="introspection-6">Introspection</h3><p>Target: <a href="Ash.Domain.Dsl.ResourceReference.xhtml"><code class="inline">Ash.Domain.Dsl.ResourceReference</code></a></p><h2 id="execution">execution</h2><p>Options for how requests are executed using this domain</p><h3 id="examples-9">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">execution</span><span class="w"> </span><span class="k" data-group-id="7526416188-1">do</span><span class="w">
  </span><span class="n">timeout</span><span class="w"> </span><span class="nc">:timer</span><span class="o">.</span><span class="n">seconds</span><span class="p" data-group-id="7526416188-2">(</span><span class="mi">30</span><span class="p" data-group-id="7526416188-2">)</span><span class="w">
</span><span class="k" data-group-id="7526416188-1">end</span><span class="w">
</span></code></pre><h3 id="options-8">Options</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a href="#execution-timeout" id="execution-timeout"><code class="inline">timeout</code></a></td><td style="text-align: left;"><code class="inline">timeout</code></td><td style="text-align: left;"><code class="inline">:infinity</code></td><td style="text-align: left;">The default timeout in milliseconds to use for requests using this domain. See the <a href="timeouts.xhtml">timeouts guide</a> for more.</td></tr><tr><td style="text-align: left;"><a href="#execution-trace_name" id="execution-trace_name"><code class="inline">trace_name</code></a></td><td style="text-align: left;"><code class="inline">String.t</code></td><td style="text-align: left;"></td><td style="text-align: left;">The name to use in traces. Defaults to the last part of the module. See the <a href="monitoring.xhtml">monitoring guide</a> for more</td></tr></tbody></table><h2 id="authorization">authorization</h2><p>Options for how requests are authorized using this domain. See the <a href="sensitive-data.xhtml">Sensitive Data guide</a> for more.</p><h3 id="examples-10">Examples</h3><pre><code class="makeup elixir" translate="no"><span class="n">authorization</span><span class="w"> </span><span class="k" data-group-id="4720905985-1">do</span><span class="w">
  </span><span class="n">authorize</span><span class="w"> </span><span class="ss">:always</span><span class="w">
</span><span class="k" data-group-id="4720905985-1">end</span><span class="w">
</span></code></pre><h3 id="options-9">Options</h3><table><thead><tr><th style="text-align: left;">Name</th><th style="text-align: left;">Type</th><th style="text-align: left;">Default</th><th style="text-align: left;">Docs</th></tr></thead><tbody><tr><td style="text-align: left;"><a href="#authorization-require_actor?" id="authorization-require_actor?"><code class="inline">require_actor?</code></a></td><td style="text-align: left;"><code class="inline">boolean</code></td><td style="text-align: left;"><code class="inline">false</code></td><td style="text-align: left;">Requires that an actor has been supplied.</td></tr><tr><td style="text-align: left;"><a href="#authorization-authorize" id="authorization-authorize"><code class="inline">authorize</code></a></td><td style="text-align: left;"><code class="inline">:always | :by_default | :when_requested</code></td><td style="text-align: left;"><code class="inline">:by_default</code></td><td style="text-align: left;">When to run authorization for a given request.</td></tr></tbody></table><style type="text/css">.spark-required::after { content: "*"; color: red !important; }</style>

  </body>
</html>
