<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Ash.Policy.Check.Builtins - ash v3.5.33</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Ash.Policy.Check.Builtins 
    </h1>


      <section id="moduledoc" class="docstring">
<p>The global authorization checks built into ash</p>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#accessing_from/2" data-no-tooltip="" translate="no">accessing_from(resource, relationship)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the current action is being run &quot;through&quot; a relationship.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#action/1" data-no-tooltip="" translate="no">action(action)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the action name matches the provided action name or names.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#action_type/1" data-no-tooltip="" translate="no">action_type(action_type)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the action type matches the provided type</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#actor_absent/0" data-no-tooltip="" translate="no">actor_absent()</a>

      </div>

        <div class="summary-synopsis"><p>This check is false when there is an actor specified, and true when the actor is <code class="inline">nil</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#actor_attribute_equals/2" data-no-tooltip="" translate="no">actor_attribute_equals(attribute, value)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the value of the specified attribute of the actor equals the specified value.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#actor_present/0" data-no-tooltip="" translate="no">actor_present()</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when there is an actor specified, and false when the actor is <code class="inline">nil</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#always/0" data-no-tooltip="" translate="no">always()</a>

      </div>

        <div class="summary-synopsis"><p>This check always passes.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#changing_attributes/1" data-no-tooltip="" translate="no">changing_attributes(opts)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when attribute changes correspond to the provided options.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#changing_relationship/1" data-no-tooltip="" translate="no">changing_relationship(relationship)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the specified relationship is changing</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#changing_relationships/1" data-no-tooltip="" translate="no">changing_relationships(relationships)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the specified relationships are changing</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#context_equals/2" data-no-tooltip="" translate="no">context_equals(key, value)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the value of the specified key or path in the changeset or query context equals the specified value.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#filtering_on/2" data-no-tooltip="" translate="no">filtering_on(path \\ [], field)</a>

          <span class="deprecated" title="`filtering_on/2` check is deprecated. Instead, add arguments and add policies that said arguments are set.

For complex queries, policies on what is being filtered on require multiple authorization passes of
the same resource, leading to a large amount of typically unnecessary complexity.

Additionally, they could yield false negatives in some scenarios, and more work would be needed
to ensure that they don't.
">deprecated</span>

      </div>

        <div class="summary-synopsis"><p>This check is true when the field provided is being referenced anywhere in a filter statement.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#just_created_with_action/1" data-no-tooltip="" translate="no">just_created_with_action(action_name)</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#loading/1" data-no-tooltip="" translate="no">loading(field)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the field or relationship, or path to field, is being loaded and false when it is not.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#matches/2" data-no-tooltip="" translate="no">matches(description, func)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the specified function returns true</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#never/0" data-no-tooltip="" translate="no">never()</a>

      </div>

        <div class="summary-synopsis"><p>This check never passes.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#relates_to_actor_via/2" data-no-tooltip="" translate="no">relates_to_actor_via(relationship_path, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>This check passes if the data relates to the actor via the specified relationship or path of relationships.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#relating_to_actor/1" data-no-tooltip="" translate="no">relating_to_actor(relationship)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the specified relationship is being changed to the current actor.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#resource/1" data-no-tooltip="" translate="no">resource(resource)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the resource name matches the provided resource name or names.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#selecting/1" data-no-tooltip="" translate="no">selecting(attribute)</a>

      </div>

        <div class="summary-synopsis"><p>This check is true when the field is being selected and false when it is not.</p></div>

    </div>

</div>

      </section>


      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>
        <div class="functions-list">
<section class="detail" id="accessing_from/2">

  <div class="detail-header">
    <a href="#accessing_from/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">accessing_from(resource, relationship)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L189" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> accessing_from(<a href="Ash.Resource.xhtml#t:t/0">Ash.Resource.t</a>(), <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>()) :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check is true when the current action is being run &quot;through&quot; a relationship.</p><p>Cases where this happens:</p><ol><li>Loading related data</li><li>Managing relationships</li><li>Aggregating data</li><li>Filtering on relationships</li></ol>
  </section>
</section>
<section class="detail" id="action/1">

  <div class="detail-header">
    <a href="#action/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">action(action)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L70" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> action(<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>() | [<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>()]) :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check is true when the action name matches the provided action name or names.</p><p>This is a very common pattern, allowing action-specific policies.</p>
  </section>
</section>
<section class="detail" id="action_type/1">

  <div class="detail-header">
    <a href="#action_type/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">action_type(action_type)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L49" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> action_type(<a href="Ash.Resource.Actions.xhtml#t:action_type/0">Ash.Resource.Actions.action_type</a>()) :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check is true when the action type matches the provided type</p><p>This is useful for writing policies that apply to all actions of a given type.</p><p>For example:</p><pre><code class="makeup elixir" translate="no"><samp class="n">policy</samp><samp class="w"> </samp><samp class="n">action_type</samp><samp class="p" data-group-id="0734608343-1">(</samp><samp class="ss">:read</samp><samp class="p" data-group-id="0734608343-1">)</samp><samp class="w"> </samp><samp class="k" data-group-id="0734608343-2">do</samp><samp class="w">
  </samp><samp class="n">authorize_if</samp><samp class="w"> </samp><samp class="n">relates_to_actor_via</samp><samp class="p" data-group-id="0734608343-3">(</samp><samp class="ss">:owner</samp><samp class="p" data-group-id="0734608343-3">)</samp><samp class="w">
</samp><samp class="k" data-group-id="0734608343-2">end</samp></code></pre>
  </section>
</section>
<section class="detail" id="actor_absent/0">

  <div class="detail-header">
    <a href="#actor_absent/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">actor_absent()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L94" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> actor_absent() :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check is false when there is an actor specified, and true when the actor is <code class="inline">nil</code>.</p>
  </section>
</section>
<section class="detail" id="actor_attribute_equals/2">

  <div class="detail-header">
    <a href="#actor_attribute_equals/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">actor_attribute_equals(attribute, value)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L232" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> actor_attribute_equals(<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>(), <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">any</a>()) :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check is true when the value of the specified attribute of the actor equals the specified value.</p><p>This check will <em>never</em> pass if the actor does not have the specified key. For example,
<code class="inline">actor_attribute_equals(:missing_key, nil)</code></p>
  </section>
</section>
<section class="detail" id="actor_present/0">

  <div class="detail-header">
    <a href="#actor_present/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">actor_present()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L86" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> actor_present() :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check is true when there is an actor specified, and false when the actor is <code class="inline">nil</code>.</p>
  </section>
</section>
<section class="detail" id="always/0">

  <div class="detail-header">
    <a href="#always/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">always()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L20" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> always() :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check always passes.</p><p>Can be useful for &quot;deny-list&quot; style authorization. For example:</p><pre><code class="makeup elixir" translate="no"><samp class="n">policy</samp><samp class="w"> </samp><samp class="n">action_type</samp><samp class="p" data-group-id="3136792080-1">(</samp><samp class="ss">:read</samp><samp class="p" data-group-id="3136792080-1">)</samp><samp class="w"> </samp><samp class="k" data-group-id="3136792080-2">do</samp><samp class="w">
  </samp><samp class="n">forbid_if</samp><samp class="w"> </samp><samp class="n">actor_attribute_equals</samp><samp class="p" data-group-id="3136792080-3">(</samp><samp class="ss">:disabled</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p" data-group-id="3136792080-3">)</samp><samp class="w">
  </samp><samp class="n">forbid_if</samp><samp class="w"> </samp><samp class="n">actor_attribute_equals</samp><samp class="p" data-group-id="3136792080-4">(</samp><samp class="ss">:active</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="3136792080-4">)</samp><samp class="w">
  </samp><samp class="n">authorize_if</samp><samp class="w"> </samp><samp class="n">always</samp><samp class="p" data-group-id="3136792080-5">(</samp><samp class="p" data-group-id="3136792080-5">)</samp><samp class="w">
</samp><samp class="k" data-group-id="3136792080-2">end</samp></code></pre><p>Without that last clause, the policy would never pass.</p>
  </section>
</section>
<section class="detail" id="changing_attributes/1">

  <div class="detail-header">
    <a href="#changing_attributes/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">changing_attributes(opts)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L278" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>This check is true when attribute changes correspond to the provided options.</p><p>Provide a keyword list of options or just an atom representing the attribute.</p><p>For example:</p><pre><code class="makeup elixir" translate="no"><samp class="c1"># if you are changing both first name and last name</samp><samp class="w">
</samp><samp class="n">changing_attributes</samp><samp class="p" data-group-id="3940987248-1">(</samp><samp class="p" data-group-id="3940987248-2">[</samp><samp class="ss">:first_name</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:last_name</samp><samp class="p" data-group-id="3940987248-2">]</samp><samp class="p" data-group-id="3940987248-1">)</samp><samp class="w">

</samp><samp class="c1"># if you are changing first name to fred</samp><samp class="w">
</samp><samp class="n">changing_attributes</samp><samp class="p" data-group-id="3940987248-3">(</samp><samp class="ss">first_name</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3940987248-4">[</samp><samp class="ss">to</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;fred&quot;</samp><samp class="p" data-group-id="3940987248-4">]</samp><samp class="p" data-group-id="3940987248-3">)</samp><samp class="w">

</samp><samp class="c1"># if you are changing last name from bob</samp><samp class="w">
</samp><samp class="n">changing_attributes</samp><samp class="p" data-group-id="3940987248-5">(</samp><samp class="ss">last_name</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3940987248-6">[</samp><samp class="ss">from</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;bob&quot;</samp><samp class="p" data-group-id="3940987248-6">]</samp><samp class="p" data-group-id="3940987248-5">)</samp><samp class="w">

</samp><samp class="c1"># if you are changing :first_name at all, last_name from &quot;bob&quot; and middle name from &quot;tom&quot; to &quot;george&quot;</samp><samp class="w">
</samp><samp class="n">changing_attributes</samp><samp class="p" data-group-id="3940987248-7">(</samp><samp class="p" data-group-id="3940987248-8">[</samp><samp class="ss">:first_name</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">last_name</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3940987248-9">[</samp><samp class="ss">from</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;bob&quot;</samp><samp class="p" data-group-id="3940987248-9">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">middle_name</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3940987248-10">[</samp><samp class="ss">from</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;tom&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">to</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;george&quot;</samp><samp class="p" data-group-id="3940987248-10">]</samp><samp class="p" data-group-id="3940987248-8">]</samp><samp class="p" data-group-id="3940987248-7">)</samp></code></pre>
  </section>
</section>
<section class="detail" id="changing_relationship/1">

  <div class="detail-header">
    <a href="#changing_relationship/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">changing_relationship(relationship)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L304" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>This check is true when the specified relationship is changing</p>
  </section>
</section>
<section class="detail" id="changing_relationships/1">

  <div class="detail-header">
    <a href="#changing_relationships/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">changing_relationships(relationships)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L309" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>This check is true when the specified relationships are changing</p>
  </section>
</section>
<section class="detail" id="context_equals/2">

  <div class="detail-header">
    <a href="#context_equals/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">context_equals(key, value)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L253" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>This check is true when the value of the specified key or path in the changeset or query context equals the specified value.</p><p>Note that the context is not shared with other queries (e.g. loads).</p><p>For example:</p><pre><code class="makeup elixir" translate="no"><samp class="c1"># Given this check on Profile</samp><samp class="w">
</samp><samp class="n">authorize_if</samp><samp class="w"> </samp><samp class="n">context_equals</samp><samp class="p" data-group-id="7559624375-1">(</samp><samp class="ss">:allow_this?</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p" data-group-id="7559624375-1">)</samp><samp class="w">

</samp><samp class="c1"># This load will not have the context and will not be authorized</samp><samp class="w">
</samp><samp class="nc">Ash</samp><samp class="o">.</samp><samp class="n">load!</samp><samp class="p" data-group-id="7559624375-2">(</samp><samp class="n">user</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:profile</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">context</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="7559624375-3">%{</samp><samp class="ss">allow_this?</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p" data-group-id="7559624375-3">}</samp><samp class="p" data-group-id="7559624375-2">)</samp><samp class="w">

</samp><samp class="c1"># But this will have the context and will be authorized</samp><samp class="w">
</samp><samp class="nc">Ash</samp><samp class="o">.</samp><samp class="n">load!</samp><samp class="p" data-group-id="7559624375-4">(</samp><samp class="n">user</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7559624375-5">[</samp><samp class="ss">profile</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="nc">Ash.Query</samp><samp class="o">.</samp><samp class="n">set_context</samp><samp class="p" data-group-id="7559624375-6">(</samp><samp class="nc">Profile</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7559624375-7">%{</samp><samp class="ss">allow_this?</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p" data-group-id="7559624375-7">}</samp><samp class="p" data-group-id="7559624375-6">)</samp><samp class="p" data-group-id="7559624375-5">]</samp><samp class="p" data-group-id="7559624375-4">)</samp></code></pre>
  </section>
</section>
<section class="detail" id="filtering_on/2">

    <span id="filtering_on/1"></span>

  <div class="detail-header">
    <a href="#filtering_on/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">filtering_on(path \\ [], field)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L135" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

    <div class="deprecated">
      This function is deprecated. `filtering_on/2` check is deprecated. Instead, add arguments and add policies that said arguments are set.

For complex queries, policies on what is being filtered on require multiple authorization passes of
the same resource, leading to a large amount of typically unnecessary complexity.

Additionally, they could yield false negatives in some scenarios, and more work would be needed
to ensure that they don't.
.
    </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> filtering_on(<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>() | [<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>()], <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>()) :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check is true when the field provided is being referenced anywhere in a filter statement.</p><p>This applies to related filters as well. For example:</p><pre><code class="makeup elixir" translate="no"><samp class="n">policy</samp><samp class="w"> </samp><samp class="n">actor_attribute_equals</samp><samp class="p" data-group-id="6642291000-1">(</samp><samp class="ss">:is_admin</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="6642291000-1">)</samp><samp class="w"> </samp><samp class="k" data-group-id="6642291000-2">do</samp><samp class="w">
  </samp><samp class="n">forbid_if</samp><samp class="w"> </samp><samp class="n">filtering_on</samp><samp class="p" data-group-id="6642291000-3">(</samp><samp class="ss">:email</samp><samp class="p" data-group-id="6642291000-3">)</samp><samp class="w">
  </samp><samp class="c1"># a path can be provided as well</samp><samp class="w">
  </samp><samp class="n">forbid_if</samp><samp class="w"> </samp><samp class="n">filtering_on</samp><samp class="p" data-group-id="6642291000-4">(</samp><samp class="p" data-group-id="6642291000-5">[</samp><samp class="ss">:owner</samp><samp class="p" data-group-id="6642291000-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:email</samp><samp class="p" data-group-id="6642291000-4">)</samp><samp class="w">
</samp><samp class="k" data-group-id="6642291000-2">end</samp></code></pre><p>The first will return true in situations like:</p><pre><code class="makeup elixir" translate="no"><samp class="nc">Ash.Query</samp><samp class="o">.</samp><samp class="n">filter</samp><samp class="p" data-group-id="0771216325-1">(</samp><samp class="nc">User</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">email</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="s">&quot;blah&quot;</samp><samp class="p" data-group-id="0771216325-1">)</samp><samp class="w">
</samp><samp class="nc">Ash.Query</samp><samp class="o">.</samp><samp class="n">filter</samp><samp class="p" data-group-id="0771216325-2">(</samp><samp class="nc">Tweet</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">author</samp><samp class="o">.</samp><samp class="n">email</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="s">&quot;blah&quot;</samp><samp class="p" data-group-id="0771216325-2">)</samp></code></pre><p>The second will return true on queries like:</p><pre><code class="makeup elixir" translate="no"><samp class="nc">Ash.Query</samp><samp class="o">.</samp><samp class="n">filter</samp><samp class="p" data-group-id="3586136063-1">(</samp><samp class="nc">Post</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">owner</samp><samp class="o">.</samp><samp class="n">email</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="s">&quot;blah&quot;</samp><samp class="p" data-group-id="3586136063-1">)</samp><samp class="w">
</samp><samp class="nc">Ash.Query</samp><samp class="o">.</samp><samp class="n">filter</samp><samp class="p" data-group-id="3586136063-2">(</samp><samp class="nc">Comment</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">post</samp><samp class="o">.</samp><samp class="n">owner</samp><samp class="o">.</samp><samp class="n">email</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="s">&quot;blah&quot;</samp><samp class="p" data-group-id="3586136063-2">)</samp></code></pre>
  </section>
</section>
<section class="detail" id="just_created_with_action/1">

  <div class="detail-header">
    <a href="#just_created_with_action/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">just_created_with_action(action_name)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L60" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> just_created_with_action(<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>()) :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>


  </section>
</section>
<section class="detail" id="loading/1">

  <div class="detail-header">
    <a href="#loading/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">loading(field)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L174" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> loading(<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>()) :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check is true when the field or relationship, or path to field, is being loaded and false when it is not.</p><p>This is always false for <code class="inline">create</code>/<code class="inline">update</code>/<code class="inline">destroy</code> actions, because you cannot load fields on those action types.</p>
  </section>
</section>
<section class="detail" id="matches/2">

  <div class="detail-header">
    <a href="#matches/2" class="detail-link" data-no-tooltip="" aria-label="Link to this macro">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">matches(description, func)</h1>

        <span class="note">(macro)</span>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L314" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>This check is true when the specified function returns true</p>
  </section>
</section>
<section class="detail" id="never/0">

  <div class="detail-header">
    <a href="#never/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">never()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L31" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> never() :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check never passes.</p><p>There is, generally speaking, no reason to use this, but it exists for
completeness sake.</p>
  </section>
</section>
<section class="detail" id="relates_to_actor_via/2">

    <span id="relates_to_actor_via/1"></span>

  <div class="detail-header">
    <a href="#relates_to_actor_via/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">relates_to_actor_via(relationship_path, opts \\ [])</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L216" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> relates_to_actor_via(
  <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>(),
  <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">keyword</a>()
) :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check passes if the data relates to the actor via the specified relationship or path of relationships.</p><p>For <code class="inline">update</code> &amp; <code class="inline">destroy</code> actions, this check will apply to <em>the original data</em> before the changes are applied.</p><p>For <code class="inline">create</code> actions this check is very unlikely to pass. This is because relationships are modified <em>after</em> authorization
happens, not before.</p><p>For example:</p><pre><code class="makeup elixir" translate="no"><samp class="n">policy</samp><samp class="w"> </samp><samp class="n">action_type</samp><samp class="p" data-group-id="9817227325-1">(</samp><samp class="ss">:read</samp><samp class="p" data-group-id="9817227325-1">)</samp><samp class="w"> </samp><samp class="k" data-group-id="9817227325-2">do</samp><samp class="w">
  </samp><samp class="n">authorize_if</samp><samp class="w"> </samp><samp class="n">relates_to_actor_via</samp><samp class="p" data-group-id="9817227325-3">(</samp><samp class="ss">:owner</samp><samp class="p" data-group-id="9817227325-3">)</samp><samp class="w">

  </samp><samp class="c1"># Path of relationships:</samp><samp class="w">
  </samp><samp class="n">authorize_if</samp><samp class="w"> </samp><samp class="n">relates_to_actor_via</samp><samp class="p" data-group-id="9817227325-4">(</samp><samp class="p" data-group-id="9817227325-5">[</samp><samp class="ss">:account</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:user</samp><samp class="p" data-group-id="9817227325-5">]</samp><samp class="p" data-group-id="9817227325-4">)</samp><samp class="w">

  </samp><samp class="c1"># When the resource relates to a field of the actor:</samp><samp class="w">
  </samp><samp class="n">authorize_if</samp><samp class="w"> </samp><samp class="n">relates_to_actor_via</samp><samp class="p" data-group-id="9817227325-6">(</samp><samp class="ss">:roles</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">field</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:role</samp><samp class="p" data-group-id="9817227325-6">)</samp><samp class="w">
</samp><samp class="k" data-group-id="9817227325-2">end</samp></code></pre>
  </section>
</section>
<section class="detail" id="relating_to_actor/1">

  <div class="detail-header">
    <a href="#relating_to_actor/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">relating_to_actor(relationship)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L299" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>This check is true when the specified relationship is being changed to the current actor.</p><p>This only supports <code class="inline">belongs_to</code> relationships at the moment, and will detect two cases:</p><ol><li>the <code class="inline">source_attribute</code> is being changed directly</li><li>the relationship is being changed with <code class="inline">on_lookup?: :relate</code>, and a single input is being provided.</li></ol>
  </section>
</section>
<section class="detail" id="resource/1">

  <div class="detail-header">
    <a href="#resource/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">resource(resource)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L78" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> resource(<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>() | [<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>()]) :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check is true when the resource name matches the provided resource name or names.</p>
  </section>
</section>
<section class="detail" id="selecting/1">

  <div class="detail-header">
    <a href="#selecting/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">selecting(attribute)</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/policy/check/built_in_checks.ex#L164" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> selecting(<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>()) :: <a href="Ash.Policy.Check.xhtml#t:ref/0">Ash.Policy.Check.ref</a>()</pre>

      </div>

<p>This check is true when the field is being selected and false when it is not.</p><p>This won't affect filters placed on this resource, so you may also want to either:</p><ul><li>Mark the given field as <code class="inline">filterable? false</code></li><li>Add another check for <code class="inline">filtering_on(:field)</code></li></ul><p>For example:</p><pre><code class="makeup elixir" translate="no"><samp class="n">policy</samp><samp class="w"> </samp><samp class="n">action_type</samp><samp class="p" data-group-id="7313271560-1">(</samp><samp class="ss">:read</samp><samp class="p" data-group-id="7313271560-1">)</samp><samp class="w"> </samp><samp class="k" data-group-id="7313271560-2">do</samp><samp class="w">
  </samp><samp class="c1"># The actor can read and filter on their own email</samp><samp class="w">
  </samp><samp class="n">authorize_if</samp><samp class="w"> </samp><samp class="n">expr</samp><samp class="p" data-group-id="7313271560-3">(</samp><samp class="n">id</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="o">^</samp><samp class="n">actor</samp><samp class="p" data-group-id="7313271560-4">(</samp><samp class="ss">:id</samp><samp class="p" data-group-id="7313271560-4">)</samp><samp class="p" data-group-id="7313271560-3">)</samp><samp class="w">

  </samp><samp class="c1"># No one else can select or filter on their email</samp><samp class="w">
  </samp><samp class="n">forbid_if</samp><samp class="w"> </samp><samp class="n">selecting</samp><samp class="p" data-group-id="7313271560-5">(</samp><samp class="ss">:email</samp><samp class="p" data-group-id="7313271560-5">)</samp><samp class="w">
  </samp><samp class="n">forbid_if</samp><samp class="w"> </samp><samp class="n">filtering_on</samp><samp class="p" data-group-id="7313271560-6">(</samp><samp class="ss">:email</samp><samp class="p" data-group-id="7313271560-6">)</samp><samp class="w">

  </samp><samp class="c1"># Otherwise, the policy passes</samp><samp class="w">
  </samp><samp class="n">authorize_if</samp><samp class="w"> </samp><samp class="n">always</samp><samp class="p" data-group-id="7313271560-7">(</samp><samp class="p" data-group-id="7313271560-7">)</samp><samp class="w">
</samp><samp class="k" data-group-id="7313271560-2">end</samp></code></pre>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
