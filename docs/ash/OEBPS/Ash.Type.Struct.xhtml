<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Ash.Type.Struct - ash v3.5.33</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Ash.Type.Struct 
    </h1>


      <section id="moduledoc" class="docstring">
<p>Represents a struct.</p><p>Use the <code class="inline">instance_of</code> constraint to specify that it must be an instance of a specific struct.</p><p>This cannot be loaded from a database unless the <code class="inline">instance_of</code> constraint is provided.
If not, it can only be used to cast input, i.e for arguments.</p><h2 id="module-alternative-ash-typedstruct">Alternative: Ash.TypedStruct</h2><p>For simpler use cases where you want to define a struct with typed fields inline,
consider using <a href="Ash.TypedStruct.xhtml"><code class="inline">Ash.TypedStruct</code></a>. It provides a DSL for defining structs with:</p><ul><li>Field type specifications and constraints</li><li>Default values</li><li>Required fields (via <code class="inline">allow_nil?: false</code>)</li><li>Automatic <code class="inline">new/1</code> and <code class="inline">new!/1</code> functions</li></ul><p>Example:</p><pre><code class="makeup elixir" translate="no"><samp class="kd">defmodule</samp><samp class="w"> </samp><samp class="nc">MyStruct</samp><samp class="w"> </samp><samp class="k" data-group-id="8119938618-1">do</samp><samp class="w">
  </samp><samp class="kn">use</samp><samp class="w"> </samp><samp class="nc">Ash.TypedStruct</samp><samp class="w"> 
  </samp><samp class="n">typed_struct</samp><samp class="w"> </samp><samp class="k" data-group-id="8119938618-2">do</samp><samp class="w">
    </samp><samp class="n">field</samp><samp class="w"> </samp><samp class="ss">:name</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:string</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">allow_nil?</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="w">
    </samp><samp class="n">field</samp><samp class="w"> </samp><samp class="ss">:age</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:integer</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">constraints</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="8119938618-3">[</samp><samp class="ss">min</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="8119938618-3">]</samp><samp class="w">
    </samp><samp class="n">field</samp><samp class="w"> </samp><samp class="ss">:email</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:string</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">default</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">nil</samp><samp class="w">
  </samp><samp class="k" data-group-id="8119938618-2">end</samp><samp class="w">
</samp><samp class="k" data-group-id="8119938618-1">end</samp></code></pre><p><a href="Ash.TypedStruct.xhtml"><code class="inline">Ash.TypedStruct</code></a> automatically creates an <a href="Ash.Type.Struct.xhtml"><code class="inline">Ash.Type.Struct</code></a> with the appropriate
constraints under the hood.</p><h2 id="module-constraints">Constraints</h2><ul><li><p><code class="inline">:instance_of</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#basic-types"><code class="inline">atom/0</code></a>) - The module the struct should be an instance of</p></li><li><p><code class="inline">:preserve_nil_values?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - If set to true, when storing, nil values will be kept. Otherwise, nil values will be omitted. The default value is <code class="inline">false</code>.</p></li><li><p><code class="inline">:fields</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">keyword/0</code></a>) - The types of the fields in the struct, and their constraints.<br/>For example:  </p><pre><code class="makeup elixir" translate="no"><samp class="ss">fields</samp><samp class="p">:</samp><samp class="w">  </samp><samp class="p" data-group-id="6081297563-1">[</samp><samp class="w">
  </samp><samp class="ss">amount</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6081297563-2">[</samp><samp class="w">
    </samp><samp class="ss">type</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:integer</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="ss">description</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;The amount of the transaction&quot;</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="ss">constraints</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6081297563-3">[</samp><samp class="w">
      </samp><samp class="ss">max</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">10</samp><samp class="w">
    </samp><samp class="p" data-group-id="6081297563-3">]</samp><samp class="w">
  </samp><samp class="p" data-group-id="6081297563-2">]</samp><samp class="p">,</samp><samp class="w">
  </samp><samp class="ss">currency</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6081297563-4">[</samp><samp class="w">
    </samp><samp class="ss">type</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:string</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="ss">allow_nil?</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="ss">description</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;The currency code of the transaction&quot;</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="ss">constraints</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6081297563-5">[</samp><samp class="w">
      </samp><samp class="ss">max_length</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="w">
    </samp><samp class="p" data-group-id="6081297563-5">]</samp><samp class="w">
  </samp><samp class="p" data-group-id="6081297563-4">]</samp><samp class="w">
</samp><samp class="p" data-group-id="6081297563-1">]</samp><samp class="w">  </samp></code></pre><p>allow_nil? is true by default</p><ul><li><p><code class="inline">:type</code> (an <a href="Ash.Type.xhtml"><code class="inline">Ash.Type</code></a>) - Required.</p></li><li><p><code class="inline">:allow_nil?</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">boolean/0</code></a>) - The default value is <code class="inline">true</code>.</p></li><li><p><code class="inline">:description</code> (<a href="https://hexdocs.pm/elixir/String.html#t:t/0"><code class="inline">String.t/0</code></a>)</p></li><li><p><code class="inline">:constraints</code> (<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types"><code class="inline">keyword/0</code></a>) - The default value is <code class="inline">[]</code>.</p></li></ul></li></ul>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#handle_change?/0" data-no-tooltip="" translate="no">handle_change?()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#prepare_change?/0" data-no-tooltip="" translate="no">prepare_change?()</a>

      </div>

    </div>

</div>

      </section>


      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>
        <div class="functions-list">
<section class="detail" id="handle_change?/0">

  <div class="detail-header">
    <a href="#handle_change?/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">handle_change?()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/type/struct.ex#L1" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">


  </section>
</section>
<section class="detail" id="prepare_change?/0">

  <div class="detail-header">
    <a href="#prepare_change?/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">prepare_change?()</h1>


        <a href="https://github.com/ash-project/ash/blob/v3.5.33/lib/ash/type/struct.ex#L1" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">


  </section>
</section>

        </div>
      </section>


  </body>
</html>
