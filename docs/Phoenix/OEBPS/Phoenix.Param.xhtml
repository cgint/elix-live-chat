<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Phoenix.Param - Phoenix v1.7.21</title>
    <meta name="generator" content="ExDoc v0.37.3" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Phoenix.Param <small>protocol</small>
    </h1>


      <section id="moduledoc" class="docstring">
<p>A protocol that converts data structures into URL parameters.</p><p>This protocol is used by URL helpers and other parts of the
Phoenix stack. For example, when you write:</p><pre><code class="makeup elixir" translate="no"><samp class="n">user_path</samp><samp class="p" data-group-id="8493567888-1">(</samp><samp class="n">conn</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:edit</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="na">@user</samp><samp class="p" data-group-id="8493567888-1">)</samp></code></pre><p>Phoenix knows how to extract the <code class="inline">:id</code> from <code class="inline">@user</code> thanks
to this protocol.</p><p>By default, Phoenix implements this protocol for integers, binaries, atoms,
and structs. For structs, a key <code class="inline">:id</code> is assumed, but you may provide a
specific implementation.</p><p>Nil values cannot be converted to param.</p><h2 id="module-custom-parameters" class="section-heading">
  <a href="#module-custom-parameters" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Custom parameters</span>
</h2>
<p>In order to customize the parameter for any struct,
one can simply implement this protocol.</p><p>However, for convenience, this protocol can also be
derivable. For example:</p><pre><code class="makeup elixir" translate="no"><samp class="kd">defmodule</samp><samp class="w"> </samp><samp class="nc">User</samp><samp class="w"> </samp><samp class="k" data-group-id="9536681847-1">do</samp><samp class="w">
  </samp><samp class="na">@derive</samp><samp class="w"> </samp><samp class="nc">Phoenix.Param</samp><samp class="w">
  </samp><samp class="kd">defstruct</samp><samp class="w"> </samp><samp class="p" data-group-id="9536681847-2">[</samp><samp class="ss">:id</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:username</samp><samp class="p" data-group-id="9536681847-2">]</samp><samp class="w">
</samp><samp class="k" data-group-id="9536681847-1">end</samp></code></pre><p>By default, the derived implementation will also use
the <code class="inline">:id</code> key. In case the user does not contain an
<code class="inline">:id</code> key, the key can be specified with an option:</p><pre><code class="makeup elixir" translate="no"><samp class="kd">defmodule</samp><samp class="w"> </samp><samp class="nc">User</samp><samp class="w"> </samp><samp class="k" data-group-id="1205320031-1">do</samp><samp class="w">
  </samp><samp class="na">@derive</samp><samp class="w"> </samp><samp class="p" data-group-id="1205320031-2">{</samp><samp class="nc">Phoenix.Param</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">key</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:username</samp><samp class="p" data-group-id="1205320031-2">}</samp><samp class="w">
  </samp><samp class="kd">defstruct</samp><samp class="w"> </samp><samp class="p" data-group-id="1205320031-3">[</samp><samp class="ss">:username</samp><samp class="p" data-group-id="1205320031-3">]</samp><samp class="w">
</samp><samp class="k" data-group-id="1205320031-1">end</samp></code></pre><p>will automatically use <code class="inline">:username</code> in URLs.</p><p>When using Ecto, you must call <code class="inline">@derive</code> before
your <code class="inline">schema</code> call:</p><pre><code class="makeup elixir" translate="no"><samp class="na">@derive</samp><samp class="w"> </samp><samp class="p" data-group-id="4216375040-1">{</samp><samp class="nc">Phoenix.Param</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">key</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:username</samp><samp class="p" data-group-id="4216375040-1">}</samp><samp class="w">
</samp><samp class="n">schema</samp><samp class="w"> </samp><samp class="s">&quot;users&quot;</samp><samp class="w"> </samp><samp class="k" data-group-id="4216375040-2">do</samp></code></pre>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-types summary">
  <h2>
    <a href="#types">Types</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:t/0" data-no-tooltip="" translate="no">t()</a>

      </div>

        <div class="summary-synopsis"><p>All the types that implement this protocol.</p></div>

    </div>

</div>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_param/1" data-no-tooltip="" translate="no">to_param(term)</a>

      </div>

    </div>

</div>

      </section>


      <section id="types" class="details-list">
        <h1 class="section-heading">Types</h1>
        <div class="types-list">
<section class="detail" id="t:t/0">

  <div class="detail-header">
    <a href="#t:t/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">t()</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/param.ex#L1" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> t() :: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()</pre>

      </div>

<p>All the types that implement this protocol.</p>
  </section>
</section>

        </div>
      </section>

      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>
        <div class="functions-list">
<section class="detail" id="to_param/1">

  <div class="detail-header">
    <a href="#to_param/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_param(term)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/param.ex#L54" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_param(<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()) :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()</pre>

      </div>


  </section>
</section>

        </div>
      </section>


  </body>
</html>
