<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Deploying on Gigalixir - Phoenix v1.7.21</title>
    <meta name="generator" content="ExDoc v0.37.3" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Deploying on Gigalixir
    </h1>
<h2 id="what-we-ll-need" class="section-heading">
  <a href="#what-we-ll-need" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">What we'll need</span>
</h2>
<p>The only thing we'll need for this guide is a working Phoenix application. For those of us who need a simple application to deploy, please follow the <a href="https://hexdocs.pm/phoenix/up_and_running.html">Up and Running guide</a>.</p><h2 id="goals" class="section-heading">
  <a href="#goals" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Goals</span>
</h2>
<p>Our main goal for this guide is to get a Phoenix application running on Gigalixir.</p><h2 id="steps" class="section-heading">
  <a href="#steps" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Steps</span>
</h2>
<p>Let's separate this process into a few steps, so we can keep track of where we are.</p><ul><li>Initialize Git repository</li><li>Install the Gigalixir CLI</li><li>Sign up for Gigalixir</li><li>Create and set up Gigalixir application</li><li>Provision a database</li><li>Make our project ready for Gigalixir</li><li>Deploy time!</li><li>Useful Gigalixir commands</li></ul><h2 id="initializing-git-repository" class="section-heading">
  <a href="#initializing-git-repository" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Initializing Git repository</span>
</h2>
<p>If you haven't already, we'll need to commit our files to git. We can do so by running the following commands in our project directory:</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">git init
</span><span class="gp unselectable">$ </span><span class="">git add .
</span><span class="gp unselectable">$ </span><span class="">git commit -m &quot;Initial commit&quot;
</span></code></pre><h2 id="installing-the-gigalixir-cli" class="section-heading">
  <a href="#installing-the-gigalixir-cli" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Installing the Gigalixir CLI</span>
</h2>
<p>Follow the instructions <a href="https://gigalixir.readthedocs.io/en/latest/getting-started-guide.html#install-the-command-line-interface">here</a> to install the command-line interface for your platform.</p><h2 id="signing-up-for-gigalixir" class="section-heading">
  <a href="#signing-up-for-gigalixir" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Signing up for Gigalixir</span>
</h2>
<p>We can sign up for an account at <a href="https://www.gigalixir.com">gigalixir.com</a> or with the CLI. Let's use the CLI.</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir signup
</span></code></pre><p>Gigalixirâ€™s free tier does not require a credit card and comes with 1 app instance and 1 PostgreSQL database for free, but please consider upgrading to a paid plan if you are running a production application.</p><p>Next, let's login</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir login
</span></code></pre><p>And verify</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir account
</span></code></pre><h2 id="creating-and-setting-up-our-gigalixir-application" class="section-heading">
  <a href="#creating-and-setting-up-our-gigalixir-application" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Creating and setting up our Gigalixir application</span>
</h2>
<p>There are three different ways to deploy a Phoenix app on Gigalixir: with mix, with Elixir's releases, or with Distillery. In this guide, we'll be using Mix because it is the easiest to get up and running, but you won't be able to connect a remote observer or hot upgrade. For more information, see <a href="https://gigalixir.readthedocs.io/en/latest/modify-app/index.html#mix-vs-distillery-vs-elixir-releases">Mix vs Distillery vs Elixir Releases</a>. If you want to deploy with another method, follow the <a href="https://gigalixir.readthedocs.io/en/latest/getting-started-guide.html">Getting Started Guide</a>.</p><h3 id="creating-a-gigalixir-application" class="section-heading">
  <a href="#creating-a-gigalixir-application" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Creating a Gigalixir application</span>
</h3>
<p>Let's create a Gigalixir application</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir create -n &quot;your_app_name&quot;
</span></code></pre><p>Note: the app name cannot be changed afterwards. A random name is used if you do not provide one.</p><p>Verify the app was created</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir apps
</span></code></pre><p>Verify that a git remote was created </p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">git remote -v
</span></code></pre><h3 id="specifying-versions" class="section-heading">
  <a href="#specifying-versions" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Specifying versions</span>
</h3>
<p>The buildpacks we use default to Elixir, Erlang, and Node.js versions that are quite old and it's generally a good idea to run the same version in production as you do in development, so let's do that.</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">echo &#39;elixir_version=1.14.3&#39; &gt; elixir_buildpack.config
</span><span class="gp unselectable">$ </span><span class="">echo &#39;erlang_version=24.3&#39; &gt;&gt; elixir_buildpack.config
</span><span class="gp unselectable">$ </span><span class="">echo &#39;node_version=12.16.3&#39; &gt; phoenix_static_buildpack.config
</span></code></pre><p>Phoenix v1.6 uses <code class="inline">esbuild</code> to compile your assets, but all Gigalixir images come with <code class="inline">npm</code>, so we will configure <code class="inline">npm</code> directly to deploy our assets. Add a <code class="inline">assets/package.json</code> file if you don't have any with the following:</p><pre><code class="makeup json" translate="no"><span class="p">{</span><span class="w">
</span><span class="w">  </span><span class="p">&quot;</span><span class="s2">scripts</span><span class="p">&quot;</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
</span><span class="w">    </span><span class="p">&quot;</span><span class="s2">deploy</span><span class="p">&quot;</span><span class="p">:</span><span class="w"> </span><span class="p">&quot;</span><span class="s2">cd .. &amp;&amp; mix assets.deploy &amp;&amp; rm -f _build/esbuild*</span><span class="p">&quot;</span><span class="w">
</span><span class="w">  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span></code></pre><p>Finally, don't forget to commit:</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">git add elixir_buildpack.config phoenix_static_buildpack.config assets/package.json
</span><span class="gp unselectable">$ </span><span class="">git commit -m &quot;Set Elixir, Erlang, and Node version&quot;
</span></code></pre><h2 id="making-our-project-ready-for-gigalixir" class="section-heading">
  <a href="#making-our-project-ready-for-gigalixir" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Making our Project ready for Gigalixir</span>
</h2>
<p>There's nothing we need to do to get our app running on Gigalixir, but for a production app, you probably want to enforce SSL. To do that, see <a href="https://hexdocs.pm/phoenix/using_ssl.html#force-ssl">Force SSL</a></p><p>You may also want to use SSL for your database connection. For that, uncomment the line <code class="inline">ssl: true</code> in your <code class="inline">Repo</code> config.</p><h2 id="provisioning-a-database" class="section-heading">
  <a href="#provisioning-a-database" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Provisioning a database</span>
</h2>
<p>Let's provision a database for our app</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir pg:create --free
</span></code></pre><p>Verify the database was created</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir pg
</span></code></pre><p>Verify that a <code class="inline">DATABASE_URL</code> and <code class="inline">POOL_SIZE</code> were created</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir config
</span></code></pre><h2 id="deploy-time" class="section-heading">
  <a href="#deploy-time" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Deploy Time!</span>
</h2>
<p>Our project is now ready to be deployed on Gigalixir.</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">git push gigalixir
</span></code></pre><p>Check the status of your deploy and wait until the app is <code class="inline">Healthy</code></p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir ps
</span></code></pre><p>Run migrations</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir run mix ecto.migrate
</span></code></pre><p>Check your app logs</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir logs
</span></code></pre><p>If everything looks good, let's take a look at your app running on Gigalixir</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir open
</span></code></pre><h2 id="useful-gigalixir-commands" class="section-heading">
  <a href="#useful-gigalixir-commands" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Useful Gigalixir Commands</span>
</h2>
<p>Open a remote console</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">gigalixir account:ssh_keys:add &quot;$(cat ~/.ssh/id_rsa.pub)&quot;
</span><span class="gp unselectable">$ </span><span class="">gigalixir ps:remote_console
</span></code></pre><p>To open a remote observer, see <a href="https://gigalixir.readthedocs.io/en/latest/runtime.html#how-to-launch-a-remote-observer">Remote Observer</a></p><p>To set up clustering, see <a href="https://gigalixir.readthedocs.io/en/latest/cluster.html">Clustering Nodes</a></p><p>To hot upgrade, see <a href="https://gigalixir.readthedocs.io/en/latest/deploy.html#how-to-hot-upgrade-an-app">Hot Upgrades</a></p><p>For custom domains, scaling, jobs and other features, see the <a href="https://gigalixir.readthedocs.io/">Gigalixir Documentation</a></p><h2 id="troubleshooting" class="section-heading">
  <a href="#troubleshooting" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Troubleshooting</span>
</h2>
<p>See <a href="https://gigalixir.readthedocs.io/en/latest/troubleshooting.html">Troubleshooting</a></p><p>Also, don't hesitate to email <a href="mailto:help@gigalixir.com">help@gigalixir.com</a> or <a href="https://elixir-lang.slack.com/join/shared_invite/zt-1f13hz7mb-N4KGjF523ONLCcHfb8jYgA#/shared-invite/email">request an invitation</a> and join the #gigalixir channel on <a href="https://elixir-lang.slack.com">Slack</a>.</p>

  </body>
</html>
