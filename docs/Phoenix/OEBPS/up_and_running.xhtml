<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Up and Running - Phoenix v1.7.21</title>
    <meta name="generator" content="ExDoc v0.37.3" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Up and Running
    </h1>
<p>There are two mechanisms to start a new Phoenix application: the express option, supported on some OSes, and via <a href="https://hexdocs.pm/phx_new/1.8.0-rc.3/Mix.Tasks.Phx.New.html"><code class="inline">mix phx.new</code></a>. Let's check it out.</p><h2 id="phoenix-express" class="section-heading">
  <a href="#phoenix-express" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Phoenix Express</span>
</h2>
<p>A single command will get you up and running in seconds:</p><p>For macOS/Ubuntu:</p><pre><code class="makeup bash" translate="no"><span class="gp unselectable">$ </span><span class="">curl https://new.phoenixframework.org/myapp | sh
</span></code></pre><p>For Windows PowerShell:</p><pre><code class="cmd">&gt; curl.exe -fsSO https://new.phoenixframework.org/myapp.bat; .\myapp.bat</code></pre><p>The above will install Erlang, Elixir, and Phoenix, and generate a fresh Phoenix application. It will also automatically pick one of PostgreSQL or MySQL as the database, and fallback to SQLite if none of them are available. Once the command above, it will open up a Phoenix application, with the steps necessary to complete your installation.</p><blockquote><p>Your Phoenix application name is taken from the path.</p></blockquote><p>If your operating system is not supported, or the command above fails, don't fret! You can still start your Phoenix application using <a href="https://hexdocs.pm/phx_new/1.8.0-rc.3/Mix.Tasks.Phx.New.html"><code class="inline">mix phx.new</code></a>.</p><h2 id="via-mix-phx-new" class="section-heading">
  <a href="#via-mix-phx-new" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Via <a href="https://hexdocs.pm/phx_new/1.8.0-rc.3/Mix.Tasks.Phx.New.html"><code class="inline">mix phx.new</code></a></span>
</h2>
<p>In order to create a new Phoenix application, you will need to install Erlang, Elixir, and Phoenix. See the <a href="installation.html">Installation Guide</a> for more information. If you share your application with someone, they will also need to follow the Installation Guide steps to set it all up.</p><p>Once you are ready, you can run <a href="https://hexdocs.pm/phx_new/1.8.0-rc.3/Mix.Tasks.Phx.New.html"><code class="inline">mix phx.new</code></a> from any directory in order to bootstrap our Phoenix application. Phoenix will accept either an absolute or relative path for the directory of our new project. Assuming that the name of our application is <code class="inline">hello</code>, let's run the following command:</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">mix phx.new hello
</span></code></pre><blockquote><p>By default, <a href="https://hexdocs.pm/phx_new/1.8.0-rc.3/Mix.Tasks.Phx.New.html"><code class="inline">mix phx.new</code></a> includes a number of optional dependencies, for example:</p><ul><li><p><a href="ecto.html">Ecto</a> for communicating with a data store, such as PostgreSQL, MySQL, and others. You can skip this with <code class="inline">--no-ecto</code>.</p></li><li><p><a href="https://hexdocs.pm/phoenix_html/Phoenix.HTML.html">Phoenix.HTML</a>, <a href="https://tailwindcss.com">TailwindCSS</a>, and <a href="https://esbuild.github.io">Esbuild</a> for HTML applications. You can skip them with the <code class="inline">--no-html</code> and <code class="inline">--no-assets</code> flags.</p></li><li><p><a href="https://hexdocs.pm/phoenix_live_view/">Phoenix.LiveView</a> for building realtime and interactive web applications. You can skip this with <code class="inline">--no-live</code>.</p></li></ul><p>Read the <a href="mix_tasks.html#phoenix-specific-mix-tasks">Mix Tasks Guide</a> for the full list of things that can be excluded, among other options.</p></blockquote><pre><code class="makeup console" translate="no"><span class="">mix phx.new hello
</span><span class="">* creating hello/config/config.exs
</span><span class="">* creating hello/config/dev.exs
</span><span class="">* creating hello/config/prod.exs
</span><span class="">...
</span><span class="">
</span><span class="">Fetch and install dependencies? [Yn]
</span></code></pre><p>Phoenix generates the directory structure and all the files we will need for our application.</p><blockquote><p>Phoenix promotes the usage of git as version control software: among the generated files we find a <code class="inline">.gitignore</code>. We can <code class="inline">git init</code> our repository, and immediately add and commit all that hasn't been marked ignored.</p></blockquote><p>When it's done, it will ask us if we want it to install our dependencies for us. Let's say yes to that.</p><pre><code class="makeup console" translate="no"><span class="">Fetch and install dependencies? [Yn] Y
</span><span class="">* running mix deps.get
</span><span class="">* running mix assets.setup
</span><span class="">* running mix deps.compile
</span><span class="">
</span><span class="">We are almost there! The following steps are missing:
</span><span class="">
</span><span class="">    $ cd hello
</span><span class="">
</span><span class="">Then configure your database in config/dev.exs and run:
</span><span class="">
</span><span class="">    $ mix ecto.create
</span><span class="">
</span><span class="">Start your Phoenix app with:
</span><span class="">
</span><span class="">    $ mix phx.server
</span><span class="">
</span><span class="">You can also run your app inside IEx (Interactive Elixir) as:
</span><span class="">
</span><span class="">    $ iex -S mix phx.server
</span></code></pre><p>Once our dependencies are installed, the task will prompt us to change into our project directory and start our application.</p><p>Phoenix assumes that our PostgreSQL database will have a <code class="inline">postgres</code> user account with the correct permissions and a password of &quot;postgres&quot;. If that isn't the case, please see the <a href="mix_tasks.html#ecto-specific-mix-tasks">Mix Tasks Guide</a> to learn more about the <a href="https://hexdocs.pm/ecto/3.10.1/Mix.Tasks.Ecto.Create.html"><code class="inline">mix ecto.create</code></a> task.</p><p>Ok, let's give it a try. First, we'll <code class="inline">cd</code> into the <code class="inline">hello/</code> directory we've just created:</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">cd hello
</span></code></pre><p>Now we'll create our database:</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">mix ecto.create
</span><span class="">Compiling 13 files (.ex)
</span><span class="">Generated hello app
</span><span class="">The database for Hello.Repo has been created
</span></code></pre><p>In case the database could not be created, see the guides for the <a href="mix_tasks.html#mix-ecto-create"><code class="inline">mix ecto.create</code></a> for general troubleshooting.</p><blockquote><p>Note: if this is the first time you are running this command, Phoenix may also ask to install Rebar. Go ahead with the installation as Rebar is used to build Erlang packages.</p></blockquote><p>And finally, we'll start the Phoenix server:</p><pre><code class="makeup console" translate="no"><span class="gp unselectable">$ </span><span class="">mix phx.server
</span><span class="">[info] Running HelloWeb.Endpoint with cowboy 2.9.0 at 127.0.0.1:4000 (http)
</span><span class="">[info] Access HelloWeb.Endpoint at http://localhost:4000
</span><span class="">[watch] build finished, watching for changes...
</span><span class="">...
</span></code></pre><p>If we choose not to have Phoenix install our dependencies when we generate a new application, the <a href="https://hexdocs.pm/phx_new/1.8.0-rc.3/Mix.Tasks.Phx.New.html"><code class="inline">mix phx.new</code></a> task will prompt us to take the necessary steps when we do want to install them.</p><pre><code class="makeup console" translate="no"><span class="">Fetch and install dependencies? [Yn] n
</span><span class="">
</span><span class="">We are almost there! The following steps are missing:
</span><span class="">
</span><span class="">    $ cd hello
</span><span class="">    $ mix deps.get
</span><span class="">
</span><span class="">Then configure your database in config/dev.exs and run:
</span><span class="">
</span><span class="">    $ mix ecto.create
</span><span class="">
</span><span class="">Start your Phoenix app with:
</span><span class="">
</span><span class="">    $ mix phx.server
</span><span class="">
</span><span class="">You can also run your app inside IEx (Interactive Elixir) as:
</span><span class="">
</span><span class="">    $ iex -S mix phx.server
</span></code></pre><p>By default, Phoenix accepts requests on port 4000. If we point our favorite web browser at <a href="http://localhost:4000">http://localhost:4000</a>, we should see the Phoenix Framework welcome page.</p><p><img src="assets/images/welcome-to-phoenix.png" alt="Phoenix Welcome Page"/></p><p>If your screen looks like the image above, congratulations! You now have a working Phoenix application. In case you can't see the page above, try accessing it via <a href="http://127.0.0.1:4000">http://127.0.0.1:4000</a> and later make sure your OS has defined &quot;localhost&quot; as &quot;127.0.0.1&quot;.</p><p>To stop it, we hit <code class="inline">ctrl-c</code> twice.</p><p>Now you are ready to explore the world provided by Phoenix! See <a href="community.html">our community page</a> for books, screencasts, courses, and more.</p><p>Alternatively, you can continue reading these guides to have a quick introduction into all the parts that make your Phoenix application. If that's the case, you can read the guides in any order or start with our guide that explains the <a href="directory_structure.html">Phoenix directory structure</a>.</p>

  </body>
</html>
