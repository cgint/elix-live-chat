<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Phoenix.Endpoint - Phoenix v1.7.21</title>
    <meta name="generator" content="ExDoc v0.37.3" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Phoenix.Endpoint <small>behaviour</small>
    </h1>


      <section id="moduledoc" class="docstring">
<p>Defines a Phoenix endpoint.</p><p>The endpoint is the boundary where all requests to your
web application start. It is also the interface your
application provides to the underlying web servers.</p><p>Overall, an endpoint has three responsibilities:</p><ul><li><p>to provide a wrapper for starting and stopping the
endpoint as part of a supervision tree</p></li><li><p>to define an initial plug pipeline for requests
to pass through</p></li><li><p>to host web specific configuration for your
application</p></li></ul><h2 id="module-endpoints" class="section-heading">
  <a href="#module-endpoints" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Endpoints</span>
</h2>
<p>An endpoint is simply a module defined with the help
of <a href="Phoenix.Endpoint.xhtml"><code class="inline">Phoenix.Endpoint</code></a>. If you have used the <a href="https://hexdocs.pm/phx_new/1.8.0-rc.3/Mix.Tasks.Phx.New.html"><code class="inline">mix phx.new</code></a>
generator, an endpoint was automatically generated as
part of your application:</p><pre><code class="makeup elixir" translate="no"><samp class="kd">defmodule</samp><samp class="w"> </samp><samp class="nc">YourAppWeb.Endpoint</samp><samp class="w"> </samp><samp class="k" data-group-id="4009846999-1">do</samp><samp class="w">
  </samp><samp class="kn">use</samp><samp class="w"> </samp><samp class="nc">Phoenix.Endpoint</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">otp_app</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:your_app</samp><samp class="w">

  </samp><samp class="c1"># plug ...</samp><samp class="w">
  </samp><samp class="c1"># plug ...</samp><samp class="w">

  </samp><samp class="n">plug</samp><samp class="w"> </samp><samp class="nc">YourApp.Router</samp><samp class="w">
</samp><samp class="k" data-group-id="4009846999-1">end</samp></code></pre><p>Endpoints must be explicitly started as part of your application
supervision tree. Endpoints are added by default
to the supervision tree in generated applications. Endpoints can be
added to the supervision tree as follows:</p><pre><code class="makeup elixir" translate="no"><samp class="n">children</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="9526164252-1">[</samp><samp class="w">
  </samp><samp class="nc">YourAppWeb.Endpoint</samp><samp class="w">
</samp><samp class="p" data-group-id="9526164252-1">]</samp></code></pre><h2 id="module-endpoint-configuration" class="section-heading">
  <a href="#module-endpoint-configuration" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Endpoint configuration</span>
</h2>
<p>All endpoints are configured in your application environment.
For example:</p><pre><code class="makeup elixir" translate="no"><samp class="n">config</samp><samp class="w"> </samp><samp class="ss">:your_app</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">YourAppWeb.Endpoint</samp><samp class="p">,</samp><samp class="w">
  </samp><samp class="ss">secret_key_base</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;kjoy3o1zeidquwy1398juxzldjlksahdk3&quot;</samp></code></pre><p>Endpoint configuration is split into two categories. Compile-time
configuration means the configuration is read during compilation
and changing it at runtime has no effect. The compile-time
configuration is mostly related to error handling.</p><p>Runtime configuration, instead, is accessed during or
after your application is started and can be read through the
<a href="#c:config/2"><code class="inline">config/2</code></a> function:</p><pre><code class="makeup elixir" translate="no"><samp class="nc">YourAppWeb.Endpoint</samp><samp class="o">.</samp><samp class="n">config</samp><samp class="p" data-group-id="7987169903-1">(</samp><samp class="ss">:port</samp><samp class="p" data-group-id="7987169903-1">)</samp><samp class="w">
</samp><samp class="nc">YourAppWeb.Endpoint</samp><samp class="o">.</samp><samp class="n">config</samp><samp class="p" data-group-id="7987169903-2">(</samp><samp class="ss">:some_config</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:default_value</samp><samp class="p" data-group-id="7987169903-2">)</samp></code></pre><h3 id="module-compile-time-configuration" class="section-heading">
  <a href="#module-compile-time-configuration" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Compile-time configuration</span>
</h3>
<p>Compile-time configuration may be set on <code class="inline">config/dev.exs</code>, <code class="inline">config/prod.exs</code>
and so on, but has no effect on <code class="inline">config/runtime.exs</code>:</p><ul><li><p><code class="inline">:code_reloader</code> - when <code class="inline">true</code>, enables code reloading functionality.
For the list of code reloader configuration options see
<a href="Phoenix.CodeReloader.xhtml#reload/1"><code class="inline">Phoenix.CodeReloader.reload/1</code></a>. Keep in mind code reloading is
based on the file-system, therefore it is not possible to run two
instances of the same app at the same time with code reloading in
development, as they will race each other and only one will effectively
recompile the files. In such cases, tweak your config files so code
reloading is enabled in only one of the apps or set the MIX_BUILD
environment variable to give them distinct build directories</p></li><li><p><code class="inline">:debug_errors</code> - when <code class="inline">true</code>, uses <a href="https://hexdocs.pm/plug/1.15.3/Plug.Debugger.html"><code class="inline">Plug.Debugger</code></a> functionality for
debugging failures in the application. Recommended to be set to <code class="inline">true</code>
only in development as it allows listing of the application source
code during debugging. Defaults to <code class="inline">false</code></p></li><li><p><code class="inline">:force_ssl</code> - ensures no data is ever sent via HTTP, always redirecting
to HTTPS. It expects a list of options which are forwarded to <a href="https://hexdocs.pm/plug/1.15.3/Plug.SSL.html"><code class="inline">Plug.SSL</code></a>.
By default it sets the &quot;strict-transport-security&quot; header in HTTPS requests,
forcing browsers to always use HTTPS. If an unsafe request (HTTP) is sent,
it redirects to the HTTPS version using the <code class="inline">:host</code> specified in the <code class="inline">:url</code>
configuration. To dynamically redirect to the <code class="inline">host</code> of the current request,
set <code class="inline">:host</code> in the <code class="inline">:force_ssl</code> configuration to <code class="inline">nil</code></p></li></ul><h3 id="module-runtime-configuration" class="section-heading">
  <a href="#module-runtime-configuration" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Runtime configuration</span>
</h3>
<p>The configuration below may be set on <code class="inline">config/dev.exs</code>, <code class="inline">config/prod.exs</code>
and so on, as well as on <code class="inline">config/runtime.exs</code>. Typically, if you need to
configure them with system environment variables, you set them in
<code class="inline">config/runtime.exs</code>. These options may also be set when starting the
endpoint in your supervision tree, such as <code class="inline">{MyApp.Endpoint, options}</code>.</p><ul><li><p><code class="inline">:adapter</code> - which webserver adapter to use for serving web requests.
See the &quot;Adapter configuration&quot; section below</p></li><li><p><code class="inline">:cache_static_manifest</code> - a path to a json manifest file that contains
static files and their digested version. This is typically set to
&quot;priv/static/cache_manifest.json&quot; which is the file automatically generated
by <a href="Mix.Tasks.Phx.Digest.xhtml"><code class="inline">mix phx.digest</code></a>. It can be either: a string containing a file system path
or a tuple containing the application name and the path within that application.</p></li><li><p><code class="inline">:cache_static_manifest_latest</code> - a map of the static files pointing to their
digest version. This is automatically loaded from <code class="inline">cache_static_manifest</code> on
boot. However, if you have your own static handling mechanism, you may want to
set this value explicitly. This is used by projects such as <code class="inline">LiveView</code> to
detect if the client is running on the latest version of all assets.</p></li><li><p><code class="inline">:cache_manifest_skip_vsn</code> - when true, skips the appended query string
&quot;?vsn=d&quot; when generating paths to static assets. This query string is used
by <a href="https://hexdocs.pm/plug/1.15.3/Plug.Static.html"><code class="inline">Plug.Static</code></a> to set long expiry dates, therefore, you should set this
option to true only if you are not using <a href="https://hexdocs.pm/plug/1.15.3/Plug.Static.html"><code class="inline">Plug.Static</code></a> to serve assets,
for example, if you are using a CDN. If you are setting this option, you
should also consider passing <code class="inline">--no-vsn</code> to <a href="Mix.Tasks.Phx.Digest.xhtml"><code class="inline">mix phx.digest</code></a>. Defaults to
<code class="inline">false</code>.</p></li><li><p><code class="inline">:check_origin</code> - configure the default <code class="inline">:check_origin</code> setting for
transports. See <a href="#socket/3"><code class="inline">socket/3</code></a> for options. Defaults to <code class="inline">true</code>.</p></li><li><p><code class="inline">:secret_key_base</code> - a secret key used as a base to generate secrets
for encrypting and signing data. For example, cookies and tokens
are signed by default, but they may also be encrypted if desired.
Defaults to <code class="inline">nil</code> as it must be set per application</p></li><li><p><code class="inline">:server</code> - when <code class="inline">true</code>, starts the web server when the endpoint
supervision tree starts. Defaults to <code class="inline">false</code>. The <a href="Mix.Tasks.Phx.Server.xhtml"><code class="inline">mix phx.server</code></a>
task automatically sets this to <code class="inline">true</code></p></li><li><p><code class="inline">:url</code> - configuration for generating URLs throughout the app.
Accepts the <code class="inline">:host</code>, <code class="inline">:scheme</code>, <code class="inline">:path</code> and <code class="inline">:port</code> options. All
keys except <code class="inline">:path</code> can be changed at runtime. Defaults to:</p><pre><code class="makeup elixir" translate="no"><samp class="p" data-group-id="1347939950-1">[</samp><samp class="ss">host</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;localhost&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">path</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;/&quot;</samp><samp class="p" data-group-id="1347939950-1">]</samp></code></pre><p>The <code class="inline">:port</code> option requires either an integer or string. The <code class="inline">:host</code>
option requires a string.</p><p>The <code class="inline">:scheme</code> option accepts <code class="inline">&quot;http&quot;</code> and <code class="inline">&quot;https&quot;</code> values. Default value
is inferred from top level <code class="inline">:http</code> or <code class="inline">:https</code> option. It is useful
when hosting Phoenix behind a load balancer or reverse proxy and
terminating SSL there.</p><p>The <code class="inline">:path</code> option can be used to override root path. Useful when hosting
Phoenix behind a reverse proxy with URL rewrite rules</p></li><li><p><code class="inline">:static_url</code> - configuration for generating URLs for static files.
It will fallback to <code class="inline">url</code> if no option is provided. Accepts the same
options as <code class="inline">url</code></p></li><li><p><code class="inline">:watchers</code> - a set of watchers to run alongside your server. It
expects a list of tuples containing the executable and its arguments.
Watchers are guaranteed to run in the application directory, but only
when the server is enabled (unless <code class="inline">:force_watchers</code> configuration is
set to <code class="inline">true</code>). For example, the watcher below will run the &quot;watch&quot; mode
of the webpack build tool when the server starts. You can configure it
to whatever build tool or command you want:</p><pre><code class="makeup elixir" translate="no"><samp class="p" data-group-id="5808258374-1">[</samp><samp class="w">
  </samp><samp class="ss">node</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5808258374-2">[</samp><samp class="w">
    </samp><samp class="s">&quot;node_modules/webpack/bin/webpack.js&quot;</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="s">&quot;--mode&quot;</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="s">&quot;development&quot;</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="s">&quot;--watch&quot;</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="s">&quot;--watch-options-stdin&quot;</samp><samp class="w">
  </samp><samp class="p" data-group-id="5808258374-2">]</samp><samp class="w">
</samp><samp class="p" data-group-id="5808258374-1">]</samp></code></pre><p>The <code class="inline">:cd</code> and <code class="inline">:env</code> options can be given at the end of the list to customize
the watcher:</p><pre><code class="makeup elixir" translate="no"><samp class="p" data-group-id="1144171491-1">[</samp><samp class="ss">node</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="1144171491-2">[</samp><samp class="n">...</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">cd</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;assets&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">env</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="1144171491-3">[</samp><samp class="p" data-group-id="1144171491-4">{</samp><samp class="s">&quot;TAILWIND_MODE&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;watch&quot;</samp><samp class="p" data-group-id="1144171491-4">}</samp><samp class="p" data-group-id="1144171491-3">]</samp><samp class="p" data-group-id="1144171491-2">]</samp><samp class="p" data-group-id="1144171491-1">]</samp></code></pre><p>A watcher can also be a module-function-args tuple that will be invoked accordingly:</p><pre><code class="makeup elixir" translate="no"><samp class="p" data-group-id="1315881051-1">[</samp><samp class="ss">another</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="1315881051-2">{</samp><samp class="nc">Mod</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:fun</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1315881051-3">[</samp><samp class="n">arg1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">arg2</samp><samp class="p" data-group-id="1315881051-3">]</samp><samp class="p" data-group-id="1315881051-2">}</samp><samp class="p" data-group-id="1315881051-1">]</samp></code></pre></li><li><p><code class="inline">:force_watchers</code> - when <code class="inline">true</code>, forces your watchers to start
even when the <code class="inline">:server</code> option is set to <code class="inline">false</code>.</p></li><li><p><code class="inline">:live_reload</code> - configuration for the live reload option.
Configuration requires a <code class="inline">:patterns</code> option which should be a list of
file patterns to watch. When these files change, it will trigger a reload.</p><pre><code class="makeup elixir" translate="no"><samp class="ss">live_reload</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="7718016753-1">[</samp><samp class="w">
  </samp><samp class="ss">url</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;ws://localhost:4000&quot;</samp><samp class="p">,</samp><samp class="w">
  </samp><samp class="ss">patterns</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="7718016753-2">[</samp><samp class="w">
    </samp><samp class="sr">~r&quot;priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$&quot;</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="sr">~r&quot;lib/app_web/(live|views)/.*(ex)$&quot;</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="sr">~r&quot;lib/app_web/templates/.*(eex)$&quot;</samp><samp class="w">
  </samp><samp class="p" data-group-id="7718016753-2">]</samp><samp class="w">
</samp><samp class="p" data-group-id="7718016753-1">]</samp></code></pre></li><li><p><code class="inline">:pubsub_server</code> - the name of the pubsub server to use in channels
and via the Endpoint broadcast functions. The PubSub server is typically
started in your supervision tree.</p></li><li><p><code class="inline">:render_errors</code> - responsible for rendering templates whenever there
is a failure in the application. For example, if the application crashes
with a 500 error during a HTML request, <code class="inline">render(&quot;500.html&quot;, assigns)</code>
will be called in the view given to <code class="inline">:render_errors</code>.
A <code class="inline">:formats</code> list can be provided to specify a module per format to handle
error rendering. Example:</p><pre><code class="makeup elixir" translate="no"><samp class="p" data-group-id="9311932148-1">[</samp><samp class="ss">formats</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="9311932148-2">[</samp><samp class="ss">html</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="nc">MyApp.ErrorHTML</samp><samp class="p" data-group-id="9311932148-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">layout</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">log</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:debug</samp><samp class="p" data-group-id="9311932148-1">]</samp></code></pre></li><li><p><code class="inline">:log_access_url</code> - log the access url once the server boots</p></li></ul><p>Note that you can also store your own configurations in the Phoenix.Endpoint.
For example, <a href="https://hexdocs.pm/phoenix_live_view">Phoenix LiveView</a> expects
its own configuration under the <code class="inline">:live_view</code> key. In such cases, you should
consult the documentation of the respective projects.</p><h3 id="module-adapter-configuration" class="section-heading">
  <a href="#module-adapter-configuration" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Adapter configuration</span>
</h3>
<p>Phoenix allows you to choose which webserver adapter to use. Newly generated
applications created via the <code class="inline">phx.new</code> Mix task use the
<a href="https://github.com/mtrudel/bandit"><code class="inline">Bandit</code></a> webserver via the
<code class="inline">Bandit.PhoenixAdapter</code> adapter. If not otherwise specified via the <code class="inline">adapter</code>
option Phoenix will fall back to the <a href="Phoenix.Endpoint.Cowboy2Adapter.xhtml"><code class="inline">Phoenix.Endpoint.Cowboy2Adapter</code></a> for
backwards compatibility with applications generated prior to Phoenix 1.7.8.</p><p>Both adapters can be configured in a similar manner using the following two
top-level options:</p><ul><li><p><code class="inline">:http</code> - the configuration for the HTTP server. It accepts all options
as defined by either <a href="https://hexdocs.pm/bandit/Bandit.html#t:options/0"><code class="inline">Bandit</code></a>
or <a href="https://hexdocs.pm/plug_cowboy/"><code class="inline">Plug.Cowboy</code></a> depending on your
choice of adapter. Defaults to <code class="inline">false</code></p></li><li><p><code class="inline">:https</code> - the configuration for the HTTPS server. It accepts all options
as defined by either <a href="https://hexdocs.pm/bandit/Bandit.html#t:options/0"><code class="inline">Bandit</code></a>
or <a href="https://hexdocs.pm/plug_cowboy/"><code class="inline">Plug.Cowboy</code></a> depending on your
choice of adapter. Defaults to <code class="inline">false</code></p></li></ul><p>In addition, the connection draining can be configured for the Cowboy webserver via the following
top-level option (this is not required for Bandit as it has connection draining built-in):</p><ul><li><code class="inline">:drainer</code> - a drainer process waits for any on-going request to finish
during application shutdown. It accepts the <code class="inline">:shutdown</code> and
<code class="inline">:check_interval</code> options as defined by <a href="https://hexdocs.pm/plug_cowboy/2.7.0/Plug.Cowboy.Drainer.html"><code class="inline">Plug.Cowboy.Drainer</code></a>.
Note the draining does not terminate any existing connection, it simply
waits for them to finish. Socket connections run their own drainer
before this one is invoked. That's because sockets are stateful and
can be gracefully notified, which allows us to stagger them over a
longer period of time. See the documentation for <a href="#socket/3"><code class="inline">socket/3</code></a> for more
information</li></ul><h2 id="module-endpoint-api" class="section-heading">
  <a href="#module-endpoint-api" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Endpoint API</span>
</h2>
<p>In the previous section, we have used the <a href="#c:config/2"><code class="inline">config/2</code></a> function that is
automatically generated in your endpoint. Here's a list of all the functions
that are automatically defined in your endpoint:</p><ul><li><p>for handling paths and URLs: <a href="#c:struct_url/0"><code class="inline">struct_url/0</code></a>, <a href="#c:url/0"><code class="inline">url/0</code></a>, <a href="#c:path/1"><code class="inline">path/1</code></a>,
<a href="#c:static_url/0"><code class="inline">static_url/0</code></a>,<a href="#c:static_path/1"><code class="inline">static_path/1</code></a>, and <a href="#c:static_integrity/1"><code class="inline">static_integrity/1</code></a></p></li><li><p>for gathering runtime information about the address and port the
endpoint is running on: <a href="#c:server_info/1"><code class="inline">server_info/1</code></a></p></li><li><p>for broadcasting to channels: <a href="#c:broadcast/3"><code class="inline">broadcast/3</code></a>, <a href="#c:broadcast!/3"><code class="inline">broadcast!/3</code></a>,
<a href="#c:broadcast_from/4"><code class="inline">broadcast_from/4</code></a>, <a href="#c:broadcast_from!/4"><code class="inline">broadcast_from!/4</code></a>, <a href="#c:local_broadcast/3"><code class="inline">local_broadcast/3</code></a>,
and <a href="#c:local_broadcast_from/4"><code class="inline">local_broadcast_from/4</code></a></p></li><li><p>for configuration: <a href="#c:start_link/1"><code class="inline">start_link/1</code></a>, <a href="#c:config/2"><code class="inline">config/2</code></a>, and <a href="#c:config_change/2"><code class="inline">config_change/2</code></a></p></li><li><p>as required by the <a href="https://hexdocs.pm/plug/1.15.3/Plug.html"><code class="inline">Plug</code></a> behaviour: <a href="https://hexdocs.pm/plug/1.15.3/Plug.html#c:init/1"><code class="inline">Plug.init/1</code></a> and <a href="https://hexdocs.pm/plug/1.15.3/Plug.html#c:call/2"><code class="inline">Plug.call/2</code></a></p></li></ul>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-types summary">
  <h2>
    <a href="#types">Types</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:event/0" data-no-tooltip="" translate="no">event()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:msg/0" data-no-tooltip="" translate="no">msg()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:topic/0" data-no-tooltip="" translate="no">topic()</a>

      </div>

    </div>

</div>
<div class="summary-callbacks summary">
  <h2>
    <a href="#callbacks">Callbacks</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:broadcast/3" data-no-tooltip="" translate="no">broadcast(topic, event, msg)</a>

      </div>

        <div class="summary-synopsis"><p>Broadcasts a <code class="inline">msg</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> to all nodes.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:broadcast!/3" data-no-tooltip="" translate="no">broadcast!(topic, event, msg)</a>

      </div>

        <div class="summary-synopsis"><p>Broadcasts a <code class="inline">msg</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> to all nodes.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:broadcast_from/4" data-no-tooltip="" translate="no">broadcast_from(from, topic, event, msg)</a>

      </div>

        <div class="summary-synopsis"><p>Broadcasts a <code class="inline">msg</code> from the given <code class="inline">from</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> to all nodes.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:broadcast_from!/4" data-no-tooltip="" translate="no">broadcast_from!(from, topic, event, msg)</a>

      </div>

        <div class="summary-synopsis"><p>Broadcasts a <code class="inline">msg</code> from the given <code class="inline">from</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> to all nodes.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:config/2" data-no-tooltip="" translate="no">config key, default</a>

      </div>

        <div class="summary-synopsis"><p>Access the endpoint configuration given by key.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:config_change/2" data-no-tooltip="" translate="no">config_change(changed, removed)</a>

      </div>

        <div class="summary-synopsis"><p>Reload the endpoint configuration on application upgrades.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:host/0" data-no-tooltip="" translate="no">host()</a>

      </div>

        <div class="summary-synopsis"><p>Returns the host from the :url configuration.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:local_broadcast/3" data-no-tooltip="" translate="no">local_broadcast(topic, event, msg)</a>

      </div>

        <div class="summary-synopsis"><p>Broadcasts a <code class="inline">msg</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> within the current node.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:local_broadcast_from/4" data-no-tooltip="" translate="no">local_broadcast_from(from, topic, event, msg)</a>

      </div>

        <div class="summary-synopsis"><p>Broadcasts a <code class="inline">msg</code> from the given <code class="inline">from</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> within the current node.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:path/1" data-no-tooltip="" translate="no">path(path)</a>

      </div>

        <div class="summary-synopsis"><p>Generates the path information when routing to this endpoint.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:script_name/0" data-no-tooltip="" translate="no">script_name()</a>

      </div>

        <div class="summary-synopsis"><p>Returns the script name from the :url configuration.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:server_info/1" data-no-tooltip="" translate="no">server_info(scheme)</a>

      </div>

        <div class="summary-synopsis"><p>Returns the address and port that the server is running on</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:start_link/1" data-no-tooltip="" translate="no">start_link(keyword)</a>

      </div>

        <div class="summary-synopsis"><p>Starts the endpoint supervision tree.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:static_integrity/1" data-no-tooltip="" translate="no">static_integrity(path)</a>

      </div>

        <div class="summary-synopsis"><p>Generates an integrity hash to a static file in <code class="inline">priv/static</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:static_lookup/1" data-no-tooltip="" translate="no">static_lookup(path)</a>

      </div>

        <div class="summary-synopsis"><p>Generates a two item tuple containing the <code class="inline">static_path</code> and <code class="inline">static_integrity</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:static_path/1" data-no-tooltip="" translate="no">static_path(path)</a>

      </div>

        <div class="summary-synopsis"><p>Generates a route to a static file in <code class="inline">priv/static</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:static_url/0" data-no-tooltip="" translate="no">static_url()</a>

      </div>

        <div class="summary-synopsis"><p>Generates the static URL without any path information.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:struct_url/0" data-no-tooltip="" translate="no">struct_url()</a>

      </div>

        <div class="summary-synopsis"><p>Generates the endpoint base URL, but as a <a href="https://hexdocs.pm/elixir/URI.html"><code class="inline">URI</code></a> struct.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:subscribe/2" data-no-tooltip="" translate="no">subscribe(topic, opts)</a>

      </div>

        <div class="summary-synopsis"><p>Subscribes the caller to the given topic.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:unsubscribe/1" data-no-tooltip="" translate="no">unsubscribe(topic)</a>

      </div>

        <div class="summary-synopsis"><p>Unsubscribes the caller from the given topic.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#c:url/0" data-no-tooltip="" translate="no">url()</a>

      </div>

        <div class="summary-synopsis"><p>Generates the endpoint base URL without any path information.</p></div>

    </div>

</div>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#server?/2" data-no-tooltip="" translate="no">server?(otp_app, endpoint)</a>

      </div>

        <div class="summary-synopsis"><p>Checks if Endpoint's web server has been configured to start.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#socket/3" data-no-tooltip="" translate="no">socket(path, module, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Defines a websocket/longpoll mount-point for a <code class="inline">socket</code>.</p></div>

    </div>

</div>

      </section>


      <section id="types" class="details-list">
        <h1 class="section-heading">Types</h1>
        <div class="types-list">
<section class="detail" id="t:event/0">

  <div class="detail-header">
    <a href="#t:event/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">event()</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L278" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> event() :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:msg/0">

  <div class="detail-header">
    <a href="#t:msg/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">msg()</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L279" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> msg() :: <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">map</a>() | {:binary, <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">binary</a>()}</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:topic/0">

  <div class="detail-header">
    <a href="#t:topic/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">topic()</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L277" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> topic() :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()</pre>

      </div>


  </section>
</section>

        </div>
      </section>

      <section id="callbacks" class="details-list">
        <h1 class="section-heading">Callbacks</h1>
        <div class="callbacks-list">
<section class="detail" id="c:broadcast/3">

  <div class="detail-header">
    <a href="#c:broadcast/3" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">broadcast(topic, event, msg)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L376" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> broadcast(<a href="#t:topic/0">topic</a>(), <a href="#t:event/0">event</a>(), <a href="#t:msg/0">msg</a>()) :: :ok | {:error, <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()}</pre>

      </div>

<p>Broadcasts a <code class="inline">msg</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> to all nodes.</p>
  </section>
</section>
<section class="detail" id="c:broadcast!/3">

  <div class="detail-header">
    <a href="#c:broadcast!/3" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">broadcast!(topic, event, msg)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L383" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> broadcast!(<a href="#t:topic/0">topic</a>(), <a href="#t:event/0">event</a>(), <a href="#t:msg/0">msg</a>()) :: :ok</pre>

      </div>

<p>Broadcasts a <code class="inline">msg</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> to all nodes.</p><p>Raises in case of failures.</p>
  </section>
</section>
<section class="detail" id="c:broadcast_from/4">

  <div class="detail-header">
    <a href="#c:broadcast_from/4" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">broadcast_from(from, topic, event, msg)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L388" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> broadcast_from(from :: <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">pid</a>(), <a href="#t:topic/0">topic</a>(), <a href="#t:event/0">event</a>(), <a href="#t:msg/0">msg</a>()) :: :ok | {:error, <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()}</pre>

      </div>

<p>Broadcasts a <code class="inline">msg</code> from the given <code class="inline">from</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> to all nodes.</p>
  </section>
</section>
<section class="detail" id="c:broadcast_from!/4">

  <div class="detail-header">
    <a href="#c:broadcast_from!/4" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">broadcast_from!(from, topic, event, msg)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L395" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> broadcast_from!(from :: <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">pid</a>(), <a href="#t:topic/0">topic</a>(), <a href="#t:event/0">event</a>(), <a href="#t:msg/0">msg</a>()) :: :ok</pre>

      </div>

<p>Broadcasts a <code class="inline">msg</code> from the given <code class="inline">from</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> to all nodes.</p><p>Raises in case of failures.</p>
  </section>
</section>
<section class="detail" id="c:config/2">

  <div class="detail-header">
    <a href="#c:config/2" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">config key, default</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L296" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> config(key :: <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">atom</a>(), default :: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()) :: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()</pre>

      </div>

<p>Access the endpoint configuration given by key.</p>
  </section>
</section>
<section class="detail" id="c:config_change/2">

  <div class="detail-header">
    <a href="#c:config_change/2" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">config_change(changed, removed)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L301" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> config_change(changed :: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>(), removed :: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()) :: <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()</pre>

      </div>

<p>Reload the endpoint configuration on application upgrades.</p>
  </section>
</section>
<section class="detail" id="c:host/0">

  <div class="detail-header">
    <a href="#c:host/0" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">host()</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L348" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> host() :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()</pre>

      </div>

<p>Returns the host from the :url configuration.</p>
  </section>
</section>
<section class="detail" id="c:local_broadcast/3">

  <div class="detail-header">
    <a href="#c:local_broadcast/3" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">local_broadcast(topic, event, msg)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L400" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> local_broadcast(<a href="#t:topic/0">topic</a>(), <a href="#t:event/0">event</a>(), <a href="#t:msg/0">msg</a>()) :: :ok</pre>

      </div>

<p>Broadcasts a <code class="inline">msg</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> within the current node.</p>
  </section>
</section>
<section class="detail" id="c:local_broadcast_from/4">

  <div class="detail-header">
    <a href="#c:local_broadcast_from/4" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">local_broadcast_from(from, topic, event, msg)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L405" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> local_broadcast_from(from :: <a href="https://hexdocs.pm/elixir/typespecs.html#basic-types">pid</a>(), <a href="#t:topic/0">topic</a>(), <a href="#t:event/0">event</a>(), <a href="#t:msg/0">msg</a>()) :: :ok</pre>

      </div>

<p>Broadcasts a <code class="inline">msg</code> from the given <code class="inline">from</code> as <code class="inline">event</code> in the given <code class="inline">topic</code> within the current node.</p>
  </section>
</section>
<section class="detail" id="c:path/1">

  <div class="detail-header">
    <a href="#c:path/1" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">path(path)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L318" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> path(path :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()) :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()</pre>

      </div>

<p>Generates the path information when routing to this endpoint.</p>
  </section>
</section>
<section class="detail" id="c:script_name/0">

  <div class="detail-header">
    <a href="#c:script_name/0" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">script_name()</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L343" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> script_name() :: [<a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()]</pre>

      </div>

<p>Returns the script name from the :url configuration.</p>
  </section>
</section>
<section class="detail" id="c:server_info/1">

  <div class="detail-header">
    <a href="#c:server_info/1" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">server_info(scheme)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L355" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> server_info(<a href="https://hexdocs.pm/plug/1.15.3/Plug.Conn.html#t:scheme/0">Plug.Conn.scheme</a>()) ::
  {:ok,
   {<a href="https://www.erlang.org/doc/apps/kernel/inet.html#t:ip_address/0">:inet.ip_address</a>(), <a href="https://www.erlang.org/doc/apps/kernel/inet.html#t:port_number/0">:inet.port_number</a>()} | <a href="https://www.erlang.org/doc/apps/kernel/inet.html#t:returned_non_ip_address/0">:inet.returned_non_ip_address</a>()}
  | {:error, <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()}</pre>

      </div>

<p>Returns the address and port that the server is running on</p>
  </section>
</section>
<section class="detail" id="c:start_link/1">

  <div class="detail-header">
    <a href="#c:start_link/1" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">start_link(keyword)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L291" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> start_link(<a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">keyword</a>()) :: <a href="https://hexdocs.pm/elixir/Supervisor.html#t:on_start/0">Supervisor.on_start</a>()</pre>

      </div>

<p>Starts the endpoint supervision tree.</p><p>Starts endpoint's configuration cache and possibly the servers for
handling requests.</p>
  </section>
</section>
<section class="detail" id="c:static_integrity/1">

  <div class="detail-header">
    <a href="#c:static_integrity/1" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">static_integrity(path)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L333" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> static_integrity(path :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()) :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>() | nil</pre>

      </div>

<p>Generates an integrity hash to a static file in <code class="inline">priv/static</code>.</p>
  </section>
</section>
<section class="detail" id="c:static_lookup/1">

  <div class="detail-header">
    <a href="#c:static_lookup/1" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">static_lookup(path)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L338" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> static_lookup(path :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()) ::
  {<a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>(), <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()} | {<a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>(), nil}</pre>

      </div>

<p>Generates a two item tuple containing the <code class="inline">static_path</code> and <code class="inline">static_integrity</code>.</p>
  </section>
</section>
<section class="detail" id="c:static_path/1">

  <div class="detail-header">
    <a href="#c:static_path/1" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">static_path(path)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L328" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> static_path(path :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()) :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()</pre>

      </div>

<p>Generates a route to a static file in <code class="inline">priv/static</code>.</p>
  </section>
</section>
<section class="detail" id="c:static_url/0">

  <div class="detail-header">
    <a href="#c:static_url/0" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">static_url()</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L323" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> static_url() :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()</pre>

      </div>

<p>Generates the static URL without any path information.</p>
  </section>
</section>
<section class="detail" id="c:struct_url/0">

  <div class="detail-header">
    <a href="#c:struct_url/0" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">struct_url()</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L308" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> struct_url() :: <a href="https://hexdocs.pm/elixir/URI.html#t:t/0">URI.t</a>()</pre>

      </div>

<p>Generates the endpoint base URL, but as a <a href="https://hexdocs.pm/elixir/URI.html"><code class="inline">URI</code></a> struct.</p>
  </section>
</section>
<section class="detail" id="c:subscribe/2">

  <div class="detail-header">
    <a href="#c:subscribe/2" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">subscribe(topic, opts)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L366" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> subscribe(<a href="#t:topic/0">topic</a>(), opts :: <a href="https://hexdocs.pm/elixir/Keyword.html#t:t/0">Keyword.t</a>()) :: :ok | {:error, <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()}</pre>

      </div>

<p>Subscribes the caller to the given topic.</p><p>See <a href="https://hexdocs.pm/phoenix_pubsub/2.1.3/Phoenix.PubSub.html#subscribe/3"><code class="inline">Phoenix.PubSub.subscribe/3</code></a> for options.</p>
  </section>
</section>
<section class="detail" id="c:unsubscribe/1">

  <div class="detail-header">
    <a href="#c:unsubscribe/1" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">unsubscribe(topic)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L371" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> unsubscribe(<a href="#t:topic/0">topic</a>()) :: :ok | {:error, <a href="https://hexdocs.pm/elixir/typespecs.html#built-in-types">term</a>()}</pre>

      </div>

<p>Unsubscribes the caller from the given topic.</p>
  </section>
</section>
<section class="detail" id="c:url/0">

  <div class="detail-header">
    <a href="#c:url/0" class="detail-link" data-no-tooltip="" aria-label="Link to this callback">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">url()</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L313" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@callback</span> url() :: <a href="https://hexdocs.pm/elixir/String.html#t:t/0">String.t</a>()</pre>

      </div>

<p>Generates the endpoint base URL without any path information.</p>
  </section>
</section>

        </div>
      </section>

      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>
        <div class="functions-list">
<section class="detail" id="server?/2">

  <div class="detail-header">
    <a href="#server?/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">server?(otp_app, endpoint)</h1>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L1016" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>Checks if Endpoint's web server has been configured to start.</p><ul><li><code class="inline">otp_app</code> - The OTP app running the endpoint, for example <code class="inline">:my_app</code></li><li><code class="inline">endpoint</code> - The endpoint module, for example <code class="inline">MyAppWeb.Endpoint</code></li></ul><h2 id="server?/2-examples" class="section-heading">
  <a href="#server?/2-examples" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Examples</span>
</h2>
<pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Phoenix.Endpoint</samp><samp class="o">.</samp><samp class="n">server?</samp><samp class="p" data-group-id="1288426999-1">(</samp><samp class="ss">:my_app</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">MyAppWeb.Endpoint</samp><samp class="p" data-group-id="1288426999-1">)</samp><samp class="w">
</samp><samp class="no">true</samp></code></pre>
  </section>
</section>
<section class="detail" id="socket/3">

    <span id="socket/2"></span>

  <div class="detail-header">
    <a href="#socket/3" class="detail-link" data-no-tooltip="" aria-label="Link to this macro">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">socket(path, module, opts \\ [])</h1>

        <span class="note">(macro)</span>


        <a href="https://github.com/phoenixframework/phoenix/blob/v1.7.21/lib/phoenix/endpoint.ex#L990" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>Defines a websocket/longpoll mount-point for a <code class="inline">socket</code>.</p><p>It expects a <code class="inline">path</code>, a <code class="inline">socket</code> module, and a set of options.
The socket module is typically defined with <a href="Phoenix.Socket.xhtml"><code class="inline">Phoenix.Socket</code></a>.</p><p>Both websocket and longpolling connections are supported out
of the box.</p><h2 id="socket/3-options" class="section-heading">
  <a href="#socket/3-options" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Options</span>
</h2>
<ul><li><p><code class="inline">:websocket</code> - controls the websocket configuration.
Defaults to <code class="inline">true</code>. May be false or a keyword list
of options. See <a href="#socket/3-common-configuration">&quot;Common configuration&quot;</a>
and <a href="#socket/3-websocket-configuration">&quot;WebSocket configuration&quot;</a>
for the whole list</p></li><li><p><code class="inline">:longpoll</code> - controls the longpoll configuration.
Defaults to <code class="inline">false</code>. May be true or a keyword list
of options. See <a href="#socket/3-common-configuration">&quot;Common configuration&quot;</a>
and <a href="#socket/3-longpoll-configuration">&quot;Longpoll configuration&quot;</a>
for the whole list</p></li><li><p><code class="inline">:drainer</code> - a keyword list or a custom MFA function returning a keyword list, for example:</p><pre><code class="makeup elixir" translate="no"><samp class="p" data-group-id="5265911406-1">{</samp><samp class="nc">MyAppWeb.Socket</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:drainer_configuration</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5265911406-2">[</samp><samp class="p" data-group-id="5265911406-2">]</samp><samp class="p" data-group-id="5265911406-1">}</samp></code></pre><p>configuring how to drain sockets on application shutdown.
The goal is to notify all channels (and
LiveViews) clients to reconnect. The supported options are:</p><ul><li><code class="inline">:batch_size</code> - How many clients to notify at once in a given batch.
Defaults to 10000.</li><li><code class="inline">:batch_interval</code> - The amount of time in milliseconds given for a
batch to terminate. Defaults to 2000ms.</li><li><code class="inline">:shutdown</code> - The maximum amount of time in milliseconds allowed
to drain all batches. Defaults to 30000ms.</li><li><code class="inline">:log</code> - the log level for drain actions. Defaults the <code class="inline">:log</code> option
passed to <code class="inline">use Phoenix.Socket</code> or <code class="inline">:info</code>. Set it to <code class="inline">false</code> to disable logging.</li></ul><p>For example, if you have 150k connections, the default values will
split them into 15 batches of 10k connections. Each batch takes
2000ms before the next batch starts. In this case, we will do everything
right under the maximum shutdown time of 30000ms. Therefore, as
you increase the number of connections, remember to adjust the shutdown
accordingly. Finally, after the socket drainer runs, the lower level
HTTP/HTTPS connection drainer will still run, and apply to all connections.
Set it to <code class="inline">false</code> to disable draining.</p></li></ul><p>You can also pass the options below on <code class="inline">use Phoenix.Socket</code>.
The values specified here override the value in <code class="inline">use Phoenix.Socket</code>.</p><h2 id="socket/3-examples" class="section-heading">
  <a href="#socket/3-examples" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Examples</span>
</h2>
<pre><code class="makeup elixir" translate="no"><samp class="n">socket</samp><samp class="w"> </samp><samp class="s">&quot;/ws&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">MyApp.UserSocket</samp><samp class="w">

</samp><samp class="n">socket</samp><samp class="w"> </samp><samp class="s">&quot;/ws/admin&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">MyApp.AdminUserSocket</samp><samp class="p">,</samp><samp class="w">
  </samp><samp class="ss">longpoll</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p">,</samp><samp class="w">
  </samp><samp class="ss">websocket</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6927740736-1">[</samp><samp class="ss">compress</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p" data-group-id="6927740736-1">]</samp></code></pre><h2 id="socket/3-path-params" class="section-heading">
  <a href="#socket/3-path-params" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Path params</span>
</h2>
<p>It is possible to include variables in the path, these will be
available in the <code class="inline">params</code> that are passed to the socket.</p><pre><code class="makeup elixir" translate="no"><samp class="n">socket</samp><samp class="w"> </samp><samp class="s">&quot;/ws/:user_id&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">MyApp.UserSocket</samp><samp class="p">,</samp><samp class="w">
  </samp><samp class="ss">websocket</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="8307904709-1">[</samp><samp class="ss">path</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;/project/:project_id&quot;</samp><samp class="p" data-group-id="8307904709-1">]</samp></code></pre><h2 id="socket/3-common-configuration" class="section-heading">
  <a href="#socket/3-common-configuration" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Common configuration</span>
</h2>
<p>The configuration below can be given to both <code class="inline">:websocket</code> and
<code class="inline">:longpoll</code> keys:</p><ul><li><p><code class="inline">:path</code> - the path to use for the transport. Will default
 to the transport name (&quot;/websocket&quot; or &quot;/longpoll&quot;)</p></li><li><p><code class="inline">:serializer</code> - a list of serializers for messages. See
<a href="Phoenix.Socket.xhtml"><code class="inline">Phoenix.Socket</code></a> for more information</p></li><li><p><code class="inline">:transport_log</code> - if the transport layer itself should log and,
if so, the level</p></li><li><p><code class="inline">:check_origin</code> - if the transport should check the origin of requests when
the <code class="inline">origin</code> header is present. May be <code class="inline">true</code>, <code class="inline">false</code>, a list of hosts that
are allowed, or a function provided as MFA tuple. Defaults to <code class="inline">:check_origin</code>
setting at endpoint configuration.</p><p>If <code class="inline">true</code>, the header is checked against <code class="inline">:host</code> in <code class="inline">YourAppWeb.Endpoint.config(:url)[:host]</code>.</p><p>If <code class="inline">false</code> and you do not validate the session in your socket, your app
is vulnerable to Cross-Site WebSocket Hijacking (CSWSH) attacks.
Only use in development, when the host is truly unknown or when
serving clients that do not send the <code class="inline">origin</code> header, such as mobile apps.</p><p>You can also specify a list of explicitly allowed origins. Wildcards are
supported.</p><pre><code class="makeup elixir" translate="no"><samp class="ss">check_origin</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="8998572881-1">[</samp><samp class="w">
  </samp><samp class="s">&quot;https://example.com&quot;</samp><samp class="p">,</samp><samp class="w">
  </samp><samp class="s">&quot;//another.com:888&quot;</samp><samp class="p">,</samp><samp class="w">
  </samp><samp class="s">&quot;//*.other.com&quot;</samp><samp class="w">
</samp><samp class="p" data-group-id="8998572881-1">]</samp></code></pre><p>Or to accept any origin matching the request connection's host, port, and scheme:</p><pre><code class="makeup elixir" translate="no"><samp class="ss">check_origin</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:conn</samp></code></pre><p>Or a custom MFA function:</p><pre><code class="makeup elixir" translate="no"><samp class="ss">check_origin</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="0243009525-1">{</samp><samp class="nc">MyAppWeb.Auth</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:my_check_origin?</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="0243009525-2">[</samp><samp class="p" data-group-id="0243009525-2">]</samp><samp class="p" data-group-id="0243009525-1">}</samp></code></pre><p>The MFA is invoked with the request <code class="inline">%URI{}</code> as the first argument,
followed by arguments in the MFA list, and must return a boolean.</p></li><li><p><code class="inline">:code_reloader</code> - enable or disable the code reloader. Defaults to your
endpoint configuration</p></li><li><p><code class="inline">:connect_info</code> - a list of keys that represent data to be copied from
the transport to be made available in the user socket <code class="inline">connect/3</code> callback.
See the &quot;Connect info&quot; subsection for valid keys</p></li></ul><h3 id="socket/3-connect-info" class="section-heading">
  <a href="#socket/3-connect-info" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Connect info</span>
</h3>
<p>The valid keys are:</p><ul><li><p><code class="inline">:peer_data</code> - the result of <a href="https://hexdocs.pm/plug/1.15.3/Plug.Conn.html#get_peer_data/1"><code class="inline">Plug.Conn.get_peer_data/1</code></a></p></li><li><p><code class="inline">:trace_context_headers</code> - a list of all trace context headers. Supported
headers are defined by the <a href="https://www.w3.org/TR/trace-context-1/">W3C Trace Context Specification</a>.
These headers are necessary for libraries such as <a href="https://opentelemetry.io/">OpenTelemetry</a>
to extract trace propagation information to know this request is part of a
larger trace in progress.</p></li><li><p><code class="inline">:x_headers</code> - all request headers that have an &quot;x-&quot; prefix</p></li><li><p><code class="inline">:uri</code> - a <code class="inline">%URI{}</code> with information from the conn</p></li><li><p><code class="inline">:user_agent</code> - the value of the &quot;user-agent&quot; request header</p></li><li><p><code class="inline">{:session, session_config}</code> - the session information from <a href="https://hexdocs.pm/plug/1.15.3/Plug.Conn.html"><code class="inline">Plug.Conn</code></a>.
The <code class="inline">session_config</code> is typically an exact copy of the arguments given
to <a href="https://hexdocs.pm/plug/1.15.3/Plug.Session.html"><code class="inline">Plug.Session</code></a>. In order to validate the session, the &quot;_csrf_token&quot;
must be given as request parameter when connecting the socket with the
value of <code class="inline">URI.encode_www_form(Plug.CSRFProtection.get_csrf_token())</code>.
The CSRF token request parameter can be modified via the <code class="inline">:csrf_token_key</code>
option.</p><p>Additionally, <code class="inline">session_config</code> may be a MFA, such as
<code class="inline">{MyAppWeb.Auth, :get_session_config, []}</code>, to allow loading config in
runtime.</p></li></ul><p>Arbitrary keywords may also appear following the above valid keys, which
is useful for passing custom connection information to the socket.</p><p>For example:</p><pre><code class="makeup elixir" translate="no"><samp class="w">  </samp><samp class="n">socket</samp><samp class="w"> </samp><samp class="s">&quot;/socket&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">AppWeb.UserSocket</samp><samp class="p">,</samp><samp class="w">
      </samp><samp class="ss">websocket</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="2933283728-1">[</samp><samp class="w">
        </samp><samp class="ss">connect_info</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="2933283728-2">[</samp><samp class="ss">:peer_data</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:trace_context_headers</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:x_headers</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:uri</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">session</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="2933283728-3">[</samp><samp class="ss">store</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:cookie</samp><samp class="p" data-group-id="2933283728-3">]</samp><samp class="p" data-group-id="2933283728-2">]</samp><samp class="w">
      </samp><samp class="p" data-group-id="2933283728-1">]</samp></code></pre><p>With arbitrary keywords:</p><pre><code class="makeup elixir" translate="no"><samp class="w">  </samp><samp class="n">socket</samp><samp class="w"> </samp><samp class="s">&quot;/socket&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">AppWeb.UserSocket</samp><samp class="p">,</samp><samp class="w">
      </samp><samp class="ss">websocket</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6230349947-1">[</samp><samp class="w">
        </samp><samp class="ss">connect_info</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6230349947-2">[</samp><samp class="ss">:uri</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">custom_value</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;abcdef&quot;</samp><samp class="p" data-group-id="6230349947-2">]</samp><samp class="w">
      </samp><samp class="p" data-group-id="6230349947-1">]</samp></code></pre><section role="note" class="admonition tip"><h4 class="admonition-title tip">Where are my headers?</h4><p>Phoenix only gives you limited access to the connection headers for security
reasons. WebSockets are cross-domain, which means that, when a user &quot;John Doe&quot;
visits a malicious website, the malicious website can open up a WebSocket
connection to your application, and the browser will gladly submit John Doe's
authentication/cookie information. If you were to accept this information as is,
the malicious website would have full control of a WebSocket connection to your
application, authenticated on John Doe's behalf.</p><p>To safe-guard your application, Phoenix limits and validates the connection
information your socket can access. This means your application is safe from
these attacks, but you can't access cookies and other headers in your socket.
You may access the session stored in the connection via the <code class="inline">:connect_info</code>
option, provided you also pass a csrf token when connecting over WebSocket.</p></section><h2 id="socket/3-websocket-configuration" class="section-heading">
  <a href="#socket/3-websocket-configuration" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Websocket configuration</span>
</h2>
<p>The following configuration applies only to <code class="inline">:websocket</code>.</p><ul><li><p><code class="inline">:timeout</code> - the timeout for keeping websocket connections
open after it last received data, defaults to 60_000ms</p></li><li><p><code class="inline">:max_frame_size</code> - the maximum allowed frame size in bytes,
defaults to &quot;infinity&quot;</p></li><li><p><code class="inline">:fullsweep_after</code> - the maximum number of garbage collections
before forcing a fullsweep for the socket process. You can set
it to <code class="inline">0</code> to force more frequent cleanups of your websocket
transport processes. Setting this option requires Erlang/OTP 24</p></li><li><p><code class="inline">:compress</code> - whether to enable per message compression on
all data frames, defaults to false</p></li><li><p><code class="inline">:subprotocols</code> - a list of supported websocket subprotocols.
Used for handshake <code class="inline">Sec-WebSocket-Protocol</code> response header, defaults to nil.</p><p>For example:</p><pre><code class="makeup elixir" translate="no"><samp class="ss">subprotocols</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3476738656-1">[</samp><samp class="s">&quot;sip&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;mqtt&quot;</samp><samp class="p" data-group-id="3476738656-1">]</samp></code></pre></li><li><p><code class="inline">:error_handler</code> - custom error handler for connection errors.
If <a href="Phoenix.Socket.xhtml#c:connect/3"><code class="inline">Phoenix.Socket.connect/3</code></a> returns an <code class="inline">{:error, reason}</code> tuple,
the error handler will be called with the error reason. For WebSockets,
the error handler must be a MFA tuple that receives a <a href="https://hexdocs.pm/plug/1.15.3/Plug.Conn.html"><code class="inline">Plug.Conn</code></a>, the
error reason, and returns a <a href="https://hexdocs.pm/plug/1.15.3/Plug.Conn.html"><code class="inline">Plug.Conn</code></a> with a response. For example:</p><pre><code class="makeup elixir" translate="no"><samp class="n">socket</samp><samp class="w"> </samp><samp class="s">&quot;/socket&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">MySocket</samp><samp class="p">,</samp><samp class="w">
    </samp><samp class="ss">websocket</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="7320719717-1">[</samp><samp class="w">
      </samp><samp class="ss">error_handler</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="7320719717-2">{</samp><samp class="nc">MySocket</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:handle_error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7320719717-3">[</samp><samp class="p" data-group-id="7320719717-3">]</samp><samp class="p" data-group-id="7320719717-2">}</samp><samp class="w">
    </samp><samp class="p" data-group-id="7320719717-1">]</samp></code></pre><p>and a <code class="inline">{:error, :rate_limit}</code> return may be handled on <code class="inline">MySocket</code> as:</p><pre><code class="makeup elixir" translate="no"><samp class="kd">def</samp><samp class="w"> </samp><samp class="nf">handle_error</samp><samp class="p" data-group-id="3186548362-1">(</samp><samp class="n">conn</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:rate_limit</samp><samp class="p" data-group-id="3186548362-1">)</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">do</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="nc">Plug.Conn</samp><samp class="o">.</samp><samp class="n">send_resp</samp><samp class="p" data-group-id="3186548362-2">(</samp><samp class="n">conn</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">429</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Too many requests&quot;</samp><samp class="p" data-group-id="3186548362-2">)</samp></code></pre></li></ul><h2 id="socket/3-longpoll-configuration" class="section-heading">
  <a href="#socket/3-longpoll-configuration" class="hover-link">
    <i class="ri-link-m" aria-hidden="true"></i>
  </a>
  <span class="text">Longpoll configuration</span>
</h2>
<p>The following configuration applies only to <code class="inline">:longpoll</code>:</p><ul><li><p><code class="inline">:window_ms</code> - how long the client can wait for new messages
in its poll request in milliseconds (ms). Defaults to <code class="inline">10_000</code>.</p></li><li><p><code class="inline">:pubsub_timeout_ms</code> - how long a request can wait for the
pubsub layer to respond in milliseconds (ms). Defaults to <code class="inline">2000</code>.</p></li><li><p><code class="inline">:crypto</code> - options for verifying and signing the token, accepted
by <a href="Phoenix.Token.xhtml"><code class="inline">Phoenix.Token</code></a>. By default tokens are valid for 2 weeks</p></li></ul>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
