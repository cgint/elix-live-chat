<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>DateTime - Elixir v1.18.4</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
DateTime 
    </h1>


      <section id="moduledoc" class="docstring">
<p>A datetime implementation with a time zone.</p><p>This datetime can be seen as a snapshot of a date and time
at a given time zone. For such purposes, it also includes both
UTC and Standard offsets, as well as the zone abbreviation
field used exclusively for formatting purposes. Note future
datetimes are not necessarily guaranteed to exist, as time
zones may change any time in the future due to geopolitical
reasons. See the &quot;Datetimes as snapshots&quot; section for more
information.</p><p>Remember, comparisons in Elixir using <a href="Kernel.xhtml#==/2"><code class="inline">==/2</code></a>, <a href="Kernel.xhtml#%3E/2"><code class="inline">&gt;/2</code></a>, <a href="Kernel.xhtml#%3C/2"><code class="inline">&lt;/2</code></a> and friends
are structural and based on the DateTime struct fields. For proper
comparison between datetimes, use the <a href="#compare/2"><code class="inline">compare/2</code></a> function. The
existence of the <a href="#compare/2"><code class="inline">compare/2</code></a> function in this module also allows
using <a href="Enum.xhtml#min/2"><code class="inline">Enum.min/2</code></a> and <a href="Enum.xhtml#max/2"><code class="inline">Enum.max/2</code></a> functions to get the minimum and
maximum datetime of an <a href="Enum.xhtml"><code class="inline">Enum</code></a>. For example:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Enum</samp><samp class="o">.</samp><samp class="n">min</samp><samp class="p" data-group-id="2230226368-1">(</samp><samp class="p" data-group-id="2230226368-2">[</samp><samp class="ld">~U[2022-01-12 00:01:00.00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~U[2021-01-12 00:01:00.00Z]</samp><samp class="p" data-group-id="2230226368-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="p" data-group-id="2230226368-1">)</samp><samp class="w">
</samp><samp class="ld">~U[2021-01-12 00:01:00.00Z]</samp></code></pre><p>Developers should avoid creating the <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> struct directly
and instead rely on the functions provided by this module as
well as the ones in third-party calendar libraries.</p><h2 id="module-time-zone-database">Time zone database</h2><p>Many functions in this module require a time zone database.
A time zone database is a record of the UTC offsets that its locales have
used at various times in the past, are using, and are expected to use in the
future.
Because those plans can change, it needs to be periodically updated.</p><p>By default, <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> uses the default time zone database returned by
<a href="Calendar.xhtml#get_time_zone_database/0"><code class="inline">Calendar.get_time_zone_database/0</code></a>, which defaults to
<a href="Calendar.UTCOnlyTimeZoneDatabase.xhtml"><code class="inline">Calendar.UTCOnlyTimeZoneDatabase</code></a> which only handles &quot;Etc/UTC&quot;
datetimes and returns <code class="inline">{:error, :utc_only_time_zone_database}</code>
for any other time zone.</p><p>Other time zone databases can also be configured. Here are some
available options and libraries:</p><ul><li><a href="https://github.com/hrzndhrn/time_zone_info"><code class="inline">time_zone_info</code></a></li><li><a href="https://github.com/mathieuprog/tz"><code class="inline">tz</code></a></li><li><a href="https://github.com/lau/tzdata"><code class="inline">tzdata</code></a></li><li><a href="https://github.com/smartrent/zoneinfo"><code class="inline">zoneinfo</code></a> -
recommended for embedded devices</li></ul><p>To use one of them, first make sure it is added as a dependency in <code class="inline">mix.exs</code>.
It can then be configured either via configuration:</p><pre><code class="makeup elixir" translate="no"><samp class="n">config</samp><samp class="w"> </samp><samp class="ss">:elixir</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:time_zone_database</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">Tz.TimeZoneDatabase</samp></code></pre><p>or by calling <a href="Calendar.xhtml#put_time_zone_database/1"><code class="inline">Calendar.put_time_zone_database/1</code></a>:</p><pre><code class="makeup elixir" translate="no"><samp class="nc">Calendar</samp><samp class="o">.</samp><samp class="n">put_time_zone_database</samp><samp class="p" data-group-id="6417034495-1">(</samp><samp class="nc">Tz.TimeZoneDatabase</samp><samp class="p" data-group-id="6417034495-1">)</samp></code></pre><p>See the proper names in the library installation instructions.</p><h2 id="module-datetimes-as-snapshots">Datetimes as snapshots</h2><p>In the first section, we described datetimes as a &quot;snapshot of
a date and time at a given time zone&quot;. To understand precisely
what we mean, let's see an example.</p><p>Imagine someone in Poland who wants to schedule a meeting with someone
in Brazil in the next year. The meeting will happen at 2:30 AM
in the Polish time zone. At what time will the meeting happen in
Brazil?</p><p>You can consult the time zone database today, one year before,
using the API in this module and it will give you an answer that
is valid right now. However, this answer may not be valid in the
future. Why? Because both Brazil and Poland may change their timezone
rules, ultimately affecting the result. For example, a country may
choose to enter or abandon &quot;Daylight Saving Time&quot;, which is a
process where we adjust the clock one hour forward or one hour
back once per year. Whenever the rules change, the exact instant
that 2:30 AM in Polish time will be in Brazil may change.</p><p>In other words, whenever working with future DateTimes, there is
no guarantee the results you get will always be correct, until
the event actually happens. Therefore, when you ask for a future
time, the answers you get are a snapshot that reflects the current
state of the time zone rules. For datetimes in the past, this is
not a problem, because time zone rules do not change for past
events.</p><p>To make matters worse, it may be that 2:30 AM in Polish time
does not actually even exist or it is ambiguous. If a certain
time zone observes &quot;Daylight Saving Time&quot;, they will move their
clock forward once a year. When this happens, there is a whole
hour that does not exist. Then, when they move the clock back,
there is a certain hour that will happen twice. So if you want to
schedule a meeting when this shift back happens, you would need to
explicitly say which occurrence of 2:30 AM you mean: the one in
&quot;Summer Time&quot;, which occurs before the shift, or the one
in &quot;Standard Time&quot;, which occurs after it. Applications that are
date and time sensitive need to take these scenarios into account
and correctly communicate them to users.</p><p>The good news is: Elixir contains all of the building blocks
necessary to tackle those problems. The default timezone database
used by Elixir, <a href="Calendar.UTCOnlyTimeZoneDatabase.xhtml"><code class="inline">Calendar.UTCOnlyTimeZoneDatabase</code></a>, only works
with UTC, which does not observe those issues. Once you bring
a proper time zone database, the functions in this module will
query the database and return the relevant information. For
example, look at how <a href="#new/4"><code class="inline">DateTime.new/4</code></a> returns different results
based on the scenarios described in this section.</p><h2 id="module-converting-between-timezones">Converting between timezones</h2><p>Bearing in mind the cautions above, and assuming you've brought in a full
timezone database, here are some examples of common shifts between time
zones.</p><pre><code class="makeup elixir" translate="no"><samp class="c1"># Local time to UTC</samp><samp class="w">
</samp><samp class="n">new_york</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive!</samp><samp class="p" data-group-id="0798830400-1">(</samp><samp class="ld">~N[2023-06-26T09:30:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;America/New_York&quot;</samp><samp class="p" data-group-id="0798830400-1">)</samp><samp class="w">
</samp><samp class="c1">#=&gt; #DateTime&lt;2023-06-26 09:30:00-04:00 EDT America/New_York&gt;</samp><samp class="w">

</samp><samp class="n">utc</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift_zone!</samp><samp class="p" data-group-id="0798830400-2">(</samp><samp class="n">new_york</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="0798830400-2">)</samp><samp class="w">
</samp><samp class="c1">#=&gt; ~U[2023-06-26 13:30:00Z]</samp><samp class="w">

</samp><samp class="c1"># UTC to local time</samp><samp class="w">
</samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift_zone!</samp><samp class="p" data-group-id="0798830400-3">(</samp><samp class="n">utc</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Paris&quot;</samp><samp class="p" data-group-id="0798830400-3">)</samp><samp class="w">
</samp><samp class="c1">#=&gt; #DateTime&lt;2023-06-26 15:30:00+02:00 CEST Europe/Paris&gt;</samp></code></pre>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-types summary">
  <h2>
    <a href="#types">Types</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:t/0" data-no-tooltip="" translate="no">t()</a>

      </div>

    </div>

</div>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#add/4" data-no-tooltip="" translate="no">add(datetime, amount_to_add, unit \\ :second, time_zone_database \\ Calendar.get_time_zone_database())</a>

      </div>

        <div class="summary-synopsis"><p>Adds a specified amount of time to a <a><code class="inline">DateTime</code></a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#after?/2" data-no-tooltip="" translate="no">after?(datetime1, datetime2)</a>

      </div>

        <div class="summary-synopsis"><p>Returns <code class="inline">true</code> if the first datetime is strictly later than the second.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#before?/2" data-no-tooltip="" translate="no">before?(datetime1, datetime2)</a>

      </div>

        <div class="summary-synopsis"><p>Returns <code class="inline">true</code> if the first datetime is strictly earlier than the second.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#compare/2" data-no-tooltip="" translate="no">compare(datetime1, datetime2)</a>

      </div>

        <div class="summary-synopsis"><p>Compares two datetime structs.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#convert/2" data-no-tooltip="" translate="no">convert(datetime, calendar)</a>

      </div>

        <div class="summary-synopsis"><p>Converts a given <code class="inline">datetime</code> from one calendar to another.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#convert!/2" data-no-tooltip="" translate="no">convert!(datetime, calendar)</a>

      </div>

        <div class="summary-synopsis"><p>Converts a given <code class="inline">datetime</code> from one calendar to another.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#diff/3" data-no-tooltip="" translate="no">diff(datetime1, datetime2, unit \\ :second)</a>

      </div>

        <div class="summary-synopsis"><p>Subtracts <code class="inline">datetime2</code> from <code class="inline">datetime1</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#from_gregorian_seconds/3" data-no-tooltip="" translate="no">from_gregorian_seconds(seconds, arg \\ {0, 0}, calendar \\ Calendar.ISO)</a>

      </div>

        <div class="summary-synopsis"><p>Converts a number of gregorian seconds to a <a><code class="inline">DateTime</code></a> struct.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#from_iso8601/2" data-no-tooltip="" translate="no">from_iso8601(string, format_or_calendar \\ Calendar.ISO)</a>

      </div>

        <div class="summary-synopsis"><p>Parses the extended &quot;Date and time of day&quot; format described by
<a>ISO 8601:2019</a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#from_iso8601/3" data-no-tooltip="" translate="no">from_iso8601(string, calendar, format)</a>

      </div>

        <div class="summary-synopsis"><p>Converts from ISO8601 specifying both a calendar and a mode.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#from_naive/3" data-no-tooltip="" translate="no">from_naive(naive_datetime, time_zone, time_zone_database \\ Calendar.get_time_zone_database())</a>

      </div>

        <div class="summary-synopsis"><p>Converts the given <a><code class="inline">NaiveDateTime</code></a> to <a><code class="inline">DateTime</code></a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#from_naive!/3" data-no-tooltip="" translate="no">from_naive!(naive_datetime, time_zone, time_zone_database \\ Calendar.get_time_zone_database())</a>

      </div>

        <div class="summary-synopsis"><p>Converts the given <a><code class="inline">NaiveDateTime</code></a> to <a><code class="inline">DateTime</code></a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#from_unix/3" data-no-tooltip="" translate="no">from_unix(integer, unit \\ :second, calendar \\ Calendar.ISO)</a>

      </div>

        <div class="summary-synopsis"><p>Converts the given Unix time to <a><code class="inline">DateTime</code></a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#from_unix!/3" data-no-tooltip="" translate="no">from_unix!(integer, unit \\ :second, calendar \\ Calendar.ISO)</a>

      </div>

        <div class="summary-synopsis"><p>Converts the given Unix time to <a><code class="inline">DateTime</code></a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#new/4" data-no-tooltip="" translate="no">new(date, time, time_zone \\ &quot;Etc/UTC&quot;, time_zone_database \\ Calendar.get_time_zone_database())</a>

      </div>

        <div class="summary-synopsis"><p>Builds a datetime from date and time structs.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#new!/4" data-no-tooltip="" translate="no">new!(date, time, time_zone \\ &quot;Etc/UTC&quot;, time_zone_database \\ Calendar.get_time_zone_database())</a>

      </div>

        <div class="summary-synopsis"><p>Builds a datetime from date and time structs, raising on errors.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#now/2" data-no-tooltip="" translate="no">now(time_zone, time_zone_database \\ Calendar.get_time_zone_database())</a>

      </div>

        <div class="summary-synopsis"><p>Returns the current datetime in the provided time zone.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#now!/2" data-no-tooltip="" translate="no">now!(time_zone, time_zone_database \\ Calendar.get_time_zone_database())</a>

      </div>

        <div class="summary-synopsis"><p>Returns the current datetime in the provided time zone or raises on errors</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#shift/3" data-no-tooltip="" translate="no">shift(datetime, duration, time_zone_database \\ Calendar.get_time_zone_database())</a>

      </div>

        <div class="summary-synopsis"><p>Shifts given <code class="inline">datetime</code> by <code class="inline">duration</code> according to its calendar.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#shift_zone/3" data-no-tooltip="" translate="no">shift_zone(datetime, time_zone, time_zone_database \\ Calendar.get_time_zone_database())</a>

      </div>

        <div class="summary-synopsis"><p>Changes the time zone of a <a><code class="inline">DateTime</code></a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#shift_zone!/3" data-no-tooltip="" translate="no">shift_zone!(datetime, time_zone, time_zone_database \\ Calendar.get_time_zone_database())</a>

      </div>

        <div class="summary-synopsis"><p>Changes the time zone of a <a><code class="inline">DateTime</code></a> or raises on errors.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_date/1" data-no-tooltip="" translate="no">to_date(datetime)</a>

      </div>

        <div class="summary-synopsis"><p>Converts a <a><code class="inline">DateTime</code></a> into a <a><code class="inline">Date</code></a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_gregorian_seconds/1" data-no-tooltip="" translate="no">to_gregorian_seconds(datetime)</a>

      </div>

        <div class="summary-synopsis"><p>Converts a <a><code class="inline">DateTime</code></a> struct to a number of gregorian seconds and microseconds.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_iso8601/3" data-no-tooltip="" translate="no">to_iso8601(datetime, format \\ :extended, offset \\ nil)</a>

      </div>

        <div class="summary-synopsis"><p>Converts the given datetime to
<a>ISO 8601:2019</a> format.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_naive/1" data-no-tooltip="" translate="no">to_naive(datetime)</a>

      </div>

        <div class="summary-synopsis"><p>Converts the given <code class="inline">datetime</code> into a <a><code class="inline">NaiveDateTime</code></a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_string/1" data-no-tooltip="" translate="no">to_string(datetime)</a>

      </div>

        <div class="summary-synopsis"><p>Converts the given <code class="inline">datetime</code> to a string according to its calendar.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_time/1" data-no-tooltip="" translate="no">to_time(datetime)</a>

      </div>

        <div class="summary-synopsis"><p>Converts a <a><code class="inline">DateTime</code></a> into <a><code class="inline">Time</code></a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_unix/2" data-no-tooltip="" translate="no">to_unix(datetime, unit \\ :second)</a>

      </div>

        <div class="summary-synopsis"><p>Converts the given <code class="inline">datetime</code> to Unix time.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#truncate/2" data-no-tooltip="" translate="no">truncate(datetime, precision)</a>

      </div>

        <div class="summary-synopsis"><p>Returns the given datetime with the microsecond field truncated to the given
precision (<code class="inline">:microsecond</code>, <code class="inline">:millisecond</code> or <code class="inline">:second</code>).</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#utc_now/1" data-no-tooltip="" translate="no">utc_now(calendar_or_time_unit \\ Calendar.ISO)</a>

      </div>

        <div class="summary-synopsis"><p>Returns the current datetime in UTC.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#utc_now/2" data-no-tooltip="" translate="no">utc_now(time_unit, calendar)</a>

      </div>

        <div class="summary-synopsis"><p>Returns the current datetime in UTC, supporting
a specific calendar and precision.</p></div>

    </div>

</div>

      </section>


      <section id="types" class="details-list">
        <h1 class="section-heading">Types</h1>

        <div class="types-list">
<section class="detail" id="t:t/0">

  <div class="detail-header">
    <a href="#t:t/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">t()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L150" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> t() :: %DateTime{
  calendar: <a href="Calendar.xhtml#t:calendar/0">Calendar.calendar</a>(),
  day: <a href="Calendar.xhtml#t:day/0">Calendar.day</a>(),
  hour: <a href="Calendar.xhtml#t:hour/0">Calendar.hour</a>(),
  microsecond: <a href="Calendar.xhtml#t:microsecond/0">Calendar.microsecond</a>(),
  minute: <a href="Calendar.xhtml#t:minute/0">Calendar.minute</a>(),
  month: <a href="Calendar.xhtml#t:month/0">Calendar.month</a>(),
  second: <a href="Calendar.xhtml#t:second/0">Calendar.second</a>(),
  std_offset: <a href="Calendar.xhtml#t:std_offset/0">Calendar.std_offset</a>(),
  time_zone: <a href="Calendar.xhtml#t:time_zone/0">Calendar.time_zone</a>(),
  utc_offset: <a href="Calendar.xhtml#t:utc_offset/0">Calendar.utc_offset</a>(),
  year: <a href="Calendar.xhtml#t:year/0">Calendar.year</a>(),
  zone_abbr: <a href="Calendar.xhtml#t:zone_abbr/0">Calendar.zone_abbr</a>()
}</pre>

      </div>


  </section>
</section>

        </div>
      </section>

      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>

        <div class="functions-list">
<section class="detail" id="add/4">

    <span id="add/2"></span>

    <span id="add/3"></span>

  <div class="detail-header">
    <a href="#add/4" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">add(datetime, amount_to_add, unit \\ :second, time_zone_database \\ Calendar.get_time_zone_database())</h1>

        <span class="note">(since 1.8.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1640" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> add(
  <a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(),
  <a href="typespecs.xhtml#basic-types">integer</a>(),
  :day | :hour | :minute | <a href="System.xhtml#t:time_unit/0">System.time_unit</a>(),
  <a href="Calendar.xhtml#t:time_zone_database/0">Calendar.time_zone_database</a>()
) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Adds a specified amount of time to a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a>.</p><p>Accepts an <code class="inline">amount_to_add</code> in any <code class="inline">unit</code>. <code class="inline">unit</code> can be <code class="inline">:day</code>,
<code class="inline">:hour</code>, <code class="inline">:minute</code>, <code class="inline">:second</code> or any subsecond precision from
<a href="System.xhtml#t:time_unit/0"><code class="inline">System.time_unit/0</code></a>. It defaults to <code class="inline">:second</code>. Negative values
will move backwards in time.</p><p>This function always considers the unit to be computed according
to the <a href="Calendar.ISO.xhtml"><code class="inline">Calendar.ISO</code></a>.</p><p>This function relies on a contiguous representation of time,
ignoring the wall time and timezone changes. For example, if you add
one day when there are summer time/daylight saving time changes,
it will also change the time forward or backward by one hour,
so the elapsed time is precisely 24 hours. Similarly, adding just
a few seconds to a datetime just before &quot;spring forward&quot; can cause
wall time to increase by more than an hour.</p><p>While this means this function is precise in terms of elapsed time,
its result may be misleading in certain use cases. For example, if a
user requests a meeting to happen every day at 15:00 and you use this
function to compute all future meetings by adding day after day, this
function may change the meeting time to 14:00 or 16:00 if there are
changes to the current timezone. Computing of recurring datetimes is
not currently supported in Elixir's standard library but it is available
by third-party libraries.</p><h3 id="add/4-examples" class="section-heading"><a href="#add/4-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h3><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive!</samp><samp class="p" data-group-id="2508697907-1">(</samp><samp class="ld">~N[2018-11-15 10:00:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="2508697907-1">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">add</samp><samp class="p" data-group-id="2508697907-2">(</samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:second</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="2508697907-2">)</samp><samp class="w">
</samp><samp class="p" data-group-id="2508697907-3">#</samp><samp class="nc" data-group-id="2508697907-3">DateTime</samp><samp class="p" data-group-id="2508697907-3">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">11</samp><samp class="o">-</samp><samp class="mi">15</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">01</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CET</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="2508697907-3">&gt;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">add</samp><samp class="p" data-group-id="2508697907-4">(</samp><samp class="ld">~U[2018-11-15 10:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:second</samp><samp class="p" data-group-id="2508697907-4">)</samp><samp class="w">
</samp><samp class="ld">~U[2018-11-15 11:00:00Z]</samp></code></pre><p>When adding 3 seconds just before &quot;spring forward&quot; we go from 1:59:59 to 3:00:02:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive!</samp><samp class="p" data-group-id="6701347456-1">(</samp><samp class="ld">~N[2019-03-31 01:59:59.123]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="6701347456-1">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">add</samp><samp class="p" data-group-id="6701347456-2">(</samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:second</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="6701347456-2">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6701347456-3">#</samp><samp class="nc" data-group-id="6701347456-3">DateTime</samp><samp class="p" data-group-id="6701347456-3">&lt;</samp><samp class="mi">2019</samp><samp class="o">-</samp><samp class="mi">03</samp><samp class="o">-</samp><samp class="mi">31</samp><samp class="w"> </samp><samp class="mi">03</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="p">:</samp><samp class="mf">02.123</samp><samp class="o">+</samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CEST</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="6701347456-3">&gt;</samp></code></pre><p>When adding 1 day during &quot;spring forward&quot;, the hour also changes:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive!</samp><samp class="p" data-group-id="0521251114-1">(</samp><samp class="ld">~N[2019-03-31 01:00:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="0521251114-1">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">add</samp><samp class="p" data-group-id="0521251114-2">(</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:day</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="0521251114-2">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0521251114-3">#</samp><samp class="nc" data-group-id="0521251114-3">DateTime</samp><samp class="p" data-group-id="0521251114-3">&lt;</samp><samp class="mi">2019</samp><samp class="o">-</samp><samp class="mi">04</samp><samp class="o">-</samp><samp class="mi">01</samp><samp class="w"> </samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CEST</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="0521251114-3">&gt;</samp></code></pre><p>This operation merges the precision of the naive date time with the given unit:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">result</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">add</samp><samp class="p" data-group-id="6547825277-1">(</samp><samp class="ld">~U[2014-10-02 00:29:10Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">21</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:millisecond</samp><samp class="p" data-group-id="6547825277-1">)</samp><samp class="w">
</samp><samp class="ld">~U[2014-10-02 00:29:10.021Z]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">result</samp><samp class="o">.</samp><samp class="n">microsecond</samp><samp class="w">
</samp><samp class="p" data-group-id="6547825277-2">{</samp><samp class="mi">21000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="6547825277-2">}</samp></code></pre><p>To shift a datetime by a <a href="Duration.xhtml"><code class="inline">Duration</code></a> and according to its underlying calendar, use <a href="#shift/3"><code class="inline">DateTime.shift/3</code></a>.</p>
  </section>
</section>
<section class="detail" id="after?/2">

  <div class="detail-header">
    <a href="#after?/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">after?(datetime1, datetime2)</h1>

        <span class="note">(since 1.15.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1498" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> after?(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(), <a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>()) :: <a href="typespecs.xhtml#built-in-types">boolean</a>()</pre>

      </div>

<p>Returns <code class="inline">true</code> if the first datetime is strictly later than the second.</p><h2 id="after?/2-examples" class="section-heading"><a href="#after?/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">after?</samp><samp class="p" data-group-id="6867465261-1">(</samp><samp class="ld">~U[2022-02-02 11:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~U[2021-01-01 11:00:00Z]</samp><samp class="p" data-group-id="6867465261-1">)</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">after?</samp><samp class="p" data-group-id="6867465261-2">(</samp><samp class="ld">~U[2021-01-01 11:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~U[2021-01-01 11:00:00Z]</samp><samp class="p" data-group-id="6867465261-2">)</samp><samp class="w">
</samp><samp class="no">false</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">after?</samp><samp class="p" data-group-id="6867465261-3">(</samp><samp class="ld">~U[2021-01-01 11:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~U[2022-02-02 11:00:00Z]</samp><samp class="p" data-group-id="6867465261-3">)</samp><samp class="w">
</samp><samp class="no">false</samp></code></pre>
  </section>
</section>
<section class="detail" id="before?/2">

  <div class="detail-header">
    <a href="#before?/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">before?(datetime1, datetime2)</h1>

        <span class="note">(since 1.15.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1479" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> before?(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(), <a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>()) :: <a href="typespecs.xhtml#built-in-types">boolean</a>()</pre>

      </div>

<p>Returns <code class="inline">true</code> if the first datetime is strictly earlier than the second.</p><h2 id="before?/2-examples" class="section-heading"><a href="#before?/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">before?</samp><samp class="p" data-group-id="6190251514-1">(</samp><samp class="ld">~U[2021-01-01 11:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~U[2022-02-02 11:00:00Z]</samp><samp class="p" data-group-id="6190251514-1">)</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">before?</samp><samp class="p" data-group-id="6190251514-2">(</samp><samp class="ld">~U[2021-01-01 11:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~U[2021-01-01 11:00:00Z]</samp><samp class="p" data-group-id="6190251514-2">)</samp><samp class="w">
</samp><samp class="no">false</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">before?</samp><samp class="p" data-group-id="6190251514-3">(</samp><samp class="ld">~U[2022-02-02 11:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~U[2021-01-01 11:00:00Z]</samp><samp class="p" data-group-id="6190251514-3">)</samp><samp class="w">
</samp><samp class="no">false</samp></code></pre>
  </section>
</section>
<section class="detail" id="compare/2">

  <div class="detail-header">
    <a href="#compare/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">compare(datetime1, datetime2)</h1>

        <span class="note">(since 1.4.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1439" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> compare(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(), <a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>()) :: :lt | :eq | :gt</pre>

      </div>

<p>Compares two datetime structs.</p><p>Returns <code class="inline">:gt</code> if the first datetime is later than the second
and <code class="inline">:lt</code> for vice versa. If the two datetimes are equal
<code class="inline">:eq</code> is returned.</p><p>Note that both UTC and Standard offsets will be taken into
account when comparison is done.</p><h2 id="compare/2-examples" class="section-heading"><a href="#compare/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt1</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="6827501464-1">%</samp><samp class="nc" data-group-id="6827501464-1">DateTime</samp><samp class="p" data-group-id="6827501464-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6827501464-2">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="6827501464-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p" data-group-id="6827501464-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt2</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="6827501464-3">%</samp><samp class="nc" data-group-id="6827501464-3">DateTime</samp><samp class="p" data-group-id="6827501464-3">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6827501464-4">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="6827501464-4">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Warsaw&quot;</samp><samp class="p" data-group-id="6827501464-3">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">compare</samp><samp class="p" data-group-id="6827501464-5">(</samp><samp class="n">dt1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">dt2</samp><samp class="p" data-group-id="6827501464-5">)</samp><samp class="w">
</samp><samp class="ss">:gt</samp></code></pre>
  </section>
</section>
<section class="detail" id="convert/2">

  <div class="detail-header">
    <a href="#convert/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">convert(datetime, calendar)</h1>

        <span class="note">(since 1.5.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1904" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> convert(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(), <a href="Calendar.xhtml#t:calendar/0">Calendar.calendar</a>()) ::
  {:ok, <a href="#t:t/0">t</a>()} | {:error, :incompatible_calendars}</pre>

      </div>

<p>Converts a given <code class="inline">datetime</code> from one calendar to another.</p><p>If it is not possible to convert unambiguously between the calendars
(see <a href="Calendar.xhtml#compatible_calendars?/2"><code class="inline">Calendar.compatible_calendars?/2</code></a>), an <code class="inline">{:error, :incompatible_calendars}</code> tuple
is returned.</p><h2 id="convert/2-examples" class="section-heading"><a href="#convert/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><p>Imagine someone implements <code class="inline">Calendar.Holocene</code>, a calendar based on the
Gregorian calendar that adds exactly 10,000 years to the current Gregorian
year:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt1</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="1640978105-1">%</samp><samp class="nc" data-group-id="1640978105-1">DateTime</samp><samp class="p" data-group-id="1640978105-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="1640978105-2">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="1640978105-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p" data-group-id="1640978105-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">convert</samp><samp class="p" data-group-id="1640978105-3">(</samp><samp class="n">dt1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">Calendar.Holocene</samp><samp class="p" data-group-id="1640978105-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1640978105-4">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1640978105-5">%</samp><samp class="nc" data-group-id="1640978105-5">DateTime</samp><samp class="p" data-group-id="1640978105-5">{</samp><samp class="ss">calendar</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="nc">Calendar.Holocene</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w">
                </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="1640978105-6">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="1640978105-6">}</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w">
                </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">12000</samp><samp class="p">,</samp><samp class="w">
                </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p" data-group-id="1640978105-5">}</samp><samp class="p" data-group-id="1640978105-4">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="convert!/2">

  <div class="detail-header">
    <a href="#convert!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">convert!(datetime, calendar)</h1>

        <span class="note">(since 1.5.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1949" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> convert!(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(), <a href="Calendar.xhtml#t:calendar/0">Calendar.calendar</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Converts a given <code class="inline">datetime</code> from one calendar to another.</p><p>If it is not possible to convert unambiguously between the calendars
(see <a href="Calendar.xhtml#compatible_calendars?/2"><code class="inline">Calendar.compatible_calendars?/2</code></a>), an ArgumentError is raised.</p><h2 id="convert!/2-examples" class="section-heading"><a href="#convert!/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><p>Imagine someone implements <code class="inline">Calendar.Holocene</code>, a calendar based on the
Gregorian calendar that adds exactly 10,000 years to the current Gregorian
year:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt1</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="4888673031-1">%</samp><samp class="nc" data-group-id="4888673031-1">DateTime</samp><samp class="p" data-group-id="4888673031-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4888673031-2">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="4888673031-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p" data-group-id="4888673031-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">convert!</samp><samp class="p" data-group-id="4888673031-3">(</samp><samp class="n">dt1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">Calendar.Holocene</samp><samp class="p" data-group-id="4888673031-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4888673031-4">%</samp><samp class="nc" data-group-id="4888673031-4">DateTime</samp><samp class="p" data-group-id="4888673031-4">{</samp><samp class="ss">calendar</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="nc">Calendar.Holocene</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w">
          </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4888673031-5">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="4888673031-5">}</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w">
          </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">12000</samp><samp class="p">,</samp><samp class="w">
          </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p" data-group-id="4888673031-4">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="diff/3">

    <span id="diff/2"></span>

  <div class="detail-header">
    <a href="#diff/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">diff(datetime1, datetime2, unit \\ :second)</h1>

        <span class="note">(since 1.5.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1540" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> diff(
  <a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(),
  <a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(),
  :day | :hour | :minute | <a href="System.xhtml#t:time_unit/0">System.time_unit</a>()
) :: <a href="typespecs.xhtml#basic-types">integer</a>()</pre>

      </div>

<p>Subtracts <code class="inline">datetime2</code> from <code class="inline">datetime1</code>.</p><p>The answer can be returned in any <code class="inline">:day</code>, <code class="inline">:hour</code>, <code class="inline">:minute</code>, or any <code class="inline">unit</code>
available from <a href="System.xhtml#t:time_unit/0"><code class="inline">System.time_unit/0</code></a>. The unit is measured according to
<a href="Calendar.ISO.xhtml"><code class="inline">Calendar.ISO</code></a> and defaults to <code class="inline">:second</code>.</p><p>Fractional results are not supported and are truncated.</p><h2 id="diff/3-examples" class="section-heading"><a href="#diff/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">diff</samp><samp class="p" data-group-id="0900837008-1">(</samp><samp class="ld">~U[2024-01-15 10:00:10Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~U[2024-01-15 10:00:00Z]</samp><samp class="p" data-group-id="0900837008-1">)</samp><samp class="w">
</samp><samp class="mi">10</samp></code></pre><p>This function also considers timezone offsets:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt1</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="4289927235-1">%</samp><samp class="nc" data-group-id="4289927235-1">DateTime</samp><samp class="p" data-group-id="4289927235-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4289927235-2">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="4289927235-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p" data-group-id="4289927235-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt2</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="4289927235-3">%</samp><samp class="nc" data-group-id="4289927235-3">DateTime</samp><samp class="p" data-group-id="4289927235-3">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4289927235-4">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="4289927235-4">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Warsaw&quot;</samp><samp class="p" data-group-id="4289927235-3">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">diff</samp><samp class="p" data-group-id="4289927235-5">(</samp><samp class="n">dt1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">dt2</samp><samp class="p" data-group-id="4289927235-5">)</samp><samp class="w">
</samp><samp class="mi">18000</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">diff</samp><samp class="p" data-group-id="4289927235-6">(</samp><samp class="n">dt2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">dt1</samp><samp class="p" data-group-id="4289927235-6">)</samp><samp class="w">
</samp><samp class="o">-</samp><samp class="mi">18000</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">diff</samp><samp class="p" data-group-id="4289927235-7">(</samp><samp class="n">dt1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">dt2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:hour</samp><samp class="p" data-group-id="4289927235-7">)</samp><samp class="w">
</samp><samp class="mi">5</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">diff</samp><samp class="p" data-group-id="4289927235-8">(</samp><samp class="n">dt2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">dt1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:hour</samp><samp class="p" data-group-id="4289927235-8">)</samp><samp class="w">
</samp><samp class="o">-</samp><samp class="mi">5</samp></code></pre>
  </section>
</section>
<section class="detail" id="from_gregorian_seconds/3">

    <span id="from_gregorian_seconds/1"></span>

    <span id="from_gregorian_seconds/2"></span>

  <div class="detail-header">
    <a href="#from_gregorian_seconds/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">from_gregorian_seconds(seconds, arg \\ {0, 0}, calendar \\ Calendar.ISO)</h1>

        <span class="note">(since 1.11.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1280" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> from_gregorian_seconds(<a href="typespecs.xhtml#basic-types">integer</a>(), <a href="Calendar.xhtml#t:microsecond/0">Calendar.microsecond</a>(), <a href="Calendar.xhtml#t:calendar/0">Calendar.calendar</a>()) ::
  <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Converts a number of gregorian seconds to a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> struct.</p><p>The returned <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> will have <code class="inline">UTC</code> timezone, if you want other timezone, please use
<a href="#shift_zone/3"><code class="inline">DateTime.shift_zone/3</code></a>.</p><h2 id="from_gregorian_seconds/3-examples" class="section-heading"><a href="#from_gregorian_seconds/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_gregorian_seconds</samp><samp class="p" data-group-id="1960274272-1">(</samp><samp class="mi">1</samp><samp class="p" data-group-id="1960274272-1">)</samp><samp class="w">
</samp><samp class="ld">~U[0000-01-01 00:00:01Z]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_gregorian_seconds</samp><samp class="p" data-group-id="1960274272-2">(</samp><samp class="mi">63_755_511_991</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1960274272-3">{</samp><samp class="mi">5000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="1960274272-3">}</samp><samp class="p" data-group-id="1960274272-2">)</samp><samp class="w">
</samp><samp class="ld">~U[2020-05-01 00:26:31.005Z]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_gregorian_seconds</samp><samp class="p" data-group-id="1960274272-4">(</samp><samp class="o">-</samp><samp class="mi">1</samp><samp class="p" data-group-id="1960274272-4">)</samp><samp class="w">
</samp><samp class="ld">~U[-0001-12-31 23:59:59Z]</samp></code></pre>
  </section>
</section>
<section class="detail" id="from_iso8601/2">

    <span id="from_iso8601/1"></span>

  <div class="detail-header">
    <a href="#from_iso8601/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">from_iso8601(string, format_or_calendar \\ Calendar.ISO)</h1>

        <span class="note">(since 1.4.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1211" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> from_iso8601(<a href="String.xhtml#t:t/0">String.t</a>(), <a href="Calendar.xhtml#t:calendar/0">Calendar.calendar</a>() | :extended | :basic) ::
  {:ok, <a href="#t:t/0">t</a>(), <a href="Calendar.xhtml#t:utc_offset/0">Calendar.utc_offset</a>()} | {:error, <a href="typespecs.xhtml#basic-types">atom</a>()}</pre>

      </div>

<p>Parses the extended &quot;Date and time of day&quot; format described by
<a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601:2019</a>.</p><p>Since ISO 8601 does not include the proper time zone, the given
string will be converted to UTC and its offset in seconds will be
returned as part of this function. Therefore offset information
must be present in the string.</p><p>As specified in the standard, the separator &quot;T&quot; may be omitted if
desired as there is no ambiguity within this function.</p><p>Note leap seconds are not supported by the built-in Calendar.ISO.</p><h2 id="from_iso8601/2-examples" class="section-heading"><a href="#from_iso8601/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="7619179396-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="7619179396-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-2">(</samp><samp class="s">&quot;2015-01-23T23:50:07Z&quot;</samp><samp class="p" data-group-id="7619179396-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[2015-01-23 23:50:07Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="7619179396-3">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">9000</samp><samp class="p" data-group-id="7619179396-3">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-4">(</samp><samp class="s">&quot;2015-01-23T23:50:07.123+02:30&quot;</samp><samp class="p" data-group-id="7619179396-4">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[2015-01-23 21:20:07.123Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="7619179396-5">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">9000</samp><samp class="p" data-group-id="7619179396-5">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-6">(</samp><samp class="s">&quot;2015-01-23T23:50:07,123+02:30&quot;</samp><samp class="p" data-group-id="7619179396-6">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[2015-01-23 21:20:07.123Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="7619179396-7">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="7619179396-7">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-8">(</samp><samp class="s">&quot;-2015-01-23T23:50:07Z&quot;</samp><samp class="p" data-group-id="7619179396-8">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[-2015-01-23 23:50:07Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="7619179396-9">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">9000</samp><samp class="p" data-group-id="7619179396-9">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-10">(</samp><samp class="s">&quot;-2015-01-23T23:50:07,123+02:30&quot;</samp><samp class="p" data-group-id="7619179396-10">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[-2015-01-23 21:20:07.123Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="7619179396-11">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">9000</samp><samp class="p" data-group-id="7619179396-11">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-12">(</samp><samp class="s">&quot;20150123T235007.123+0230&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:basic</samp><samp class="p" data-group-id="7619179396-12">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[2015-01-23 21:20:07.123Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-13">(</samp><samp class="s">&quot;2015-01-23P23:50:07&quot;</samp><samp class="p" data-group-id="7619179396-13">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7619179396-14">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:invalid_format</samp><samp class="p" data-group-id="7619179396-14">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-15">(</samp><samp class="s">&quot;2015-01-23T23:50:07&quot;</samp><samp class="p" data-group-id="7619179396-15">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7619179396-16">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:missing_offset</samp><samp class="p" data-group-id="7619179396-16">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-17">(</samp><samp class="s">&quot;2015-01-23 23:50:61&quot;</samp><samp class="p" data-group-id="7619179396-17">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7619179396-18">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:invalid_time</samp><samp class="p" data-group-id="7619179396-18">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-19">(</samp><samp class="s">&quot;2015-01-32 23:50:07&quot;</samp><samp class="p" data-group-id="7619179396-19">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7619179396-20">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:invalid_date</samp><samp class="p" data-group-id="7619179396-20">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="7619179396-21">(</samp><samp class="s">&quot;2015-01-23T23:50:07.123-00:00&quot;</samp><samp class="p" data-group-id="7619179396-21">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7619179396-22">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:invalid_format</samp><samp class="p" data-group-id="7619179396-22">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="from_iso8601/3">

  <div class="detail-header">
    <a href="#from_iso8601/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">from_iso8601(string, calendar, format)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1239" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> from_iso8601(<a href="String.xhtml#t:t/0">String.t</a>(), <a href="Calendar.xhtml#t:calendar/0">Calendar.calendar</a>(), :extended | :basic) ::
  {:ok, <a href="#t:t/0">t</a>(), <a href="Calendar.xhtml#t:utc_offset/0">Calendar.utc_offset</a>()} | {:error, <a href="typespecs.xhtml#basic-types">atom</a>()}</pre>

      </div>

<p>Converts from ISO8601 specifying both a calendar and a mode.</p><p>See <a href="#from_iso8601/2"><code class="inline">from_iso8601/2</code></a> for more information.</p><h2 id="from_iso8601/3-examples" class="section-heading"><a href="#from_iso8601/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="8816510232-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">9000</samp><samp class="p" data-group-id="8816510232-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="8816510232-2">(</samp><samp class="s">&quot;2015-01-23T23:50:07,123+02:30&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">Calendar.ISO</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:extended</samp><samp class="p" data-group-id="8816510232-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[2015-01-23 21:20:07.123Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="8816510232-3">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">9000</samp><samp class="p" data-group-id="8816510232-3">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="8816510232-4">(</samp><samp class="s">&quot;20150123T235007.123+0230&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">Calendar.ISO</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:basic</samp><samp class="p" data-group-id="8816510232-4">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[2015-01-23 21:20:07.123Z]</samp></code></pre>
  </section>
</section>
<section class="detail" id="from_naive/3">

    <span id="from_naive/2"></span>

  <div class="detail-header">
    <a href="#from_naive/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">from_naive(naive_datetime, time_zone, time_zone_database \\ Calendar.get_time_zone_database())</h1>

        <span class="note">(since 1.4.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L557" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> from_naive(
  <a href="Calendar.xhtml#t:naive_datetime/0">Calendar.naive_datetime</a>(),
  <a href="Calendar.xhtml#t:time_zone/0">Calendar.time_zone</a>(),
  <a href="Calendar.xhtml#t:time_zone_database/0">Calendar.time_zone_database</a>()
) ::
  {:ok, <a href="#t:t/0">t</a>()}
  | {:ambiguous, first_datetime :: <a href="#t:t/0">t</a>(), second_datetime :: <a href="#t:t/0">t</a>()}
  | {:gap, <a href="#t:t/0">t</a>(), <a href="#t:t/0">t</a>()}
  | {:error,
     :incompatible_calendars
     | :time_zone_not_found
     | :utc_only_time_zone_database}</pre>

      </div>

<p>Converts the given <a href="NaiveDateTime.xhtml"><code class="inline">NaiveDateTime</code></a> to <a href="DateTime.xhtml"><code class="inline">DateTime</code></a>.</p><p>It expects a time zone to put the <a href="NaiveDateTime.xhtml"><code class="inline">NaiveDateTime</code></a> in.
If the time zone is &quot;Etc/UTC&quot;, it always succeeds. Otherwise,
the NaiveDateTime is checked against the time zone database
given as <code class="inline">time_zone_database</code>. See the &quot;Time zone database&quot;
section in the module documentation.</p><h2 id="from_naive/3-examples" class="section-heading"><a href="#from_naive/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive</samp><samp class="p" data-group-id="0681113031-1">(</samp><samp class="ld">~N[2016-05-24 13:26:08.003]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="0681113031-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0681113031-2">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~U[2016-05-24 13:26:08.003Z]</samp><samp class="p" data-group-id="0681113031-2">}</samp></code></pre><p>When the datetime is ambiguous - for instance during changing from summer
to winter time - the two possible valid datetimes are returned in a tuple.
The first datetime is also the one which comes first chronologically, while
the second one comes last.</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="7723792347-1">{</samp><samp class="ss">:ambiguous</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">first_dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">second_dt</samp><samp class="p" data-group-id="7723792347-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive</samp><samp class="p" data-group-id="7723792347-2">(</samp><samp class="ld">~N[2018-10-28 02:30:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="7723792347-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">first_dt</samp><samp class="w">
</samp><samp class="p" data-group-id="7723792347-3">#</samp><samp class="nc" data-group-id="7723792347-3">DateTime</samp><samp class="p" data-group-id="7723792347-3">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">10</samp><samp class="o">-</samp><samp class="mi">28</samp><samp class="w"> </samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">30</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CEST</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="7723792347-3">&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">second_dt</samp><samp class="w">
</samp><samp class="p" data-group-id="7723792347-4">#</samp><samp class="nc" data-group-id="7723792347-4">DateTime</samp><samp class="p" data-group-id="7723792347-4">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">10</samp><samp class="o">-</samp><samp class="mi">28</samp><samp class="w"> </samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">30</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">01</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CET</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="7723792347-4">&gt;</samp></code></pre><p>When there is a gap in wall time - for instance in spring when the clocks are
turned forward - the latest valid datetime just before the gap and the first
valid datetime just after the gap.</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="4954918769-1">{</samp><samp class="ss">:gap</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">just_before</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">just_after</samp><samp class="p" data-group-id="4954918769-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive</samp><samp class="p" data-group-id="4954918769-2">(</samp><samp class="ld">~N[2019-03-31 02:30:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="4954918769-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">just_before</samp><samp class="w">
</samp><samp class="p" data-group-id="4954918769-3">#</samp><samp class="nc" data-group-id="4954918769-3">DateTime</samp><samp class="p" data-group-id="4954918769-3">&lt;</samp><samp class="mi">2019</samp><samp class="o">-</samp><samp class="mi">03</samp><samp class="o">-</samp><samp class="mi">31</samp><samp class="w"> </samp><samp class="mi">01</samp><samp class="p">:</samp><samp class="mi">59</samp><samp class="p">:</samp><samp class="mf">59.999999</samp><samp class="o">+</samp><samp class="mi">01</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CET</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="4954918769-3">&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">just_after</samp><samp class="w">
</samp><samp class="p" data-group-id="4954918769-4">#</samp><samp class="nc" data-group-id="4954918769-4">DateTime</samp><samp class="p" data-group-id="4954918769-4">&lt;</samp><samp class="mi">2019</samp><samp class="o">-</samp><samp class="mi">03</samp><samp class="o">-</samp><samp class="mi">31</samp><samp class="w"> </samp><samp class="mi">03</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CEST</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="4954918769-4">&gt;</samp></code></pre><p>Most of the time there is one, and just one, valid datetime for a certain
date and time in a certain time zone.</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="4949873698-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p" data-group-id="4949873698-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive</samp><samp class="p" data-group-id="4949873698-2">(</samp><samp class="ld">~N[2018-07-28 12:30:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="4949873698-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="p" data-group-id="4949873698-3">#</samp><samp class="nc" data-group-id="4949873698-3">DateTime</samp><samp class="p" data-group-id="4949873698-3">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">07</samp><samp class="o">-</samp><samp class="mi">28</samp><samp class="w"> </samp><samp class="mi">12</samp><samp class="p">:</samp><samp class="mi">30</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CEST</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="4949873698-3">&gt;</samp></code></pre><p>This function accepts any map or struct that contains at least the same fields as a <a href="NaiveDateTime.xhtml"><code class="inline">NaiveDateTime</code></a>
struct. The most common example of that is a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a>. In this case the information about the time
zone of that <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> is completely ignored. This is the same principle as passing a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> to
<a href="Date.xhtml#to_iso8601/2"><code class="inline">Date.to_iso8601/2</code></a>. <a href="Date.xhtml#to_iso8601/2"><code class="inline">Date.to_iso8601/2</code></a> extracts only the date-specific fields (calendar, year,
month and day) of the given structure and ignores all others.</p><p>This way if you have a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> in one time zone, you can get the same wall time in another time zone.
For instance if you have 2018-08-24 10:00:00 in Copenhagen and want a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> for 2018-08-24 10:00:00
in UTC you can do:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">cph_datetime</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive!</samp><samp class="p" data-group-id="0457078846-1">(</samp><samp class="ld">~N[2018-08-24 10:00:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="0457078846-1">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="0457078846-2">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">utc_datetime</samp><samp class="p" data-group-id="0457078846-2">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive</samp><samp class="p" data-group-id="0457078846-3">(</samp><samp class="n">cph_datetime</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="0457078846-3">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">utc_datetime</samp><samp class="w">
</samp><samp class="ld">~U[2018-08-24 10:00:00Z]</samp></code></pre><p>If instead you want a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> for the same point time in a different time zone see the
<a href="#shift_zone/3"><code class="inline">DateTime.shift_zone/3</code></a> function which would convert 2018-08-24 10:00:00 in Copenhagen
to 2018-08-24 08:00:00 in UTC.</p>
  </section>
</section>
<section class="detail" id="from_naive!/3">

    <span id="from_naive!/2"></span>

  <div class="detail-header">
    <a href="#from_naive!/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">from_naive!(naive_datetime, time_zone, time_zone_database \\ Calendar.get_time_zone_database())</h1>

        <span class="note">(since 1.4.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L680" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> from_naive!(
  <a href="NaiveDateTime.xhtml#t:t/0">NaiveDateTime.t</a>(),
  <a href="Calendar.xhtml#t:time_zone/0">Calendar.time_zone</a>(),
  <a href="Calendar.xhtml#t:time_zone_database/0">Calendar.time_zone_database</a>()
) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Converts the given <a href="NaiveDateTime.xhtml"><code class="inline">NaiveDateTime</code></a> to <a href="DateTime.xhtml"><code class="inline">DateTime</code></a>.</p><p>It expects a time zone to put the NaiveDateTime in.
If the time zone is &quot;Etc/UTC&quot;, it always succeeds. Otherwise,
the NaiveDateTime is checked against the time zone database
given as <code class="inline">time_zone_database</code>. See the &quot;Time zone database&quot;
section in the module documentation.</p><h2 id="from_naive!/3-examples" class="section-heading"><a href="#from_naive!/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive!</samp><samp class="p" data-group-id="3077384188-1">(</samp><samp class="ld">~N[2016-05-24 13:26:08.003]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="3077384188-1">)</samp><samp class="w">
</samp><samp class="ld">~U[2016-05-24 13:26:08.003Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive!</samp><samp class="p" data-group-id="3077384188-2">(</samp><samp class="ld">~N[2018-05-24 13:26:08.003]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="3077384188-2">)</samp><samp class="w">
</samp><samp class="p" data-group-id="3077384188-3">#</samp><samp class="nc" data-group-id="3077384188-3">DateTime</samp><samp class="p" data-group-id="3077384188-3">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">05</samp><samp class="o">-</samp><samp class="mi">24</samp><samp class="w"> </samp><samp class="mi">13</samp><samp class="p">:</samp><samp class="mi">26</samp><samp class="p">:</samp><samp class="mf">08.003</samp><samp class="o">+</samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CEST</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="3077384188-3">&gt;</samp></code></pre>
  </section>
</section>
<section class="detail" id="from_unix/3">

    <span id="from_unix/1"></span>

    <span id="from_unix/2"></span>

  <div class="detail-header">
    <a href="#from_unix/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">from_unix(integer, unit \\ :second, calendar \\ Calendar.ISO)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L423" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> from_unix(<a href="typespecs.xhtml#basic-types">integer</a>(), :native | <a href="System.xhtml#t:time_unit/0">System.time_unit</a>(), <a href="Calendar.xhtml#t:calendar/0">Calendar.calendar</a>()) ::
  {:ok, <a href="#t:t/0">t</a>()} | {:error, <a href="typespecs.xhtml#basic-types">atom</a>()}</pre>

      </div>

<p>Converts the given Unix time to <a href="DateTime.xhtml"><code class="inline">DateTime</code></a>.</p><p>The integer can be given in different unit
according to <a href="System.xhtml#convert_time_unit/3"><code class="inline">System.convert_time_unit/3</code></a> and it will
be converted to microseconds internally. Up to
253402300799 seconds is supported.</p><p>Unix times are always in UTC and therefore the DateTime
will be returned in UTC.</p><h2 id="from_unix/3-examples" class="section-heading"><a href="#from_unix/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="5555619638-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p" data-group-id="5555619638-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix</samp><samp class="p" data-group-id="5555619638-2">(</samp><samp class="mi">1_464_096_368</samp><samp class="p" data-group-id="5555619638-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[2016-05-24 13:26:08Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="5555619638-3">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p" data-group-id="5555619638-3">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix</samp><samp class="p" data-group-id="5555619638-4">(</samp><samp class="mi">1_432_560_368_868_569</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:microsecond</samp><samp class="p" data-group-id="5555619638-4">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[2015-05-25 13:26:08.868569Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="5555619638-5">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p" data-group-id="5555619638-5">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix</samp><samp class="p" data-group-id="5555619638-6">(</samp><samp class="mi">253_402_300_799</samp><samp class="p" data-group-id="5555619638-6">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[9999-12-31 23:59:59Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="5555619638-7">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:invalid_unix_time</samp><samp class="p" data-group-id="5555619638-7">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix</samp><samp class="p" data-group-id="5555619638-8">(</samp><samp class="mi">253_402_300_800</samp><samp class="p" data-group-id="5555619638-8">)</samp></code></pre><p>The unit can also be an integer as in <a href="System.xhtml#t:time_unit/0"><code class="inline">System.time_unit/0</code></a>:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="4385450382-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p" data-group-id="4385450382-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix</samp><samp class="p" data-group-id="4385450382-2">(</samp><samp class="mi">143_256_036_886_856</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">1024</samp><samp class="p" data-group-id="4385450382-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[6403-03-17 07:05:22.320312Z]</samp></code></pre><p>Negative Unix times are supported up to -377705116800 seconds:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="3407457018-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p" data-group-id="3407457018-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix</samp><samp class="p" data-group-id="3407457018-2">(</samp><samp class="o">-</samp><samp class="mi">377_705_116_800</samp><samp class="p" data-group-id="3407457018-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="ld">~U[-9999-01-01 00:00:00Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="3407457018-3">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:invalid_unix_time</samp><samp class="p" data-group-id="3407457018-3">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix</samp><samp class="p" data-group-id="3407457018-4">(</samp><samp class="o">-</samp><samp class="mi">377_705_116_801</samp><samp class="p" data-group-id="3407457018-4">)</samp></code></pre>
  </section>
</section>
<section class="detail" id="from_unix!/3">

    <span id="from_unix!/1"></span>

    <span id="from_unix!/2"></span>

  <div class="detail-header">
    <a href="#from_unix!/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">from_unix!(integer, unit \\ :second, calendar \\ Calendar.ISO)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L474" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> from_unix!(<a href="typespecs.xhtml#basic-types">integer</a>(), :native | <a href="System.xhtml#t:time_unit/0">System.time_unit</a>(), <a href="Calendar.xhtml#t:calendar/0">Calendar.calendar</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Converts the given Unix time to <a href="DateTime.xhtml"><code class="inline">DateTime</code></a>.</p><p>The integer can be given in different unit
according to <a href="System.xhtml#convert_time_unit/3"><code class="inline">System.convert_time_unit/3</code></a> and it will
be converted to microseconds internally.</p><p>Unix times are always in UTC and therefore the DateTime
will be returned in UTC.</p><h2 id="from_unix!/3-examples" class="section-heading"><a href="#from_unix!/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="c1"># An easy way to get the Unix epoch is passing 0 to this function</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix!</samp><samp class="p" data-group-id="6881103470-1">(</samp><samp class="mi">0</samp><samp class="p" data-group-id="6881103470-1">)</samp><samp class="w">
</samp><samp class="ld">~U[1970-01-01 00:00:00Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix!</samp><samp class="p" data-group-id="6881103470-2">(</samp><samp class="mi">1_464_096_368</samp><samp class="p" data-group-id="6881103470-2">)</samp><samp class="w">
</samp><samp class="ld">~U[2016-05-24 13:26:08Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix!</samp><samp class="p" data-group-id="6881103470-3">(</samp><samp class="mi">1_432_560_368_868_569</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:microsecond</samp><samp class="p" data-group-id="6881103470-3">)</samp><samp class="w">
</samp><samp class="ld">~U[2015-05-25 13:26:08.868569Z]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix!</samp><samp class="p" data-group-id="6881103470-4">(</samp><samp class="mi">143_256_036_886_856</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">1024</samp><samp class="p" data-group-id="6881103470-4">)</samp><samp class="w">
</samp><samp class="ld">~U[6403-03-17 07:05:22.320312Z]</samp></code></pre>
  </section>
</section>
<section class="detail" id="new/4">

    <span id="new/2"></span>

    <span id="new/3"></span>

  <div class="detail-header">
    <a href="#new/4" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">new(date, time, time_zone \\ &quot;Etc/UTC&quot;, time_zone_database \\ Calendar.get_time_zone_database())</h1>

        <span class="note">(since 1.11.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L278" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> new(<a href="Date.xhtml#t:t/0">Date.t</a>(), <a href="Time.xhtml#t:t/0">Time.t</a>(), <a href="Calendar.xhtml#t:time_zone/0">Calendar.time_zone</a>(), <a href="Calendar.xhtml#t:time_zone_database/0">Calendar.time_zone_database</a>()) ::
  {:ok, <a href="#t:t/0">t</a>()}
  | {:ambiguous, first_datetime :: <a href="#t:t/0">t</a>(), second_datetime :: <a href="#t:t/0">t</a>()}
  | {:gap, <a href="#t:t/0">t</a>(), <a href="#t:t/0">t</a>()}
  | {:error,
     :incompatible_calendars
     | :time_zone_not_found
     | :utc_only_time_zone_database}</pre>

      </div>

<p>Builds a datetime from date and time structs.</p><p>It expects a time zone to put the <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> in.
If the time zone is not passed it will default to <code class="inline">&quot;Etc/UTC&quot;</code>,
which always succeeds. Otherwise, the <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> is checked against the time zone database
given as <code class="inline">time_zone_database</code>. See the &quot;Time zone database&quot;
section in the module documentation.</p><h2 id="new/4-examples" class="section-heading"><a href="#new/4-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">new</samp><samp class="p" data-group-id="1774259807-1">(</samp><samp class="ld">~D[2016-05-24]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~T[13:26:08.003]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="1774259807-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1774259807-2">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~U[2016-05-24 13:26:08.003Z]</samp><samp class="p" data-group-id="1774259807-2">}</samp></code></pre><p>When the datetime is ambiguous - for instance during changing from summer
to winter time - the two possible valid datetimes are returned in a tuple.
The first datetime is also the one which comes first chronologically, while
the second one comes last.</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="0919925123-1">{</samp><samp class="ss">:ambiguous</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">first_dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">second_dt</samp><samp class="p" data-group-id="0919925123-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">new</samp><samp class="p" data-group-id="0919925123-2">(</samp><samp class="ld">~D[2018-10-28]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~T[02:30:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="0919925123-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">first_dt</samp><samp class="w">
</samp><samp class="p" data-group-id="0919925123-3">#</samp><samp class="nc" data-group-id="0919925123-3">DateTime</samp><samp class="p" data-group-id="0919925123-3">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">10</samp><samp class="o">-</samp><samp class="mi">28</samp><samp class="w"> </samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">30</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CEST</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="0919925123-3">&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">second_dt</samp><samp class="w">
</samp><samp class="p" data-group-id="0919925123-4">#</samp><samp class="nc" data-group-id="0919925123-4">DateTime</samp><samp class="p" data-group-id="0919925123-4">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">10</samp><samp class="o">-</samp><samp class="mi">28</samp><samp class="w"> </samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">30</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">01</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CET</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="0919925123-4">&gt;</samp></code></pre><p>When there is a gap in wall time - for instance in spring when the clocks are
turned forward - the latest valid datetime just before the gap and the first
valid datetime just after the gap.</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="7466532731-1">{</samp><samp class="ss">:gap</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">just_before</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">just_after</samp><samp class="p" data-group-id="7466532731-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">new</samp><samp class="p" data-group-id="7466532731-2">(</samp><samp class="ld">~D[2019-03-31]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~T[02:30:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="7466532731-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">just_before</samp><samp class="w">
</samp><samp class="p" data-group-id="7466532731-3">#</samp><samp class="nc" data-group-id="7466532731-3">DateTime</samp><samp class="p" data-group-id="7466532731-3">&lt;</samp><samp class="mi">2019</samp><samp class="o">-</samp><samp class="mi">03</samp><samp class="o">-</samp><samp class="mi">31</samp><samp class="w"> </samp><samp class="mi">01</samp><samp class="p">:</samp><samp class="mi">59</samp><samp class="p">:</samp><samp class="mf">59.999999</samp><samp class="o">+</samp><samp class="mi">01</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CET</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="7466532731-3">&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">just_after</samp><samp class="w">
</samp><samp class="p" data-group-id="7466532731-4">#</samp><samp class="nc" data-group-id="7466532731-4">DateTime</samp><samp class="p" data-group-id="7466532731-4">&lt;</samp><samp class="mi">2019</samp><samp class="o">-</samp><samp class="mi">03</samp><samp class="o">-</samp><samp class="mi">31</samp><samp class="w"> </samp><samp class="mi">03</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CEST</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="7466532731-4">&gt;</samp></code></pre><p>Most of the time there is one, and just one, valid datetime for a certain
date and time in a certain time zone.</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="7433177638-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p" data-group-id="7433177638-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">new</samp><samp class="p" data-group-id="7433177638-2">(</samp><samp class="ld">~D[2018-07-28]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~T[12:30:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="7433177638-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="p" data-group-id="7433177638-3">#</samp><samp class="nc" data-group-id="7433177638-3">DateTime</samp><samp class="p" data-group-id="7433177638-3">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">07</samp><samp class="o">-</samp><samp class="mi">28</samp><samp class="w"> </samp><samp class="mi">12</samp><samp class="p">:</samp><samp class="mi">30</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CEST</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="7433177638-3">&gt;</samp></code></pre>
  </section>
</section>
<section class="detail" id="new!/4">

    <span id="new!/2"></span>

    <span id="new!/3"></span>

  <div class="detail-header">
    <a href="#new!/4" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">new!(date, time, time_zone \\ &quot;Etc/UTC&quot;, time_zone_database \\ Calendar.get_time_zone_database())</h1>

        <span class="note">(since 1.11.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L349" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> new!(<a href="Date.xhtml#t:t/0">Date.t</a>(), <a href="Time.xhtml#t:t/0">Time.t</a>(), <a href="Calendar.xhtml#t:time_zone/0">Calendar.time_zone</a>(), <a href="Calendar.xhtml#t:time_zone_database/0">Calendar.time_zone_database</a>()) ::
  <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Builds a datetime from date and time structs, raising on errors.</p><p>It expects a time zone to put the <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> in.
If the time zone is not passed it will default to <code class="inline">&quot;Etc/UTC&quot;</code>,
which always succeeds. Otherwise, the DateTime is checked against the time zone database
given as <code class="inline">time_zone_database</code>. See the &quot;Time zone database&quot;
section in the module documentation.</p><h2 id="new!/4-examples" class="section-heading"><a href="#new!/4-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">new!</samp><samp class="p" data-group-id="8353238970-1">(</samp><samp class="ld">~D[2016-05-24]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~T[13:26:08.003]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="8353238970-1">)</samp><samp class="w">
</samp><samp class="ld">~U[2016-05-24 13:26:08.003Z]</samp></code></pre><p>When the datetime is ambiguous - for instance during changing from summer
to winter time - an error will be raised.</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">new!</samp><samp class="p" data-group-id="2738394959-1">(</samp><samp class="ld">~D[2018-10-28]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~T[02:30:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="2738394959-1">)</samp><samp class="w">
</samp><samp class="gt">** (ArgumentError) cannot build datetime with ~D[2018-10-28] and ~T[02:30:00] because such instant is ambiguous in time zone Europe/Copenhagen as there is an overlap between #DateTime&lt;2018-10-28 02:30:00+02:00 CEST Europe/Copenhagen&gt; and #DateTime&lt;2018-10-28 02:30:00+01:00 CET Europe/Copenhagen&gt;</samp></code></pre><p>When there is a gap in wall time - for instance in spring when the clocks are
turned forward - an error will be raised.</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">new!</samp><samp class="p" data-group-id="1741694750-1">(</samp><samp class="ld">~D[2019-03-31]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~T[02:30:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="1741694750-1">)</samp><samp class="w">
</samp><samp class="gt">** (ArgumentError) cannot build datetime with ~D[2019-03-31] and ~T[02:30:00] because such instant does not exist in time zone Europe/Copenhagen as there is a gap between #DateTime&lt;2019-03-31 01:59:59.999999+01:00 CET Europe/Copenhagen&gt; and #DateTime&lt;2019-03-31 03:00:00+02:00 CEST Europe/Copenhagen&gt;</samp></code></pre><p>Most of the time there is one, and just one, valid datetime for a certain
date and time in a certain time zone.</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">new!</samp><samp class="p" data-group-id="3959097185-1">(</samp><samp class="ld">~D[2018-07-28]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~T[12:30:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="3959097185-1">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w">
</samp><samp class="p" data-group-id="3959097185-2">#</samp><samp class="nc" data-group-id="3959097185-2">DateTime</samp><samp class="p" data-group-id="3959097185-2">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">07</samp><samp class="o">-</samp><samp class="mi">28</samp><samp class="w"> </samp><samp class="mi">12</samp><samp class="p">:</samp><samp class="mi">30</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">+</samp><samp class="mi">02</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CEST</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Copenhagen</samp><samp class="p" data-group-id="3959097185-2">&gt;</samp></code></pre>
  </section>
</section>
<section class="detail" id="now/2">

    <span id="now/1"></span>

  <div class="detail-header">
    <a href="#now/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">now(time_zone, time_zone_database \\ Calendar.get_time_zone_database())</h1>

        <span class="note">(since 1.8.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L836" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> now(<a href="Calendar.xhtml#t:time_zone/0">Calendar.time_zone</a>(), <a href="Calendar.xhtml#t:time_zone_database/0">Calendar.time_zone_database</a>()) ::
  {:ok, <a href="#t:t/0">t</a>()} | {:error, :time_zone_not_found | :utc_only_time_zone_database}</pre>

      </div>

<p>Returns the current datetime in the provided time zone.</p><p>By default, it uses the default time_zone returned by
<a href="Calendar.xhtml#get_time_zone_database/0"><code class="inline">Calendar.get_time_zone_database/0</code></a>, which defaults to
<a href="Calendar.UTCOnlyTimeZoneDatabase.xhtml"><code class="inline">Calendar.UTCOnlyTimeZoneDatabase</code></a> which only handles &quot;Etc/UTC&quot; datetimes.
Other time zone databases can be passed as argument or set globally.
See the &quot;Time zone database&quot; section in the module docs.</p><h2 id="now/2-examples" class="section-heading"><a href="#now/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="9359841122-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">datetime</samp><samp class="p" data-group-id="9359841122-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">now</samp><samp class="p" data-group-id="9359841122-2">(</samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="9359841122-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="o">.</samp><samp class="n">time_zone</samp><samp class="w">
</samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">now</samp><samp class="p" data-group-id="9359841122-3">(</samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p" data-group-id="9359841122-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="9359841122-4">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:utc_only_time_zone_database</samp><samp class="p" data-group-id="9359841122-4">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">now</samp><samp class="p" data-group-id="9359841122-5">(</samp><samp class="s">&quot;bad timezone&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="9359841122-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="9359841122-6">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:time_zone_not_found</samp><samp class="p" data-group-id="9359841122-6">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="now!/2">

    <span id="now!/1"></span>

  <div class="detail-header">
    <a href="#now!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">now!(time_zone, time_zone_database \\ Calendar.get_time_zone_database())</h1>

        <span class="note">(since 1.10.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L866" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> now!(<a href="Calendar.xhtml#t:time_zone/0">Calendar.time_zone</a>(), <a href="Calendar.xhtml#t:time_zone_database/0">Calendar.time_zone_database</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Returns the current datetime in the provided time zone or raises on errors</p><p>See <a href="#now/2"><code class="inline">now/2</code></a> for more information.</p><h2 id="now!/2-examples" class="section-heading"><a href="#now!/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">now!</samp><samp class="p" data-group-id="1318313875-1">(</samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="1318313875-1">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="o">.</samp><samp class="n">time_zone</samp><samp class="w">
</samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">now!</samp><samp class="p" data-group-id="1318313875-2">(</samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p" data-group-id="1318313875-2">)</samp><samp class="w">
</samp><samp class="gt">** (ArgumentError) cannot get current datetime in &quot;Europe/Copenhagen&quot; time zone, reason: :utc_only_time_zone_database</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">now!</samp><samp class="p" data-group-id="1318313875-3">(</samp><samp class="s">&quot;bad timezone&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="1318313875-3">)</samp><samp class="w">
</samp><samp class="gt">** (ArgumentError) cannot get current datetime in &quot;bad timezone&quot; time zone, reason: :time_zone_not_found</samp></code></pre>
  </section>
</section>
<section class="detail" id="shift/3">

    <span id="shift/2"></span>

  <div class="detail-header">
    <a href="#shift/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">shift(datetime, duration, time_zone_database \\ Calendar.get_time_zone_database())</h1>

        <span class="note">(since 1.17.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1754" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> shift(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(), <a href="Duration.xhtml#t:duration/0">Duration.duration</a>(), <a href="Calendar.xhtml#t:time_zone_database/0">Calendar.time_zone_database</a>()) ::
  <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Shifts given <code class="inline">datetime</code> by <code class="inline">duration</code> according to its calendar.</p><p>Allowed units are: <code class="inline">:year</code>, <code class="inline">:month</code>, <code class="inline">:week</code>, <code class="inline">:day</code>, <code class="inline">:hour</code>, <code class="inline">:minute</code>, <code class="inline">:second</code>, <code class="inline">:microsecond</code>.</p><p>This operation is equivalent to shifting the datetime wall clock
(in other words, the value as someone in that timezone would see
on their watch), then applying the time zone offset to convert it
to UTC, and finally computing the new timezone in case of shifts.
This ensures <a href="#shift/3"><code class="inline">shift/3</code></a> always returns a valid datetime.</p><p>On the other hand, time zones that observe &quot;Daylight Saving Time&quot;
or other changes, across summer/winter time will add/remove hours
from the resulting datetime:</p><pre><code class="makeup elixir" translate="no"><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">new!</samp><samp class="p" data-group-id="2341975664-1">(</samp><samp class="ld">~D[2019-03-31]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~T[01:00:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Copenhagen&quot;</samp><samp class="p" data-group-id="2341975664-1">)</samp><samp class="w">
</samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift</samp><samp class="p" data-group-id="2341975664-2">(</samp><samp class="n">dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="2341975664-2">)</samp><samp class="w">
</samp><samp class="c1">#=&gt; #DateTime&lt;2019-03-31 03:00:00+02:00 CEST Europe/Copenhagen&gt;</samp><samp class="w">

</samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">new!</samp><samp class="p" data-group-id="2341975664-3">(</samp><samp class="ld">~D[2018-11-04]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ld">~T[00:00:00]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;America/Los_Angeles&quot;</samp><samp class="p" data-group-id="2341975664-3">)</samp><samp class="w">
</samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift</samp><samp class="p" data-group-id="2341975664-4">(</samp><samp class="n">dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="2341975664-4">)</samp><samp class="w">
</samp><samp class="c1">#=&gt; #DateTime&lt;2018-11-04 01:00:00-08:00 PST America/Los_Angeles&gt;</samp></code></pre><p>In case you don't want these changes to happen automatically or you
want to surface time zone conflicts to the user, you can shift
the datetime as a naive datetime and then use <a href="#from_naive/2"><code class="inline">from_naive/2</code></a>:</p><pre><code class="makeup elixir" translate="no"><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">NaiveDateTime</samp><samp class="o">.</samp><samp class="n">shift</samp><samp class="p" data-group-id="9789449521-1">(</samp><samp class="n">duration</samp><samp class="p" data-group-id="9789449521-1">)</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_naive</samp><samp class="p" data-group-id="9789449521-2">(</samp><samp class="n">dt</samp><samp class="o">.</samp><samp class="n">time_zone</samp><samp class="p" data-group-id="9789449521-2">)</samp></code></pre><p>When using the default ISO calendar, durations are collapsed and
applied in the order of months, then seconds and microseconds:</p><ul><li>when shifting by 1 year and 2 months the date is actually shifted by 14 months</li><li>weeks, days and smaller units are collapsed into seconds and microseconds</li></ul><p>When shifting by month, days are rounded down to the nearest valid date.</p><h2 id="shift/3-examples" class="section-heading"><a href="#shift/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift</samp><samp class="p" data-group-id="1579823043-1">(</samp><samp class="ld">~U[2016-01-01 00:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1579823043-1">)</samp><samp class="w">
</samp><samp class="ld">~U[2016-03-01 00:00:00Z]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift</samp><samp class="p" data-group-id="1579823043-2">(</samp><samp class="ld">~U[2016-01-01 00:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">week</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="1579823043-2">)</samp><samp class="w">
</samp><samp class="ld">~U[2017-01-29 00:00:00Z]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift</samp><samp class="p" data-group-id="1579823043-3">(</samp><samp class="ld">~U[2016-01-01 00:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">25</samp><samp class="p" data-group-id="1579823043-3">)</samp><samp class="w">
</samp><samp class="ld">~U[2015-12-31 23:35:00Z]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift</samp><samp class="p" data-group-id="1579823043-4">(</samp><samp class="ld">~U[2016-01-01 00:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="1579823043-5">{</samp><samp class="mi">500</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="1579823043-5">}</samp><samp class="p" data-group-id="1579823043-4">)</samp><samp class="w">
</samp><samp class="ld">~U[2016-01-01 00:05:00.0005Z]</samp><samp class="w">

</samp><samp class="c1"># leap years</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift</samp><samp class="p" data-group-id="1579823043-6">(</samp><samp class="ld">~U[2024-02-29 00:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1579823043-6">)</samp><samp class="w">
</samp><samp class="ld">~U[2025-02-28 00:00:00Z]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift</samp><samp class="p" data-group-id="1579823043-7">(</samp><samp class="ld">~U[2024-02-29 00:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="1579823043-7">)</samp><samp class="w">
</samp><samp class="ld">~U[2028-02-29 00:00:00Z]</samp><samp class="w">

</samp><samp class="c1"># rounding down</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift</samp><samp class="p" data-group-id="1579823043-8">(</samp><samp class="ld">~U[2015-01-31 00:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1579823043-8">)</samp><samp class="w">
</samp><samp class="ld">~U[2015-02-28 00:00:00Z]</samp></code></pre>
  </section>
</section>
<section class="detail" id="shift_zone/3">

    <span id="shift_zone/2"></span>

  <div class="detail-header">
    <a href="#shift_zone/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">shift_zone(datetime, time_zone, time_zone_database \\ Calendar.get_time_zone_database())</h1>

        <span class="note">(since 1.8.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L733" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> shift_zone(<a href="#t:t/0">t</a>(), <a href="Calendar.xhtml#t:time_zone/0">Calendar.time_zone</a>(), <a href="Calendar.xhtml#t:time_zone_database/0">Calendar.time_zone_database</a>()) ::
  {:ok, <a href="#t:t/0">t</a>()} | {:error, :time_zone_not_found | :utc_only_time_zone_database}</pre>

      </div>

<p>Changes the time zone of a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a>.</p><p>Returns a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> for the same point in time, but instead at
the time zone provided. It assumes that <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> is valid and
exists in the given time zone and calendar.</p><p>By default, it uses the default time zone database returned by
<a href="Calendar.xhtml#get_time_zone_database/0"><code class="inline">Calendar.get_time_zone_database/0</code></a>, which defaults to
<a href="Calendar.UTCOnlyTimeZoneDatabase.xhtml"><code class="inline">Calendar.UTCOnlyTimeZoneDatabase</code></a> which only handles &quot;Etc/UTC&quot; datetimes.
Other time zone databases can be passed as argument or set globally.
See the &quot;Time zone database&quot; section in the module docs.</p><h2 id="shift_zone/3-examples" class="section-heading"><a href="#shift_zone/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="7173040703-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">pacific_datetime</samp><samp class="p" data-group-id="7173040703-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift_zone</samp><samp class="p" data-group-id="7173040703-2">(</samp><samp class="ld">~U[2018-07-16 10:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;America/Los_Angeles&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="7173040703-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">pacific_datetime</samp><samp class="w">
</samp><samp class="p" data-group-id="7173040703-3">#</samp><samp class="nc" data-group-id="7173040703-3">DateTime</samp><samp class="p" data-group-id="7173040703-3">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">07</samp><samp class="o">-</samp><samp class="mi">16</samp><samp class="w"> </samp><samp class="mi">03</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">-</samp><samp class="mi">07</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">PDT</samp><samp class="w"> </samp><samp class="nc">America</samp><samp class="o">/</samp><samp class="nc">Los_Angeles</samp><samp class="p" data-group-id="7173040703-3">&gt;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift_zone</samp><samp class="p" data-group-id="7173040703-4">(</samp><samp class="ld">~U[2018-07-16 10:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;bad timezone&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="7173040703-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7173040703-5">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:time_zone_not_found</samp><samp class="p" data-group-id="7173040703-5">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="shift_zone!/3">

    <span id="shift_zone!/2"></span>

  <div class="detail-header">
    <a href="#shift_zone!/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">shift_zone!(datetime, time_zone, time_zone_database \\ Calendar.get_time_zone_database())</h1>

        <span class="note">(since 1.10.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L799" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> shift_zone!(<a href="#t:t/0">t</a>(), <a href="Calendar.xhtml#t:time_zone/0">Calendar.time_zone</a>(), <a href="Calendar.xhtml#t:time_zone_database/0">Calendar.time_zone_database</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Changes the time zone of a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> or raises on errors.</p><p>See <a href="#shift_zone/3"><code class="inline">shift_zone/3</code></a> for more information.</p><h2 id="shift_zone!/3-examples" class="section-heading"><a href="#shift_zone!/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift_zone!</samp><samp class="p" data-group-id="4439265317-1">(</samp><samp class="ld">~U[2018-07-16 10:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;America/Los_Angeles&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="4439265317-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4439265317-2">#</samp><samp class="nc" data-group-id="4439265317-2">DateTime</samp><samp class="p" data-group-id="4439265317-2">&lt;</samp><samp class="mi">2018</samp><samp class="o">-</samp><samp class="mi">07</samp><samp class="o">-</samp><samp class="mi">16</samp><samp class="w"> </samp><samp class="mi">03</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="o">-</samp><samp class="mi">07</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">PDT</samp><samp class="w"> </samp><samp class="nc">America</samp><samp class="o">/</samp><samp class="nc">Los_Angeles</samp><samp class="p" data-group-id="4439265317-2">&gt;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">shift_zone!</samp><samp class="p" data-group-id="4439265317-3">(</samp><samp class="ld">~U[2018-07-16 10:00:00Z]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;bad timezone&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">FakeTimeZoneDatabase</samp><samp class="p" data-group-id="4439265317-3">)</samp><samp class="w">
</samp><samp class="gt">** (ArgumentError) cannot shift ~U[2018-07-16 10:00:00Z] to &quot;bad timezone&quot; time zone, reason: :time_zone_not_found</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_date/1">

  <div class="detail-header">
    <a href="#to_date/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_date(datetime)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L972" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_date(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>()) :: <a href="Date.xhtml#t:t/0">Date.t</a>()</pre>

      </div>

<p>Converts a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> into a <a href="Date.xhtml"><code class="inline">Date</code></a>.</p><p>Because <a href="Date.xhtml"><code class="inline">Date</code></a> does not hold time nor time zone information,
data will be lost during the conversion.</p><h2 id="to_date/1-examples" class="section-heading"><a href="#to_date/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="1596241767-1">%</samp><samp class="nc" data-group-id="1596241767-1">DateTime</samp><samp class="p" data-group-id="1596241767-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="1596241767-2">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="1596241767-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Warsaw&quot;</samp><samp class="p" data-group-id="1596241767-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_date</samp><samp class="p" data-group-id="1596241767-3">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="1596241767-3">)</samp><samp class="w">
</samp><samp class="ld">~D[2000-02-29]</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_gregorian_seconds/1">

  <div class="detail-header">
    <a href="#to_gregorian_seconds/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_gregorian_seconds(datetime)</h1>

        <span class="note">(since 1.11.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1333" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_gregorian_seconds(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>()) :: {<a href="typespecs.xhtml#basic-types">integer</a>(), <a href="typespecs.xhtml#basic-types">non_neg_integer</a>()}</pre>

      </div>

<p>Converts a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> struct to a number of gregorian seconds and microseconds.</p><h2 id="to_gregorian_seconds/1-examples" class="section-heading"><a href="#to_gregorian_seconds/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="6525188846-1">%</samp><samp class="nc" data-group-id="6525188846-1">DateTime</samp><samp class="p" data-group-id="6525188846-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;UTC&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6525188846-2">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="6525188846-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="6525188846-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_gregorian_seconds</samp><samp class="p" data-group-id="6525188846-3">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="6525188846-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6525188846-4">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="6525188846-4">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="6525188846-5">%</samp><samp class="nc" data-group-id="6525188846-5">DateTime</samp><samp class="p" data-group-id="6525188846-5">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2020</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;UTC&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">26</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">31</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6525188846-6">{</samp><samp class="mi">5000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="6525188846-6">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="6525188846-5">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_gregorian_seconds</samp><samp class="p" data-group-id="6525188846-7">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="6525188846-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6525188846-8">{</samp><samp class="mi">63_755_511_991</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">5000</samp><samp class="p" data-group-id="6525188846-8">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="6525188846-9">%</samp><samp class="nc" data-group-id="6525188846-9">DateTime</samp><samp class="p" data-group-id="6525188846-9">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2020</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">26</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">31</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6525188846-10">{</samp><samp class="mi">5000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="6525188846-10">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Warsaw&quot;</samp><samp class="p" data-group-id="6525188846-9">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_gregorian_seconds</samp><samp class="p" data-group-id="6525188846-11">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="6525188846-11">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6525188846-12">{</samp><samp class="mi">63_755_511_991</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">5000</samp><samp class="p" data-group-id="6525188846-12">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_iso8601/3">

    <span id="to_iso8601/1"></span>

    <span id="to_iso8601/2"></span>

  <div class="detail-header">
    <a href="#to_iso8601/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_iso8601(datetime, format \\ :extended, offset \\ nil)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1092" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_iso8601(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(), :basic | :extended, nil | <a href="typespecs.xhtml#basic-types">integer</a>()) ::
  <a href="String.xhtml#t:t/0">String.t</a>()</pre>

      </div>

<p>Converts the given datetime to
<a href="https://en.wikipedia.org/wiki/ISO_8601">ISO 8601:2019</a> format.</p><p>By default, <a href="#to_iso8601/2"><code class="inline">DateTime.to_iso8601/2</code></a> returns datetimes formatted in the &quot;extended&quot;
format, for human readability. It also supports the &quot;basic&quot; format through passing the <code class="inline">:basic</code> option.</p><p>You can also optionally specify an offset for the formatted string.
If none is given, the one in the given <code class="inline">datetime</code> is used.</p><p>Only supports converting datetimes which are in the ISO calendar.
If another calendar is given, it is automatically converted to ISO.
It raises if not possible.</p><p>WARNING: the ISO 8601 datetime format does not contain the time zone nor
its abbreviation, which means information is lost when converting to such
format.</p><h3 id="to_iso8601/3-examples" class="section-heading"><a href="#to_iso8601/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h3><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-1">%</samp><samp class="nc" data-group-id="3104456659-1">DateTime</samp><samp class="p" data-group-id="3104456659-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-2">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3104456659-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Warsaw&quot;</samp><samp class="p" data-group-id="3104456659-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_iso8601</samp><samp class="p" data-group-id="3104456659-3">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="3104456659-3">)</samp><samp class="w">
</samp><samp class="s">&quot;2000-02-29T23:00:07+01:00&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-4">%</samp><samp class="nc" data-group-id="3104456659-4">DateTime</samp><samp class="p" data-group-id="3104456659-4">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;UTC&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-5">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3104456659-5">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="3104456659-4">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_iso8601</samp><samp class="p" data-group-id="3104456659-6">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="3104456659-6">)</samp><samp class="w">
</samp><samp class="s">&quot;2000-02-29T23:00:07Z&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-7">%</samp><samp class="nc" data-group-id="3104456659-7">DateTime</samp><samp class="p" data-group-id="3104456659-7">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-8">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3104456659-8">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p" data-group-id="3104456659-7">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_iso8601</samp><samp class="p" data-group-id="3104456659-9">(</samp><samp class="n">dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:extended</samp><samp class="p" data-group-id="3104456659-9">)</samp><samp class="w">
</samp><samp class="s">&quot;2000-02-29T23:00:07-04:00&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-10">%</samp><samp class="nc" data-group-id="3104456659-10">DateTime</samp><samp class="p" data-group-id="3104456659-10">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-11">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3104456659-11">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p" data-group-id="3104456659-10">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_iso8601</samp><samp class="p" data-group-id="3104456659-12">(</samp><samp class="n">dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:basic</samp><samp class="p" data-group-id="3104456659-12">)</samp><samp class="w">
</samp><samp class="s">&quot;20000229T230007-0400&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-13">%</samp><samp class="nc" data-group-id="3104456659-13">DateTime</samp><samp class="p" data-group-id="3104456659-13">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-14">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3104456659-14">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p" data-group-id="3104456659-13">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_iso8601</samp><samp class="p" data-group-id="3104456659-15">(</samp><samp class="n">dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:extended</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p" data-group-id="3104456659-15">)</samp><samp class="w">
</samp><samp class="s">&quot;2000-03-01T04:00:07+01:00&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-16">%</samp><samp class="nc" data-group-id="3104456659-16">DateTime</samp><samp class="p" data-group-id="3104456659-16">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-17">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3104456659-17">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p" data-group-id="3104456659-16">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_iso8601</samp><samp class="p" data-group-id="3104456659-18">(</samp><samp class="n">dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:extended</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3104456659-18">)</samp><samp class="w">
</samp><samp class="s">&quot;2000-03-01T03:00:07+00:00&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-19">%</samp><samp class="nc" data-group-id="3104456659-19">DateTime</samp><samp class="p" data-group-id="3104456659-19">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">01</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;UTC&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">03</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="3104456659-20">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3104456659-20">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="3104456659-19">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_iso8601</samp><samp class="p" data-group-id="3104456659-21">(</samp><samp class="n">dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:extended</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3104456659-21">)</samp><samp class="w">
</samp><samp class="s">&quot;2000-03-01T03:00:07Z&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="3104456659-22">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">offset</samp><samp class="p" data-group-id="3104456659-22">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_iso8601</samp><samp class="p" data-group-id="3104456659-23">(</samp><samp class="s">&quot;2000-03-01T03:00:07Z&quot;</samp><samp class="p" data-group-id="3104456659-23">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="s">&quot;2000-03-01T03:00:07Z&quot;</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_iso8601</samp><samp class="p" data-group-id="3104456659-24">(</samp><samp class="n">dt</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:extended</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">offset</samp><samp class="p" data-group-id="3104456659-24">)</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_naive/1">

  <div class="detail-header">
    <a href="#to_naive/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_naive(datetime)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L931" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_naive(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>()) :: <a href="NaiveDateTime.xhtml#t:t/0">NaiveDateTime.t</a>()</pre>

      </div>

<p>Converts the given <code class="inline">datetime</code> into a <a href="NaiveDateTime.xhtml"><code class="inline">NaiveDateTime</code></a>.</p><p>Because <a href="NaiveDateTime.xhtml"><code class="inline">NaiveDateTime</code></a> does not hold time zone information,
any time zone related data will be lost during the conversion.</p><h2 id="to_naive/1-examples" class="section-heading"><a href="#to_naive/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="0526043613-1">%</samp><samp class="nc" data-group-id="0526043613-1">DateTime</samp><samp class="p" data-group-id="0526043613-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="0526043613-2">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="0526043613-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Warsaw&quot;</samp><samp class="p" data-group-id="0526043613-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_naive</samp><samp class="p" data-group-id="0526043613-3">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="0526043613-3">)</samp><samp class="w">
</samp><samp class="ld">~N[2000-02-29 23:00:07.0]</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_string/1">

  <div class="detail-header">
    <a href="#to_string/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_string(datetime)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1385" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_string(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>()) :: <a href="String.xhtml#t:t/0">String.t</a>()</pre>

      </div>

<p>Converts the given <code class="inline">datetime</code> to a string according to its calendar.</p><p>Unfortunately, there is no standard that specifies rendering of a
datetime with its complete time zone information, so Elixir uses a
custom (but relatively common) representation which appends the time
zone abbreviation and full name to the datetime.</p><h3 id="to_string/1-examples" class="section-heading"><a href="#to_string/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h3><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="5864103000-1">%</samp><samp class="nc" data-group-id="5864103000-1">DateTime</samp><samp class="p" data-group-id="5864103000-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5864103000-2">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="5864103000-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Warsaw&quot;</samp><samp class="p" data-group-id="5864103000-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_string</samp><samp class="p" data-group-id="5864103000-3">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="5864103000-3">)</samp><samp class="w">
</samp><samp class="s">&quot;2000-02-29 23:00:07+01:00 CET Europe/Warsaw&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="5864103000-4">%</samp><samp class="nc" data-group-id="5864103000-4">DateTime</samp><samp class="p" data-group-id="5864103000-4">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;UTC&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5864103000-5">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="5864103000-5">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p" data-group-id="5864103000-4">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_string</samp><samp class="p" data-group-id="5864103000-6">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="5864103000-6">)</samp><samp class="w">
</samp><samp class="s">&quot;2000-02-29 23:00:07Z&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="5864103000-7">%</samp><samp class="nc" data-group-id="5864103000-7">DateTime</samp><samp class="p" data-group-id="5864103000-7">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;AMT&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5864103000-8">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="5864103000-8">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">14400</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Manaus&quot;</samp><samp class="p" data-group-id="5864103000-7">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_string</samp><samp class="p" data-group-id="5864103000-9">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="5864103000-9">)</samp><samp class="w">
</samp><samp class="s">&quot;2000-02-29 23:00:07-04:00 AMT America/Manaus&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="5864103000-10">%</samp><samp class="nc" data-group-id="5864103000-10">DateTime</samp><samp class="p" data-group-id="5864103000-10">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">100</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">12</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">19</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">20</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">31</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5864103000-11">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="5864103000-11">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Stockholm&quot;</samp><samp class="p" data-group-id="5864103000-10">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_string</samp><samp class="p" data-group-id="5864103000-12">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="5864103000-12">)</samp><samp class="w">
</samp><samp class="s">&quot;-0100-12-19 03:20:31+01:00 CET Europe/Stockholm&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_time/1">

  <div class="detail-header">
    <a href="#to_time/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_time(datetime)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1004" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_time(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>()) :: <a href="Time.xhtml#t:t/0">Time.t</a>()</pre>

      </div>

<p>Converts a <a href="DateTime.xhtml"><code class="inline">DateTime</code></a> into <a href="Time.xhtml"><code class="inline">Time</code></a>.</p><p>Because <a href="Time.xhtml"><code class="inline">Time</code></a> does not hold date nor time zone information,
data will be lost during the conversion.</p><h2 id="to_time/1-examples" class="section-heading"><a href="#to_time/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="0424334957-1">%</samp><samp class="nc" data-group-id="0424334957-1">DateTime</samp><samp class="p" data-group-id="0424334957-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2000</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">29</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">23</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="0424334957-2">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="0424334957-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Warsaw&quot;</samp><samp class="p" data-group-id="0424334957-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_time</samp><samp class="p" data-group-id="0424334957-3">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="0424334957-3">)</samp><samp class="w">
</samp><samp class="ld">~T[23:00:07.0]</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_unix/2">

    <span id="to_unix/1"></span>

  <div class="detail-header">
    <a href="#to_unix/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_unix(datetime, unit \\ :second)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L906" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_unix(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(), :native | <a href="System.xhtml#t:time_unit/0">System.time_unit</a>()) :: <a href="typespecs.xhtml#basic-types">integer</a>()</pre>

      </div>

<p>Converts the given <code class="inline">datetime</code> to Unix time.</p><p>The <code class="inline">datetime</code> is expected to be using the ISO calendar
with a year greater than or equal to 0.</p><p>It will return the integer with the given unit,
according to <a href="System.xhtml#convert_time_unit/3"><code class="inline">System.convert_time_unit/3</code></a>.</p><h2 id="to_unix/2-examples" class="section-heading"><a href="#to_unix/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="mi">1_464_096_368</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">from_unix!</samp><samp class="p" data-group-id="1791067462-1">(</samp><samp class="p" data-group-id="1791067462-1">)</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_unix</samp><samp class="p" data-group-id="1791067462-2">(</samp><samp class="p" data-group-id="1791067462-2">)</samp><samp class="w">
</samp><samp class="mi">1464096368</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="1791067462-3">%</samp><samp class="nc" data-group-id="1791067462-3">DateTime</samp><samp class="p" data-group-id="1791067462-3">{</samp><samp class="ss">calendar</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="nc">Calendar.ISO</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">20</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">18</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="1791067462-4">{</samp><samp class="mi">273806</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">6</samp><samp class="p" data-group-id="1791067462-4">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">58</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">19</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;America/Montevideo&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="o">-</samp><samp class="mi">10800</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2014</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;UYST&quot;</samp><samp class="p" data-group-id="1791067462-3">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_unix</samp><samp class="p" data-group-id="1791067462-5">(</samp><samp class="n">dt</samp><samp class="p" data-group-id="1791067462-5">)</samp><samp class="w">
</samp><samp class="mi">1416517099</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">flamel</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="1791067462-6">%</samp><samp class="nc" data-group-id="1791067462-6">DateTime</samp><samp class="p" data-group-id="1791067462-6">{</samp><samp class="ss">calendar</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="nc">Calendar.ISO</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">22</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">8</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="1791067462-7">{</samp><samp class="mi">527771</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">6</samp><samp class="p" data-group-id="1791067462-7">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">25</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">               </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1418</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;UTC&quot;</samp><samp class="p" data-group-id="1791067462-6">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">to_unix</samp><samp class="p" data-group-id="1791067462-8">(</samp><samp class="n">flamel</samp><samp class="p" data-group-id="1791067462-8">)</samp><samp class="w">
</samp><samp class="o">-</samp><samp class="mi">17412508655</samp></code></pre>
  </section>
</section>
<section class="detail" id="truncate/2">

  <div class="detail-header">
    <a href="#truncate/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">truncate(datetime, precision)</h1>

        <span class="note">(since 1.6.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L1869" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> truncate(<a href="Calendar.xhtml#t:datetime/0">Calendar.datetime</a>(), :microsecond | :millisecond | :second) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Returns the given datetime with the microsecond field truncated to the given
precision (<code class="inline">:microsecond</code>, <code class="inline">:millisecond</code> or <code class="inline">:second</code>).</p><p>The given datetime is returned unchanged if it already has lower precision than
the given precision.</p><h2 id="truncate/2-examples" class="section-heading"><a href="#truncate/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt1</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="6648544150-1">%</samp><samp class="nc" data-group-id="6648544150-1">DateTime</samp><samp class="p" data-group-id="6648544150-1">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2017</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">45</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">18</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6648544150-2">{</samp><samp class="mi">123456</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">6</samp><samp class="p" data-group-id="6648544150-2">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Paris&quot;</samp><samp class="p" data-group-id="6648544150-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">truncate</samp><samp class="p" data-group-id="6648544150-3">(</samp><samp class="n">dt1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:microsecond</samp><samp class="p" data-group-id="6648544150-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6648544150-4">#</samp><samp class="nc" data-group-id="6648544150-4">DateTime</samp><samp class="p" data-group-id="6648544150-4">&lt;</samp><samp class="mi">2017</samp><samp class="o">-</samp><samp class="mi">11</samp><samp class="o">-</samp><samp class="mi">07</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">:</samp><samp class="mi">45</samp><samp class="p">:</samp><samp class="mf">18.123456</samp><samp class="o">+</samp><samp class="mi">01</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CET</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Paris</samp><samp class="p" data-group-id="6648544150-4">&gt;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt2</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="6648544150-5">%</samp><samp class="nc" data-group-id="6648544150-5">DateTime</samp><samp class="p" data-group-id="6648544150-5">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2017</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">45</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">18</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6648544150-6">{</samp><samp class="mi">123456</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">6</samp><samp class="p" data-group-id="6648544150-6">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Paris&quot;</samp><samp class="p" data-group-id="6648544150-5">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">truncate</samp><samp class="p" data-group-id="6648544150-7">(</samp><samp class="n">dt2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:millisecond</samp><samp class="p" data-group-id="6648544150-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6648544150-8">#</samp><samp class="nc" data-group-id="6648544150-8">DateTime</samp><samp class="p" data-group-id="6648544150-8">&lt;</samp><samp class="mi">2017</samp><samp class="o">-</samp><samp class="mi">11</samp><samp class="o">-</samp><samp class="mi">07</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">:</samp><samp class="mi">45</samp><samp class="p">:</samp><samp class="mf">18.123</samp><samp class="o">+</samp><samp class="mi">01</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CET</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Paris</samp><samp class="p" data-group-id="6648544150-8">&gt;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">dt3</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="6648544150-9">%</samp><samp class="nc" data-group-id="6648544150-9">DateTime</samp><samp class="p" data-group-id="6648544150-9">{</samp><samp class="ss">year</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2017</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">month</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">day</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">7</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">zone_abbr</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;CET&quot;</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">hour</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minute</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">45</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">second</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">18</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">microsecond</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6648544150-10">{</samp><samp class="mi">123456</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">6</samp><samp class="p" data-group-id="6648544150-10">}</samp><samp class="p">,</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">                </samp><samp class="ss">utc_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3600</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">std_offset</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">time_zone</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;Europe/Paris&quot;</samp><samp class="p" data-group-id="6648544150-9">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">truncate</samp><samp class="p" data-group-id="6648544150-11">(</samp><samp class="n">dt3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:second</samp><samp class="p" data-group-id="6648544150-11">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6648544150-12">#</samp><samp class="nc" data-group-id="6648544150-12">DateTime</samp><samp class="p" data-group-id="6648544150-12">&lt;</samp><samp class="mi">2017</samp><samp class="o">-</samp><samp class="mi">11</samp><samp class="o">-</samp><samp class="mi">07</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">:</samp><samp class="mi">45</samp><samp class="p">:</samp><samp class="mi">18</samp><samp class="o">+</samp><samp class="mi">01</samp><samp class="p">:</samp><samp class="mi">00</samp><samp class="w"> </samp><samp class="nc">CET</samp><samp class="w"> </samp><samp class="nc">Europe</samp><samp class="o">/</samp><samp class="nc">Paris</samp><samp class="p" data-group-id="6648544150-12">&gt;</samp></code></pre>
  </section>
</section>
<section class="detail" id="utc_now/1">

    <span id="utc_now/0"></span>

  <div class="detail-header">
    <a href="#utc_now/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">utc_now(calendar_or_time_unit \\ Calendar.ISO)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L193" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> utc_now(<a href="Calendar.xhtml#t:calendar/0">Calendar.calendar</a>() | :native | :microsecond | :millisecond | :second) ::
  <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Returns the current datetime in UTC.</p><p>If you want the current time in Unix seconds,
use <a href="System.xhtml#os_time/1"><code class="inline">System.os_time/1</code></a> instead.</p><p>You can also pass a time unit to automatically
truncate the resulting datetime. This is available
since v1.15.0.</p><p>The default unit if none gets passed is <code class="inline">:native</code>,
which results on a default resolution of microseconds.</p><h2 id="utc_now/1-examples" class="section-heading"><a href="#utc_now/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">utc_now</samp><samp class="p" data-group-id="4694629222-1">(</samp><samp class="p" data-group-id="4694629222-1">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="o">.</samp><samp class="n">time_zone</samp><samp class="w">
</samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">utc_now</samp><samp class="p" data-group-id="4694629222-2">(</samp><samp class="ss">:second</samp><samp class="p" data-group-id="4694629222-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="o">.</samp><samp class="n">microsecond</samp><samp class="w">
</samp><samp class="p" data-group-id="4694629222-3">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="4694629222-3">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="utc_now/2">

  <div class="detail-header">
    <a href="#utc_now/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">utc_now(time_unit, calendar)</h1>

        <span class="note">(since 1.15.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/calendar/datetime.ex#L223" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> utc_now(:native | :microsecond | :millisecond | :second, <a href="Calendar.xhtml#t:calendar/0">Calendar.calendar</a>()) ::
  <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Returns the current datetime in UTC, supporting
a specific calendar and precision.</p><p>If you want the current time in Unix seconds,
use <a href="System.xhtml#os_time/1"><code class="inline">System.os_time/1</code></a> instead.</p><h2 id="utc_now/2-examples" class="section-heading"><a href="#utc_now/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">utc_now</samp><samp class="p" data-group-id="3020144122-1">(</samp><samp class="ss">:microsecond</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">Calendar.ISO</samp><samp class="p" data-group-id="3020144122-1">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="o">.</samp><samp class="n">time_zone</samp><samp class="w">
</samp><samp class="s">&quot;Etc/UTC&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">DateTime</samp><samp class="o">.</samp><samp class="n">utc_now</samp><samp class="p" data-group-id="3020144122-2">(</samp><samp class="ss">:second</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="nc">Calendar.ISO</samp><samp class="p" data-group-id="3020144122-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">datetime</samp><samp class="o">.</samp><samp class="n">microsecond</samp><samp class="w">
</samp><samp class="p" data-group-id="3020144122-3">{</samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3020144122-3">}</samp></code></pre>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
