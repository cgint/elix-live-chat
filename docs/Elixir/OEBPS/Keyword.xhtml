<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Keyword - Elixir v1.18.4</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Keyword 
    </h1>


      <section id="moduledoc" class="docstring">
<p>A keyword list is a list that consists exclusively of two-element tuples.</p><p>The first element of these tuples is known as the <em>key</em>, and it must be an atom.
The second element, known as the <em>value</em>, can be any term.</p><p>Keywords are mostly used to work with optional values. For a general introduction
to keywords and how they compare with maps, see our <a href="keywords-and-maps.xhtml">Keyword and Maps</a>
guide.</p><h2 id="module-examples">Examples</h2><p>For example, the following is a keyword list:</p><pre><code class="makeup elixir" translate="no"><samp class="p" data-group-id="4018998148-1">[</samp><samp class="p" data-group-id="4018998148-2">{</samp><samp class="ss">:exit_on_close</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p" data-group-id="4018998148-2">}</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4018998148-3">{</samp><samp class="ss">:active</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:once</samp><samp class="p" data-group-id="4018998148-3">}</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4018998148-4">{</samp><samp class="ss">:packet_size</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">1024</samp><samp class="p" data-group-id="4018998148-4">}</samp><samp class="p" data-group-id="4018998148-1">]</samp></code></pre><p>Elixir provides a special and more concise syntax for keyword lists:</p><pre><code class="makeup elixir" translate="no"><samp class="p" data-group-id="9685121197-1">[</samp><samp class="ss">exit_on_close</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">active</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:once</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">packet_size</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1024</samp><samp class="p" data-group-id="9685121197-1">]</samp></code></pre><p>The two syntaxes return the exact same value.</p><p>A <em>key</em> can be any atom, consisting of Unicode letters, numbers,
an underscore or the <code class="inline">@</code> sign. If the <em>key</em> should have any other
characters, such as spaces, you can wrap it in quotes:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="2139145070-1">[</samp><samp class="ss">&quot;exit on close&quot;</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p" data-group-id="2139145070-1">]</samp><samp class="w">
</samp><samp class="p" data-group-id="2139145070-2">[</samp><samp class="ss">&quot;exit on close&quot;</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p" data-group-id="2139145070-2">]</samp></code></pre><p>Wrapping an atom in quotes does not make it a string. Keyword list
<em>keys</em> are always atoms. Quotes should only be used when necessary
or Elixir will issue a warning.</p><h2 id="module-duplicate-keys-and-ordering">Duplicate keys and ordering</h2><p>A keyword may have duplicate keys so it is not strictly a key-value
data type. However, most of the functions in this module work on a
key-value structure and behave similar to the functions you would
find in the <a href="Map.xhtml"><code class="inline">Map</code></a> module. For example, <a href="#get/3"><code class="inline">Keyword.get/3</code></a> will get the first
entry matching the given key, regardless if duplicate entries exist.
Similarly, <a href="#put/3"><code class="inline">Keyword.put/3</code></a> and <a href="#delete/2"><code class="inline">Keyword.delete/2</code></a> ensure all duplicate
entries for a given key are removed when invoked. Note, however, that
keyword list operations need to traverse the whole list in order to find
keys, so these operations are slower than their map counterparts.</p><p>A handful of functions exist to handle duplicate keys, for example,
<a href="#get_values/2"><code class="inline">get_values/2</code></a> returns all values for a given key and <a href="#delete_first/2"><code class="inline">delete_first/2</code></a>
deletes just the first entry of the existing ones.</p><p>Even though lists preserve the existing order, the functions in
<a href="Keyword.xhtml"><code class="inline">Keyword</code></a> do not guarantee any ordering. For example, if you invoke
<code class="inline">Keyword.put(opts, new_key, new_value)</code>, there is no guarantee for
where <code class="inline">new_key</code> will be added to (the front, the end or anywhere else).</p><p>Given ordering is not guaranteed, it is not recommended to pattern
match on keyword lists either. For example, a function such as:</p><pre><code class="makeup elixir" translate="no"><samp class="kd">def</samp><samp class="w"> </samp><samp class="nf">my_function</samp><samp class="p" data-group-id="4046292614-1">(</samp><samp class="p" data-group-id="4046292614-2">[</samp><samp class="ss">some_key</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="n">value</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">another_key</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="n">another_value</samp><samp class="p" data-group-id="4046292614-2">]</samp><samp class="p" data-group-id="4046292614-1">)</samp></code></pre><p>will match</p><pre><code class="makeup elixir" translate="no"><samp class="n">my_function</samp><samp class="p" data-group-id="0711164100-1">(</samp><samp class="p" data-group-id="0711164100-2">[</samp><samp class="ss">some_key</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:foo</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">another_key</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p" data-group-id="0711164100-2">]</samp><samp class="p" data-group-id="0711164100-1">)</samp></code></pre><p>but it won't match</p><pre><code class="makeup elixir" translate="no"><samp class="n">my_function</samp><samp class="p" data-group-id="8561825707-1">(</samp><samp class="p" data-group-id="8561825707-2">[</samp><samp class="ss">another_key</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">some_key</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:foo</samp><samp class="p" data-group-id="8561825707-2">]</samp><samp class="p" data-group-id="8561825707-1">)</samp></code></pre><p>Most of the functions in this module work in linear time. This means
that the time it takes to perform an operation grows at the same
rate as the length of the list.</p><h2 id="module-call-syntax">Call syntax</h2><p>When keyword lists are passed as the last argument to a function,
the square brackets around the keyword list can be omitted. For
example, the keyword list syntax:</p><pre><code class="makeup elixir" translate="no"><samp class="nc">String</samp><samp class="o">.</samp><samp class="n">split</samp><samp class="p" data-group-id="6158715018-1">(</samp><samp class="s">&quot;1-0&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;-&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="6158715018-2">[</samp><samp class="ss">trim</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">parts</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="6158715018-2">]</samp><samp class="p" data-group-id="6158715018-1">)</samp></code></pre><p>can be written without the enclosing brackets whenever it is the last
argument of a function call:</p><pre><code class="makeup elixir" translate="no"><samp class="nc">String</samp><samp class="o">.</samp><samp class="n">split</samp><samp class="p" data-group-id="0357198660-1">(</samp><samp class="s">&quot;1-0&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;-&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">trim</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">true</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">parts</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0357198660-1">)</samp></code></pre><p>Since tuples, lists and maps are treated similarly to function
arguments in Elixir syntax, this property is also available to them:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="2071273517-1">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">foo</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p" data-group-id="2071273517-1">}</samp><samp class="w">
</samp><samp class="p" data-group-id="2071273517-2">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="2071273517-3">[</samp><samp class="p" data-group-id="2071273517-4">{</samp><samp class="ss">:foo</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p" data-group-id="2071273517-4">}</samp><samp class="p" data-group-id="2071273517-3">]</samp><samp class="p" data-group-id="2071273517-2">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="2071273517-5">[</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">foo</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p" data-group-id="2071273517-5">]</samp><samp class="w">
</samp><samp class="p" data-group-id="2071273517-6">[</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="2071273517-7">{</samp><samp class="ss">:foo</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p" data-group-id="2071273517-7">}</samp><samp class="p" data-group-id="2071273517-6">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="2071273517-8">%{</samp><samp class="mi">1</samp><samp class="w"> </samp><samp class="p">=&gt;</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">foo</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p" data-group-id="2071273517-8">}</samp><samp class="w">
</samp><samp class="p" data-group-id="2071273517-9">%{</samp><samp class="mi">1</samp><samp class="w"> </samp><samp class="p">=&gt;</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:foo</samp><samp class="w"> </samp><samp class="p">=&gt;</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p" data-group-id="2071273517-9">}</samp></code></pre>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-types summary">
  <h2>
    <a href="#types">Types</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:default/0" data-no-tooltip="" translate="no">default()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:key/0" data-no-tooltip="" translate="no">key()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:t/0" data-no-tooltip="" translate="no">t()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:t/1" data-no-tooltip="" translate="no">t(value)</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:value/0" data-no-tooltip="" translate="no">value()</a>

      </div>

    </div>

</div>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#delete/2" data-no-tooltip="" translate="no">delete(keywords, key)</a>

      </div>

        <div class="summary-synopsis"><p>Deletes the entries in the keyword list under a specific <code class="inline">key</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#delete_first/2" data-no-tooltip="" translate="no">delete_first(keywords, key)</a>

      </div>

        <div class="summary-synopsis"><p>Deletes the first entry in the keyword list under a specific <code class="inline">key</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#drop/2" data-no-tooltip="" translate="no">drop(keywords, keys)</a>

      </div>

        <div class="summary-synopsis"><p>Drops the given <code class="inline">keys</code> from the keyword list.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#equal?/2" data-no-tooltip="" translate="no">equal?(left, right)</a>

      </div>

        <div class="summary-synopsis"><p>Checks if two keywords are equal.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#fetch/2" data-no-tooltip="" translate="no">fetch(keywords, key)</a>

      </div>

        <div class="summary-synopsis"><p>Fetches the value for a specific <code class="inline">key</code> and returns it in a tuple.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#fetch!/2" data-no-tooltip="" translate="no">fetch!(keywords, key)</a>

      </div>

        <div class="summary-synopsis"><p>Fetches the value for specific <code class="inline">key</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#filter/2" data-no-tooltip="" translate="no">filter(keywords, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Returns a keyword list containing only the entries from <code class="inline">keywords</code>
for which the function <code class="inline">fun</code> returns a truthy value.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#from_keys/2" data-no-tooltip="" translate="no">from_keys(keys, value)</a>

      </div>

        <div class="summary-synopsis"><p>Builds a keyword from the given <code class="inline">keys</code> and the fixed <code class="inline">value</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#get/3" data-no-tooltip="" translate="no">get(keywords, key, default \\ nil)</a>

      </div>

        <div class="summary-synopsis"><p>Gets the value under the given <code class="inline">key</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#get_and_update/3" data-no-tooltip="" translate="no">get_and_update(keywords, key, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Gets the value from <code class="inline">key</code> and updates it, all in one pass.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#get_and_update!/3" data-no-tooltip="" translate="no">get_and_update!(keywords, key, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Gets the value under <code class="inline">key</code> and updates it. Raises if there is no <code class="inline">key</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#get_lazy/3" data-no-tooltip="" translate="no">get_lazy(keywords, key, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Gets the value under the given <code class="inline">key</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#get_values/2" data-no-tooltip="" translate="no">get_values(keywords, key)</a>

      </div>

        <div class="summary-synopsis"><p>Gets all values under a specific <code class="inline">key</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#has_key?/2" data-no-tooltip="" translate="no">has_key?(keywords, key)</a>

      </div>

        <div class="summary-synopsis"><p>Returns whether a given <code class="inline">key</code> exists in the given <code class="inline">keywords</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#intersect/3" data-no-tooltip="" translate="no">intersect(keyword1, keyword2, fun \\ fn _key, _v1, v2 -&gt; v2 end)</a>

      </div>

        <div class="summary-synopsis"><p>Intersects two keyword lists, returning a keyword with the common keys.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#keys/1" data-no-tooltip="" translate="no">keys(keywords)</a>

      </div>

        <div class="summary-synopsis"><p>Returns all keys from the keyword list.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#keyword?/1" data-no-tooltip="" translate="no">keyword?(term)</a>

      </div>

        <div class="summary-synopsis"><p>Returns <code class="inline">true</code> if <code class="inline">term</code> is a keyword list, otherwise <code class="inline">false</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#merge/2" data-no-tooltip="" translate="no">merge(keywords1, keywords2)</a>

      </div>

        <div class="summary-synopsis"><p>Merges two keyword lists into one.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#merge/3" data-no-tooltip="" translate="no">merge(keywords1, keywords2, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Merges two keyword lists into one.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#new/0" data-no-tooltip="" translate="no">new()</a>

      </div>

        <div class="summary-synopsis"><p>Returns an empty keyword list, i.e. an empty list.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#new/1" data-no-tooltip="" translate="no">new(pairs)</a>

      </div>

        <div class="summary-synopsis"><p>Creates a keyword list from an enumerable.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#new/2" data-no-tooltip="" translate="no">new(pairs, transform)</a>

      </div>

        <div class="summary-synopsis"><p>Creates a keyword list from an enumerable via the transformation function.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#pop/3" data-no-tooltip="" translate="no">pop(keywords, key, default \\ nil)</a>

      </div>

        <div class="summary-synopsis"><p>Returns the first value for <code class="inline">key</code> and removes all associated entries in the keyword list.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#pop!/2" data-no-tooltip="" translate="no">pop!(keywords, key)</a>

      </div>

        <div class="summary-synopsis"><p>Returns the first value for <code class="inline">key</code> and removes all associated entries in the keyword list,
raising if <code class="inline">key</code> is not present.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#pop_first/3" data-no-tooltip="" translate="no">pop_first(keywords, key, default \\ nil)</a>

      </div>

        <div class="summary-synopsis"><p>Returns and removes the first value associated with <code class="inline">key</code> in the keyword list.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#pop_lazy/3" data-no-tooltip="" translate="no">pop_lazy(keywords, key, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Lazily returns and removes all values associated with <code class="inline">key</code> in the keyword list.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#pop_values/2" data-no-tooltip="" translate="no">pop_values(keywords, key)</a>

      </div>

        <div class="summary-synopsis"><p>Returns all values for <code class="inline">key</code> and removes all associated entries in the keyword list.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#put/3" data-no-tooltip="" translate="no">put(keywords, key, value)</a>

      </div>

        <div class="summary-synopsis"><p>Puts the given <code class="inline">value</code> under the specified <code class="inline">key</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#put_new/3" data-no-tooltip="" translate="no">put_new(keywords, key, value)</a>

      </div>

        <div class="summary-synopsis"><p>Puts the given <code class="inline">value</code> under <code class="inline">key</code>, unless the entry <code class="inline">key</code> already exists.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#put_new_lazy/3" data-no-tooltip="" translate="no">put_new_lazy(keywords, key, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Evaluates <code class="inline">fun</code> and puts the result under <code class="inline">key</code>
in keyword list unless <code class="inline">key</code> is already present.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#reject/2" data-no-tooltip="" translate="no">reject(keywords, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Returns a keyword list excluding the entries from <code class="inline">keywords</code>
for which the function <code class="inline">fun</code> returns a truthy value.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#replace/3" data-no-tooltip="" translate="no">replace(keywords, key, value)</a>

      </div>

        <div class="summary-synopsis"><p>Puts a value under <code class="inline">key</code> only if the <code class="inline">key</code> already exists in <code class="inline">keywords</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#replace!/3" data-no-tooltip="" translate="no">replace!(keywords, key, value)</a>

      </div>

        <div class="summary-synopsis"><p>Puts a value under <code class="inline">key</code> only if the <code class="inline">key</code> already exists in <code class="inline">keywords</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#replace_lazy/3" data-no-tooltip="" translate="no">replace_lazy(keywords, key, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Replaces the value under <code class="inline">key</code> using the given function only if
<code class="inline">key</code> already exists in <code class="inline">keywords</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#split/2" data-no-tooltip="" translate="no">split(keywords, keys)</a>

      </div>

        <div class="summary-synopsis"><p>Takes all entries corresponding to the given <code class="inline">keys</code> and extracts them into a
separate keyword list.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#split_with/2" data-no-tooltip="" translate="no">split_with(keywords, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Splits the <code class="inline">keywords</code> into two keyword lists according to the given function
<code class="inline">fun</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#take/2" data-no-tooltip="" translate="no">take(keywords, keys)</a>

      </div>

        <div class="summary-synopsis"><p>Takes all entries corresponding to the given <code class="inline">keys</code> and returns them as a new
keyword list.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_list/1" data-no-tooltip="" translate="no">to_list(keywords)</a>

      </div>

        <div class="summary-synopsis"><p>Returns the keyword list itself.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#update/4" data-no-tooltip="" translate="no">update(keywords, key, default, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Updates the value under <code class="inline">key</code> in <code class="inline">keywords</code> using the given function.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#update!/3" data-no-tooltip="" translate="no">update!(keywords, key, fun)</a>

      </div>

        <div class="summary-synopsis"><p>Updates the value under <code class="inline">key</code> using the given function.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#validate/2" data-no-tooltip="" translate="no">validate(keyword, values)</a>

      </div>

        <div class="summary-synopsis"><p>Ensures the given <code class="inline">keyword</code> has only the keys given in <code class="inline">values</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#validate!/2" data-no-tooltip="" translate="no">validate!(keyword, values)</a>

      </div>

        <div class="summary-synopsis"><p>Similar to <a><code class="inline">validate/2</code></a> but returns the keyword or raises an error.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#values/1" data-no-tooltip="" translate="no">values(keywords)</a>

      </div>

        <div class="summary-synopsis"><p>Returns all values from the keyword list.</p></div>

    </div>

</div>

      </section>


      <section id="types" class="details-list">
        <h1 class="section-heading">Types</h1>

        <div class="types-list">
<section class="detail" id="t:default/0">

  <div class="detail-header">
    <a href="#t:default/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">default()</h1>

        <span class="note">(since 1.17.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L106" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> default() :: <a href="typespecs.xhtml#basic-types">any</a>()</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:key/0">

  <div class="detail-header">
    <a href="#t:key/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">key()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L102" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> key() :: <a href="typespecs.xhtml#basic-types">atom</a>()</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:t/0">

  <div class="detail-header">
    <a href="#t:t/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">t()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L108" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> t() :: [{<a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>()}]</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:t/1">

  <div class="detail-header">
    <a href="#t:t/1" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">t(value)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L109" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> t(value) :: [{<a href="#t:key/0">key</a>(), value}]</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:value/0">

  <div class="detail-header">
    <a href="#t:value/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">value()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L103" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> value() :: <a href="typespecs.xhtml#basic-types">any</a>()</pre>

      </div>


  </section>
</section>

        </div>
      </section>

      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>

        <div class="functions-list">
<section class="detail" id="delete/2">

  <div class="detail-header">
    <a href="#delete/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">delete(keywords, key)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L719" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> delete(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Deletes the entries in the keyword list under a specific <code class="inline">key</code>.</p><p>If the <code class="inline">key</code> does not exist, it returns the keyword list unchanged.
Use <a href="#delete_first/2"><code class="inline">delete_first/2</code></a> to delete just the first entry in case of
duplicate keys.</p><h2 id="delete/2-examples" class="section-heading"><a href="#delete/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">delete</samp><samp class="p" data-group-id="0110429360-1">(</samp><samp class="p" data-group-id="0110429360-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0110429360-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="0110429360-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0110429360-3">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0110429360-3">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">delete</samp><samp class="p" data-group-id="0110429360-4">(</samp><samp class="p" data-group-id="0110429360-5">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="0110429360-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="0110429360-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0110429360-6">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0110429360-6">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">delete</samp><samp class="p" data-group-id="0110429360-7">(</samp><samp class="p" data-group-id="0110429360-8">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0110429360-8">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="0110429360-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0110429360-9">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0110429360-9">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="delete_first/2">

  <div class="detail-header">
    <a href="#delete_first/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">delete_first(keywords, key)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L744" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> delete_first(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Deletes the first entry in the keyword list under a specific <code class="inline">key</code>.</p><p>If the <code class="inline">key</code> does not exist, it returns the keyword list unchanged.</p><h2 id="delete_first/2-examples" class="section-heading"><a href="#delete_first/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">delete_first</samp><samp class="p" data-group-id="4249545114-1">(</samp><samp class="p" data-group-id="4249545114-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="4249545114-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="4249545114-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4249545114-3">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="4249545114-3">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">delete_first</samp><samp class="p" data-group-id="4249545114-4">(</samp><samp class="p" data-group-id="4249545114-5">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4249545114-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="4249545114-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4249545114-6">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4249545114-6">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="drop/2">

  <div class="detail-header">
    <a href="#drop/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">drop(keywords, keys)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1299" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> drop(<a href="#t:t/0">t</a>(), [<a href="#t:key/0">key</a>()]) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Drops the given <code class="inline">keys</code> from the keyword list.</p><p>Removes duplicate keys from the new keyword list.</p><h2 id="drop/2-examples" class="section-heading"><a href="#drop/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">drop</samp><samp class="p" data-group-id="5527851651-1">(</samp><samp class="p" data-group-id="5527851651-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="5527851651-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5527851651-3">[</samp><samp class="ss">:a</samp><samp class="p" data-group-id="5527851651-3">]</samp><samp class="p" data-group-id="5527851651-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5527851651-4">[</samp><samp class="p" data-group-id="5527851651-4">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">drop</samp><samp class="p" data-group-id="5527851651-5">(</samp><samp class="p" data-group-id="5527851651-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="5527851651-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5527851651-7">[</samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:d</samp><samp class="p" data-group-id="5527851651-7">]</samp><samp class="p" data-group-id="5527851651-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5527851651-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="5527851651-8">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">drop</samp><samp class="p" data-group-id="5527851651-9">(</samp><samp class="p" data-group-id="5527851651-10">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p" data-group-id="5527851651-10">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5527851651-11">[</samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:d</samp><samp class="p" data-group-id="5527851651-11">]</samp><samp class="p" data-group-id="5527851651-9">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5527851651-12">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p" data-group-id="5527851651-12">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="equal?/2">

  <div class="detail-header">
    <a href="#equal?/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">equal?(left, right)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L959" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> equal?(<a href="#t:t/0">t</a>(), <a href="#t:t/0">t</a>()) :: <a href="typespecs.xhtml#built-in-types">boolean</a>()</pre>

      </div>

<p>Checks if two keywords are equal.</p><p>Considers two keywords to be equal if they contain
the same keys and those keys contain the same values.</p><h2 id="equal?/2-examples" class="section-heading"><a href="#equal?/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">equal?</samp><samp class="p" data-group-id="9423227667-1">(</samp><samp class="p" data-group-id="9423227667-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="9423227667-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="9423227667-3">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="9423227667-3">]</samp><samp class="p" data-group-id="9423227667-1">)</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">equal?</samp><samp class="p" data-group-id="9423227667-4">(</samp><samp class="p" data-group-id="9423227667-5">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="9423227667-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="9423227667-6">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="9423227667-6">]</samp><samp class="p" data-group-id="9423227667-4">)</samp><samp class="w">
</samp><samp class="no">false</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">equal?</samp><samp class="p" data-group-id="9423227667-7">(</samp><samp class="p" data-group-id="9423227667-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="9423227667-8">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="9423227667-9">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="9423227667-9">]</samp><samp class="p" data-group-id="9423227667-7">)</samp><samp class="w">
</samp><samp class="no">true</samp></code></pre><p>Comparison between values is done with <code class="inline">===/3</code>,
which means integers are not equivalent to floats:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">equal?</samp><samp class="p" data-group-id="0476808568-1">(</samp><samp class="p" data-group-id="0476808568-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mf">1.0</samp><samp class="p" data-group-id="0476808568-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="0476808568-3">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="0476808568-3">]</samp><samp class="p" data-group-id="0476808568-1">)</samp><samp class="w">
</samp><samp class="no">false</samp></code></pre>
  </section>
</section>
<section class="detail" id="fetch/2">

  <div class="detail-header">
    <a href="#fetch/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">fetch(keywords, key)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L578" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> fetch(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>()) :: {:ok, <a href="#t:value/0">value</a>()} | :error</pre>

      </div>

<p>Fetches the value for a specific <code class="inline">key</code> and returns it in a tuple.</p><p>If the <code class="inline">key</code> does not exist, it returns <code class="inline">:error</code>.</p><h2 id="fetch/2-examples" class="section-heading"><a href="#fetch/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">fetch</samp><samp class="p" data-group-id="4640180375-1">(</samp><samp class="p" data-group-id="4640180375-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="4640180375-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="4640180375-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4640180375-3">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="4640180375-3">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">fetch</samp><samp class="p" data-group-id="4640180375-4">(</samp><samp class="p" data-group-id="4640180375-5">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="4640180375-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="4640180375-4">)</samp><samp class="w">
</samp><samp class="ss">:error</samp></code></pre>
  </section>
</section>
<section class="detail" id="fetch!/2">

  <div class="detail-header">
    <a href="#fetch!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">fetch!(keywords, key)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L599" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> fetch!(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>()) :: <a href="#t:value/0">value</a>()</pre>

      </div>

<p>Fetches the value for specific <code class="inline">key</code>.</p><p>If the <code class="inline">key</code> does not exist, it raises a <a href="KeyError.xhtml"><code class="inline">KeyError</code></a>.</p><h2 id="fetch!/2-examples" class="section-heading"><a href="#fetch!/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">fetch!</samp><samp class="p" data-group-id="2757195117-1">(</samp><samp class="p" data-group-id="2757195117-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="2757195117-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="2757195117-1">)</samp><samp class="w">
</samp><samp class="mi">1</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">fetch!</samp><samp class="p" data-group-id="2757195117-3">(</samp><samp class="p" data-group-id="2757195117-4">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="2757195117-4">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="2757195117-3">)</samp><samp class="w">
</samp><samp class="gt">** (KeyError) key :b not found in: [a: 1]</samp></code></pre>
  </section>
</section>
<section class="detail" id="filter/2">

  <div class="detail-header">
    <a href="#filter/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">filter(keywords, fun)</h1>

        <span class="note">(since 1.13.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1484" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> filter(<a href="#t:t/0">t</a>(), ({<a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>()} -&gt; <a href="typespecs.xhtml#built-in-types">as_boolean</a>(<a href="typespecs.xhtml#built-in-types">term</a>()))) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Returns a keyword list containing only the entries from <code class="inline">keywords</code>
for which the function <code class="inline">fun</code> returns a truthy value.</p><p>See also <a href="#reject/2"><code class="inline">reject/2</code></a> which discards all entries where the function
returns a truthy value.</p><h2 id="filter/2-examples" class="section-heading"><a href="#filter/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">filter</samp><samp class="p" data-group-id="1959357964-1">(</samp><samp class="p" data-group-id="1959357964-2">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">three</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="1959357964-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="1959357964-3">fn</samp><samp class="w"> </samp><samp class="p" data-group-id="1959357964-4">{</samp><samp class="c">_key</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">val</samp><samp class="p" data-group-id="1959357964-4">}</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">rem</samp><samp class="p" data-group-id="1959357964-5">(</samp><samp class="n">val</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1959357964-5">)</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="w"> </samp><samp class="k" data-group-id="1959357964-3">end</samp><samp class="p" data-group-id="1959357964-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1959357964-6">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">three</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="1959357964-6">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="from_keys/2">

  <div class="detail-header">
    <a href="#from_keys/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">from_keys(keys, value)</h1>

        <span class="note">(since 1.14.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L124" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> from_keys([<a href="#t:key/0">key</a>()], <a href="#t:value/0">value</a>()) :: <a href="#t:t/1">t</a>(<a href="#t:value/0">value</a>())</pre>

      </div>

<p>Builds a keyword from the given <code class="inline">keys</code> and the fixed <code class="inline">value</code>.</p><h2 id="from_keys/2-examples" class="section-heading"><a href="#from_keys/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">from_keys</samp><samp class="p" data-group-id="0441694417-1">(</samp><samp class="p" data-group-id="0441694417-2">[</samp><samp class="ss">:foo</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:baz</samp><samp class="p" data-group-id="0441694417-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:atom</samp><samp class="p" data-group-id="0441694417-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0441694417-3">[</samp><samp class="ss">foo</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:atom</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">bar</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:atom</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">baz</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:atom</samp><samp class="p" data-group-id="0441694417-3">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">from_keys</samp><samp class="p" data-group-id="0441694417-4">(</samp><samp class="p" data-group-id="0441694417-5">[</samp><samp class="p" data-group-id="0441694417-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:atom</samp><samp class="p" data-group-id="0441694417-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0441694417-6">[</samp><samp class="p" data-group-id="0441694417-6">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="get/3">

    <span id="get/2"></span>

  <div class="detail-header">
    <a href="#get/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">get(keywords, key, default \\ nil)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L395" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> get(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), <a href="#t:default/0">default</a>()) :: <a href="#t:value/0">value</a>() | <a href="#t:default/0">default</a>()</pre>

      </div>

<p>Gets the value under the given <code class="inline">key</code>.</p><p>Returns the default value if <code class="inline">key</code> does not exist
(<code class="inline">nil</code> if no default value is provided).</p><p>If duplicate entries exist, it returns the first one.
Use <a href="#get_values/2"><code class="inline">get_values/2</code></a> to retrieve all entries.</p><h2 id="get/3-examples" class="section-heading"><a href="#get/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get</samp><samp class="p" data-group-id="0134354453-1">(</samp><samp class="p" data-group-id="0134354453-2">[</samp><samp class="p" data-group-id="0134354453-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="0134354453-1">)</samp><samp class="w">
</samp><samp class="no">nil</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get</samp><samp class="p" data-group-id="0134354453-3">(</samp><samp class="p" data-group-id="0134354453-4">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="0134354453-4">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="0134354453-3">)</samp><samp class="w">
</samp><samp class="mi">1</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get</samp><samp class="p" data-group-id="0134354453-5">(</samp><samp class="p" data-group-id="0134354453-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="0134354453-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="0134354453-5">)</samp><samp class="w">
</samp><samp class="no">nil</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get</samp><samp class="p" data-group-id="0134354453-7">(</samp><samp class="p" data-group-id="0134354453-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="0134354453-8">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="0134354453-7">)</samp><samp class="w">
</samp><samp class="mi">3</samp></code></pre><p>With duplicate keys:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get</samp><samp class="p" data-group-id="4628477839-1">(</samp><samp class="p" data-group-id="4628477839-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4628477839-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="4628477839-1">)</samp><samp class="w">
</samp><samp class="mi">1</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get</samp><samp class="p" data-group-id="4628477839-3">(</samp><samp class="p" data-group-id="4628477839-4">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4628477839-4">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="4628477839-3">)</samp><samp class="w">
</samp><samp class="mi">3</samp></code></pre>
  </section>
</section>
<section class="detail" id="get_and_update/3">

  <div class="detail-header">
    <a href="#get_and_update/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">get_and_update(keywords, key, fun)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L475" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> get_and_update(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), (<a href="#t:value/0">value</a>() | nil -&gt;
                              {current_value, new_value :: <a href="#t:value/0">value</a>()} | :pop)) ::
  {current_value, new_keywords :: <a href="#t:t/0">t</a>()}
when current_value: <a href="#t:value/0">value</a>()</pre>

      </div>

<p>Gets the value from <code class="inline">key</code> and updates it, all in one pass.</p><p>The <code class="inline">fun</code> argument receives the value of <code class="inline">key</code> (or <code class="inline">nil</code> if <code class="inline">key</code>
is not present) and must return a two-element tuple: the current value
(the retrieved value, which can be operated on before being returned)
and the new value to be stored under <code class="inline">key</code>. The <code class="inline">fun</code> may also
return <code class="inline">:pop</code>, implying the current value shall be removed from the
keyword list and returned.</p><p>Returns a tuple that contains the current value returned by
<code class="inline">fun</code> and a new keyword list with the updated value under <code class="inline">key</code>.</p><h2 id="get_and_update/3-examples" class="section-heading"><a href="#get_and_update/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_and_update</samp><samp class="p" data-group-id="1238314897-1">(</samp><samp class="p" data-group-id="1238314897-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1238314897-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="1238314897-3">fn</samp><samp class="w"> </samp><samp class="n">current_value</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="p" data-group-id="1238314897-4">{</samp><samp class="n">current_value</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;new value!&quot;</samp><samp class="p" data-group-id="1238314897-4">}</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="1238314897-3">end</samp><samp class="p" data-group-id="1238314897-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1238314897-5">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1238314897-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;new value!&quot;</samp><samp class="p" data-group-id="1238314897-6">]</samp><samp class="p" data-group-id="1238314897-5">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_and_update</samp><samp class="p" data-group-id="1238314897-7">(</samp><samp class="p" data-group-id="1238314897-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1238314897-8">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="1238314897-9">fn</samp><samp class="w"> </samp><samp class="n">current_value</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="p" data-group-id="1238314897-10">{</samp><samp class="n">current_value</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;new value!&quot;</samp><samp class="p" data-group-id="1238314897-10">}</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="1238314897-9">end</samp><samp class="p" data-group-id="1238314897-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1238314897-11">{</samp><samp class="no">nil</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1238314897-12">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;new value!&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1238314897-12">]</samp><samp class="p" data-group-id="1238314897-11">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_and_update</samp><samp class="p" data-group-id="1238314897-13">(</samp><samp class="p" data-group-id="1238314897-14">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1238314897-14">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="1238314897-15">fn</samp><samp class="w"> </samp><samp class="n">number</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="p" data-group-id="1238314897-16">{</samp><samp class="mi">2</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="n">number</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="n">number</samp><samp class="p" data-group-id="1238314897-16">}</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="1238314897-15">end</samp><samp class="p" data-group-id="1238314897-13">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1238314897-17">{</samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1238314897-18">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">6</samp><samp class="p" data-group-id="1238314897-18">]</samp><samp class="p" data-group-id="1238314897-17">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_and_update</samp><samp class="p" data-group-id="1238314897-19">(</samp><samp class="p" data-group-id="1238314897-20">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1238314897-20">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="1238314897-21">fn</samp><samp class="w"> </samp><samp class="bp">_</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="ss">:pop</samp><samp class="w"> </samp><samp class="k" data-group-id="1238314897-21">end</samp><samp class="p" data-group-id="1238314897-19">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1238314897-22">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1238314897-23">[</samp><samp class="p" data-group-id="1238314897-23">]</samp><samp class="p" data-group-id="1238314897-22">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_and_update</samp><samp class="p" data-group-id="1238314897-24">(</samp><samp class="p" data-group-id="1238314897-25">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1238314897-25">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="1238314897-26">fn</samp><samp class="w"> </samp><samp class="bp">_</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="ss">:pop</samp><samp class="w"> </samp><samp class="k" data-group-id="1238314897-26">end</samp><samp class="p" data-group-id="1238314897-24">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1238314897-27">{</samp><samp class="no">nil</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1238314897-28">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1238314897-28">]</samp><samp class="p" data-group-id="1238314897-27">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="get_and_update!/3">

  <div class="detail-header">
    <a href="#get_and_update!/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">get_and_update!(keywords, key, fun)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L539" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> get_and_update!(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), (<a href="#t:value/0">value</a>() -&gt;
                               {current_value, new_value :: <a href="#t:value/0">value</a>()} | :pop)) ::
  {current_value, new_keywords :: <a href="#t:t/0">t</a>()}
when current_value: <a href="#t:value/0">value</a>()</pre>

      </div>

<p>Gets the value under <code class="inline">key</code> and updates it. Raises if there is no <code class="inline">key</code>.</p><p>The <code class="inline">fun</code> argument receives the value under <code class="inline">key</code> and must return a
two-element tuple: the current value (the retrieved value, which can be
operated on before being returned) and the new value to be stored under
<code class="inline">key</code>.</p><p>Returns a tuple that contains the current value returned by
<code class="inline">fun</code> and a new keyword list with the updated value under <code class="inline">key</code>.</p><h2 id="get_and_update!/3-examples" class="section-heading"><a href="#get_and_update!/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_and_update!</samp><samp class="p" data-group-id="7732000291-1">(</samp><samp class="p" data-group-id="7732000291-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7732000291-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="7732000291-3">fn</samp><samp class="w"> </samp><samp class="n">current_value</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="p" data-group-id="7732000291-4">{</samp><samp class="n">current_value</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;new value!&quot;</samp><samp class="p" data-group-id="7732000291-4">}</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="7732000291-3">end</samp><samp class="p" data-group-id="7732000291-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7732000291-5">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7732000291-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;new value!&quot;</samp><samp class="p" data-group-id="7732000291-6">]</samp><samp class="p" data-group-id="7732000291-5">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_and_update!</samp><samp class="p" data-group-id="7732000291-7">(</samp><samp class="p" data-group-id="7732000291-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7732000291-8">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="7732000291-9">fn</samp><samp class="w"> </samp><samp class="n">current_value</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="p" data-group-id="7732000291-10">{</samp><samp class="n">current_value</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;new value!&quot;</samp><samp class="p" data-group-id="7732000291-10">}</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="7732000291-9">end</samp><samp class="p" data-group-id="7732000291-7">)</samp><samp class="w">
</samp><samp class="gt">** (KeyError) key :b not found in: [a: 1]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_and_update!</samp><samp class="p" data-group-id="7732000291-11">(</samp><samp class="p" data-group-id="7732000291-12">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7732000291-12">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="7732000291-13">fn</samp><samp class="w"> </samp><samp class="bp">_</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="ss">:pop</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="7732000291-13">end</samp><samp class="p" data-group-id="7732000291-11">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7732000291-14">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7732000291-15">[</samp><samp class="p" data-group-id="7732000291-15">]</samp><samp class="p" data-group-id="7732000291-14">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="get_lazy/3">

  <div class="detail-header">
    <a href="#get_lazy/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">get_lazy(keywords, key, fun)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L427" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> get_lazy(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), (-&gt; <a href="#t:value/0">value</a>())) :: <a href="#t:value/0">value</a>()</pre>

      </div>

<p>Gets the value under the given <code class="inline">key</code>.</p><p>If <code class="inline">key</code> does not exist, lazily evaluates <code class="inline">fun</code> and returns its result.</p><p>This is useful if the default value is very expensive to calculate or
generally difficult to set up and tear down again.</p><p>If duplicate entries exist, it returns the first one.
Use <a href="#get_values/2"><code class="inline">get_values/2</code></a> to retrieve all entries.</p><h2 id="get_lazy/3-examples" class="section-heading"><a href="#get_lazy/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">keyword</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="3943629938-1">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="3943629938-1">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">fun</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="k" data-group-id="3943629938-2">fn</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="c1"># some expensive operation here</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="mi">13</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="3943629938-2">end</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_lazy</samp><samp class="p" data-group-id="3943629938-3">(</samp><samp class="n">keyword</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">fun</samp><samp class="p" data-group-id="3943629938-3">)</samp><samp class="w">
</samp><samp class="mi">1</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_lazy</samp><samp class="p" data-group-id="3943629938-4">(</samp><samp class="n">keyword</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">fun</samp><samp class="p" data-group-id="3943629938-4">)</samp><samp class="w">
</samp><samp class="mi">13</samp></code></pre>
  </section>
</section>
<section class="detail" id="get_values/2">

  <div class="detail-header">
    <a href="#get_values/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">get_values(keywords, key)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L620" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> get_values(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>()) :: [<a href="#t:value/0">value</a>()]</pre>

      </div>

<p>Gets all values under a specific <code class="inline">key</code>.</p><h2 id="get_values/2-examples" class="section-heading"><a href="#get_values/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_values</samp><samp class="p" data-group-id="6888207156-1">(</samp><samp class="p" data-group-id="6888207156-2">[</samp><samp class="p" data-group-id="6888207156-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="6888207156-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6888207156-3">[</samp><samp class="p" data-group-id="6888207156-3">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_values</samp><samp class="p" data-group-id="6888207156-4">(</samp><samp class="p" data-group-id="6888207156-5">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="6888207156-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="6888207156-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6888207156-6">[</samp><samp class="mi">1</samp><samp class="p" data-group-id="6888207156-6">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">get_values</samp><samp class="p" data-group-id="6888207156-7">(</samp><samp class="p" data-group-id="6888207156-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="6888207156-8">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="6888207156-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6888207156-9">[</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="6888207156-9">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="has_key?/2">

  <div class="detail-header">
    <a href="#has_key?/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">has_key?(keywords, key)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1115" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> has_key?(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>()) :: <a href="typespecs.xhtml#built-in-types">boolean</a>()</pre>

      </div>

<p>Returns whether a given <code class="inline">key</code> exists in the given <code class="inline">keywords</code>.</p><h2 id="has_key?/2-examples" class="section-heading"><a href="#has_key?/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">has_key?</samp><samp class="p" data-group-id="2819561219-1">(</samp><samp class="p" data-group-id="2819561219-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="2819561219-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="2819561219-1">)</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">has_key?</samp><samp class="p" data-group-id="2819561219-3">(</samp><samp class="p" data-group-id="2819561219-4">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="2819561219-4">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="2819561219-3">)</samp><samp class="w">
</samp><samp class="no">false</samp></code></pre>
  </section>
</section>
<section class="detail" id="intersect/3">

    <span id="intersect/2"></span>

  <div class="detail-header">
    <a href="#intersect/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">intersect(keyword1, keyword2, fun \\ fn _key, _v1, v2 -&gt; v2 end)</h1>

        <span class="note">(since 1.17.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L982" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> intersect(<a href="typespecs.xhtml#built-in-types">keyword</a>(), <a href="typespecs.xhtml#built-in-types">keyword</a>(), (<a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>(), <a href="#t:value/0">value</a>() -&gt; <a href="#t:value/0">value</a>())) ::
  <a href="typespecs.xhtml#built-in-types">keyword</a>()</pre>

      </div>

<p>Intersects two keyword lists, returning a keyword with the common keys.</p><p>By default, it returns the values of the intersected keys in <code class="inline">keyword2</code>.
The keys are returned in the order found in <code class="inline">keyword1</code>.</p><h2 id="intersect/3-examples" class="section-heading"><a href="#intersect/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">intersect</samp><samp class="p" data-group-id="8178057661-1">(</samp><samp class="p" data-group-id="8178057661-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="8178057661-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="8178057661-3">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;b&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;c&quot;</samp><samp class="p" data-group-id="8178057661-3">]</samp><samp class="p" data-group-id="8178057661-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8178057661-4">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;b&quot;</samp><samp class="p" data-group-id="8178057661-4">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">intersect</samp><samp class="p" data-group-id="8178057661-5">(</samp><samp class="p" data-group-id="8178057661-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="8178057661-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="8178057661-7">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="8178057661-7">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="8178057661-8">fn</samp><samp class="w"> </samp><samp class="c">_k</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v2</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="n">v1</samp><samp class="w"> </samp><samp class="o">+</samp><samp class="w"> </samp><samp class="n">v2</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="8178057661-8">end</samp><samp class="p" data-group-id="8178057661-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8178057661-9">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="8178057661-9">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="keys/1">

  <div class="detail-header">
    <a href="#keys/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">keys(keywords)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L646" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> keys(<a href="#t:t/0">t</a>()) :: [<a href="#t:key/0">key</a>()]</pre>

      </div>

<p>Returns all keys from the keyword list.</p><p>Keeps duplicate keys in the resulting list of keys.</p><h2 id="keys/1-examples" class="section-heading"><a href="#keys/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">keys</samp><samp class="p" data-group-id="5787544666-1">(</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="5787544666-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5787544666-2">[</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="5787544666-2">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">keys</samp><samp class="p" data-group-id="5787544666-3">(</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="5787544666-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5787544666-4">[</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="5787544666-4">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">keys</samp><samp class="p" data-group-id="5787544666-5">(</samp><samp class="p" data-group-id="5787544666-6">[</samp><samp class="p" data-group-id="5787544666-7">{</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="5787544666-7">}</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5787544666-8">{</samp><samp class="s">&quot;b&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="5787544666-8">}</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5787544666-9">{</samp><samp class="ss">:c</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="5787544666-9">}</samp><samp class="p" data-group-id="5787544666-6">]</samp><samp class="p" data-group-id="5787544666-5">)</samp><samp class="w">
</samp><samp class="gt">** (ArgumentError) expected a keyword list, but an entry in the list is not a two-element tuple with an atom as its first element, got: {&quot;b&quot;, 2}</samp></code></pre>
  </section>
</section>
<section class="detail" id="keyword?/1">

  <div class="detail-header">
    <a href="#keyword?/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">keyword?(term)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L150" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> keyword?(<a href="typespecs.xhtml#built-in-types">term</a>()) :: <a href="typespecs.xhtml#built-in-types">boolean</a>()</pre>

      </div>

<p>Returns <code class="inline">true</code> if <code class="inline">term</code> is a keyword list, otherwise <code class="inline">false</code>.</p><p>When <code class="inline">term</code> is a list it is traversed to the end.</p><h2 id="keyword?/1-examples" class="section-heading"><a href="#keyword?/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">keyword?</samp><samp class="p" data-group-id="9172317788-1">(</samp><samp class="p" data-group-id="9172317788-2">[</samp><samp class="p" data-group-id="9172317788-2">]</samp><samp class="p" data-group-id="9172317788-1">)</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">keyword?</samp><samp class="p" data-group-id="9172317788-3">(</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="9172317788-3">)</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">keyword?</samp><samp class="p" data-group-id="9172317788-4">(</samp><samp class="p" data-group-id="9172317788-5">[</samp><samp class="p" data-group-id="9172317788-6">{</samp><samp class="nc">Foo</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="9172317788-6">}</samp><samp class="p" data-group-id="9172317788-5">]</samp><samp class="p" data-group-id="9172317788-4">)</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">keyword?</samp><samp class="p" data-group-id="9172317788-7">(</samp><samp class="p" data-group-id="9172317788-8">[</samp><samp class="p" data-group-id="9172317788-9">{</samp><samp class="p" data-group-id="9172317788-9">}</samp><samp class="p" data-group-id="9172317788-8">]</samp><samp class="p" data-group-id="9172317788-7">)</samp><samp class="w">
</samp><samp class="no">false</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">keyword?</samp><samp class="p" data-group-id="9172317788-10">(</samp><samp class="p" data-group-id="9172317788-11">[</samp><samp class="ss">:key</samp><samp class="p" data-group-id="9172317788-11">]</samp><samp class="p" data-group-id="9172317788-10">)</samp><samp class="w">
</samp><samp class="no">false</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">keyword?</samp><samp class="p" data-group-id="9172317788-12">(</samp><samp class="p" data-group-id="9172317788-13">%{</samp><samp class="p" data-group-id="9172317788-13">}</samp><samp class="p" data-group-id="9172317788-12">)</samp><samp class="w">
</samp><samp class="no">false</samp></code></pre>
  </section>
</section>
<section class="detail" id="merge/2">

  <div class="detail-header">
    <a href="#merge/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">merge(keywords1, keywords2)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1014" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> merge(<a href="#t:t/0">t</a>(), <a href="#t:t/0">t</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Merges two keyword lists into one.</p><p>Adds all keys, including duplicate keys, given in <code class="inline">keywords2</code>
to <code class="inline">keywords1</code>, overriding any existing ones.</p><p>There are no guarantees about the order of the keys in the returned keyword.</p><h2 id="merge/2-examples" class="section-heading"><a href="#merge/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">merge</samp><samp class="p" data-group-id="0940686323-1">(</samp><samp class="p" data-group-id="0940686323-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0940686323-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="0940686323-3">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">d</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="0940686323-3">]</samp><samp class="p" data-group-id="0940686323-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0940686323-4">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">d</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="0940686323-4">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">merge</samp><samp class="p" data-group-id="0940686323-5">(</samp><samp class="p" data-group-id="0940686323-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0940686323-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="0940686323-7">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">d</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p" data-group-id="0940686323-7">]</samp><samp class="p" data-group-id="0940686323-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0940686323-8">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">d</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p" data-group-id="0940686323-8">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">merge</samp><samp class="p" data-group-id="0940686323-9">(</samp><samp class="p" data-group-id="0940686323-10">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="0940686323-10">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="0940686323-11">[</samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="0940686323-11">]</samp><samp class="p" data-group-id="0940686323-9">)</samp><samp class="w">
</samp><samp class="gt">** (ArgumentError) expected a keyword list as the second argument, got: [2, 3]</samp></code></pre>
  </section>
</section>
<section class="detail" id="merge/3">

  <div class="detail-header">
    <a href="#merge/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">merge(keywords1, keywords2, fun)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1072" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> merge(<a href="#t:t/0">t</a>(), <a href="#t:t/0">t</a>(), (<a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>(), <a href="#t:value/0">value</a>() -&gt; <a href="#t:value/0">value</a>())) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Merges two keyword lists into one.</p><p>Adds all keys, including duplicate keys, given in <code class="inline">keywords2</code>
to <code class="inline">keywords1</code>. Invokes the given function to solve conflicts.</p><p>If <code class="inline">keywords2</code> has duplicate keys, it invokes the given function
for each matching pair in <code class="inline">keywords1</code>.</p><p>There are no guarantees about the order of the keys in the returned keyword.</p><h2 id="merge/3-examples" class="section-heading"><a href="#merge/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">merge</samp><samp class="p" data-group-id="7145066884-1">(</samp><samp class="p" data-group-id="7145066884-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7145066884-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7145066884-3">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">d</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="7145066884-3">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="7145066884-4">fn</samp><samp class="w"> </samp><samp class="c">_k</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v2</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="n">v1</samp><samp class="w"> </samp><samp class="o">+</samp><samp class="w"> </samp><samp class="n">v2</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="7145066884-4">end</samp><samp class="p" data-group-id="7145066884-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7145066884-5">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">d</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="7145066884-5">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">merge</samp><samp class="p" data-group-id="7145066884-6">(</samp><samp class="p" data-group-id="7145066884-7">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7145066884-7">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7145066884-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">d</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p" data-group-id="7145066884-8">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="7145066884-9">fn</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v2</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="n">v1</samp><samp class="w"> </samp><samp class="o">+</samp><samp class="w"> </samp><samp class="n">v2</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="7145066884-9">end</samp><samp class="p" data-group-id="7145066884-6">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7145066884-10">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">d</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p" data-group-id="7145066884-10">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">merge</samp><samp class="p" data-group-id="7145066884-11">(</samp><samp class="p" data-group-id="7145066884-12">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="7145066884-12">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7145066884-13">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">d</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p" data-group-id="7145066884-13">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="7145066884-14">fn</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v2</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="n">v1</samp><samp class="w"> </samp><samp class="o">+</samp><samp class="w"> </samp><samp class="n">v2</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="7145066884-14">end</samp><samp class="p" data-group-id="7145066884-11">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7145066884-15">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">d</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">8</samp><samp class="p" data-group-id="7145066884-15">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">merge</samp><samp class="p" data-group-id="7145066884-16">(</samp><samp class="p" data-group-id="7145066884-17">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7145066884-17">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7145066884-18">[</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="7145066884-18">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="7145066884-19">fn</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v2</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="n">v1</samp><samp class="w"> </samp><samp class="o">+</samp><samp class="w"> </samp><samp class="n">v2</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="7145066884-19">end</samp><samp class="p" data-group-id="7145066884-16">)</samp><samp class="w">
</samp><samp class="gt">** (ArgumentError) expected a keyword list as the second argument, got: [:a, :b]</samp></code></pre>
  </section>
</section>
<section class="detail" id="new/0">

  <div class="detail-header">
    <a href="#new/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">new()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L166" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> new() :: []</pre>

      </div>

<p>Returns an empty keyword list, i.e. an empty list.</p><h2 id="new/0-examples" class="section-heading"><a href="#new/0-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">new</samp><samp class="p" data-group-id="6912460078-1">(</samp><samp class="p" data-group-id="6912460078-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6912460078-2">[</samp><samp class="p" data-group-id="6912460078-2">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="new/1">

  <div class="detail-header">
    <a href="#new/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">new(pairs)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L185" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> new(<a href="Enumerable.xhtml#t:t/0">Enumerable.t</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Creates a keyword list from an enumerable.</p><p>Removes duplicate entries and the last one prevails.
Unlike <code class="inline">Enum.into(enumerable, [])</code>, <code class="inline">Keyword.new(enumerable)</code>
guarantees the keys are unique.</p><h2 id="new/1-examples" class="section-heading"><a href="#new/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">new</samp><samp class="p" data-group-id="2045910181-1">(</samp><samp class="p" data-group-id="2045910181-2">[</samp><samp class="p" data-group-id="2045910181-3">{</samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="2045910181-3">}</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="2045910181-4">{</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="2045910181-4">}</samp><samp class="p" data-group-id="2045910181-2">]</samp><samp class="p" data-group-id="2045910181-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="2045910181-5">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="2045910181-5">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">new</samp><samp class="p" data-group-id="2045910181-6">(</samp><samp class="p" data-group-id="2045910181-7">[</samp><samp class="p" data-group-id="2045910181-8">{</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="2045910181-8">}</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="2045910181-9">{</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="2045910181-9">}</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="2045910181-10">{</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="2045910181-10">}</samp><samp class="p" data-group-id="2045910181-7">]</samp><samp class="p" data-group-id="2045910181-6">)</samp><samp class="w">
</samp><samp class="p" data-group-id="2045910181-11">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="2045910181-11">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="new/2">

  <div class="detail-header">
    <a href="#new/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">new(pairs, transform)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L203" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> new(<a href="Enumerable.xhtml#t:t/0">Enumerable.t</a>(), (<a href="typespecs.xhtml#built-in-types">term</a>() -&gt; {<a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>()})) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Creates a keyword list from an enumerable via the transformation function.</p><p>Removes duplicate entries and the last one prevails.
Unlike <code class="inline">Enum.into(enumerable, [], fun)</code>,
<code class="inline">Keyword.new(enumerable, fun)</code> guarantees the keys are unique.</p><h2 id="new/2-examples" class="section-heading"><a href="#new/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">new</samp><samp class="p" data-group-id="4566351841-1">(</samp><samp class="p" data-group-id="4566351841-2">[</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="4566351841-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="4566351841-3">fn</samp><samp class="w"> </samp><samp class="n">x</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="p" data-group-id="4566351841-4">{</samp><samp class="n">x</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">x</samp><samp class="p" data-group-id="4566351841-4">}</samp><samp class="w"> </samp><samp class="k" data-group-id="4566351841-3">end</samp><samp class="p" data-group-id="4566351841-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4566351841-5">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="4566351841-5">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="pop/3">

    <span id="pop/2"></span>

  <div class="detail-header">
    <a href="#pop/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">pop(keywords, key, default \\ nil)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1326" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> pop(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), <a href="#t:default/0">default</a>()) :: {<a href="#t:value/0">value</a>() | <a href="#t:default/0">default</a>(), <a href="#t:t/0">t</a>()}</pre>

      </div>

<p>Returns the first value for <code class="inline">key</code> and removes all associated entries in the keyword list.</p><p>It returns a tuple where the first element is the first value for <code class="inline">key</code> and the
second element is a keyword list with all entries associated with <code class="inline">key</code> removed.
If the <code class="inline">key</code> is not present in the keyword list, it returns <code class="inline">{default, keyword_list}</code>.</p><p>If you don't want to remove all the entries associated with <code class="inline">key</code> use <a href="#pop_first/3"><code class="inline">pop_first/3</code></a>
instead, which will remove only the first entry.</p><h2 id="pop/3-examples" class="section-heading"><a href="#pop/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop</samp><samp class="p" data-group-id="7850777101-1">(</samp><samp class="p" data-group-id="7850777101-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7850777101-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="7850777101-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7850777101-3">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7850777101-4">[</samp><samp class="p" data-group-id="7850777101-4">]</samp><samp class="p" data-group-id="7850777101-3">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop</samp><samp class="p" data-group-id="7850777101-5">(</samp><samp class="p" data-group-id="7850777101-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7850777101-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="7850777101-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7850777101-7">{</samp><samp class="no">nil</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7850777101-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7850777101-8">]</samp><samp class="p" data-group-id="7850777101-7">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop</samp><samp class="p" data-group-id="7850777101-9">(</samp><samp class="p" data-group-id="7850777101-10">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7850777101-10">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="7850777101-9">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7850777101-11">{</samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7850777101-12">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7850777101-12">]</samp><samp class="p" data-group-id="7850777101-11">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop</samp><samp class="p" data-group-id="7850777101-13">(</samp><samp class="p" data-group-id="7850777101-14">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7850777101-14">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="7850777101-13">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7850777101-15">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7850777101-16">[</samp><samp class="p" data-group-id="7850777101-16">]</samp><samp class="p" data-group-id="7850777101-15">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="pop!/2">

  <div class="detail-header">
    <a href="#pop!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">pop!(keywords, key)</h1>

        <span class="note">(since 1.10.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1352" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> pop!(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>()) :: {<a href="#t:value/0">value</a>(), <a href="#t:t/0">t</a>()}</pre>

      </div>

<p>Returns the first value for <code class="inline">key</code> and removes all associated entries in the keyword list,
raising if <code class="inline">key</code> is not present.</p><p>This function behaves like <a href="#pop/3"><code class="inline">pop/3</code></a>, but raises in case the <code class="inline">key</code> is not present in the
given <code class="inline">keywords</code>.</p><h2 id="pop!/2-examples" class="section-heading"><a href="#pop!/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop!</samp><samp class="p" data-group-id="4547276663-1">(</samp><samp class="p" data-group-id="4547276663-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="4547276663-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="4547276663-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4547276663-3">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4547276663-4">[</samp><samp class="p" data-group-id="4547276663-4">]</samp><samp class="p" data-group-id="4547276663-3">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop!</samp><samp class="p" data-group-id="4547276663-5">(</samp><samp class="p" data-group-id="4547276663-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4547276663-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="4547276663-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4547276663-7">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4547276663-8">[</samp><samp class="p" data-group-id="4547276663-8">]</samp><samp class="p" data-group-id="4547276663-7">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop!</samp><samp class="p" data-group-id="4547276663-9">(</samp><samp class="p" data-group-id="4547276663-10">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="4547276663-10">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="4547276663-9">)</samp><samp class="w">
</samp><samp class="gt">** (KeyError) key :b not found in: [a: 1]</samp></code></pre>
  </section>
</section>
<section class="detail" id="pop_first/3">

    <span id="pop_first/2"></span>

  <div class="detail-header">
    <a href="#pop_first/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">pop_first(keywords, key, default \\ nil)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1442" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> pop_first(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), <a href="#t:default/0">default</a>()) :: {<a href="#t:value/0">value</a>() | <a href="#t:default/0">default</a>(), <a href="#t:t/0">t</a>()}</pre>

      </div>

<p>Returns and removes the first value associated with <code class="inline">key</code> in the keyword list.</p><p>Keeps duplicate keys in the resulting keyword list.</p><h2 id="pop_first/3-examples" class="section-heading"><a href="#pop_first/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop_first</samp><samp class="p" data-group-id="5666680385-1">(</samp><samp class="p" data-group-id="5666680385-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="5666680385-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="5666680385-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5666680385-3">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5666680385-4">[</samp><samp class="p" data-group-id="5666680385-4">]</samp><samp class="p" data-group-id="5666680385-3">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop_first</samp><samp class="p" data-group-id="5666680385-5">(</samp><samp class="p" data-group-id="5666680385-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="5666680385-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="5666680385-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5666680385-7">{</samp><samp class="no">nil</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5666680385-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="5666680385-8">]</samp><samp class="p" data-group-id="5666680385-7">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop_first</samp><samp class="p" data-group-id="5666680385-9">(</samp><samp class="p" data-group-id="5666680385-10">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="5666680385-10">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="5666680385-9">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5666680385-11">{</samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5666680385-12">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="5666680385-12">]</samp><samp class="p" data-group-id="5666680385-11">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop_first</samp><samp class="p" data-group-id="5666680385-13">(</samp><samp class="p" data-group-id="5666680385-14">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="5666680385-14">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="5666680385-13">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5666680385-15">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="5666680385-16">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="5666680385-16">]</samp><samp class="p" data-group-id="5666680385-15">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="pop_lazy/3">

  <div class="detail-header">
    <a href="#pop_lazy/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">pop_lazy(keywords, key, fun)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1416" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> pop_lazy(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), (-&gt; <a href="#t:value/0">value</a>())) :: {<a href="#t:value/0">value</a>(), <a href="#t:t/0">t</a>()}</pre>

      </div>

<p>Lazily returns and removes all values associated with <code class="inline">key</code> in the keyword list.</p><p>This is useful if the default value is very expensive to calculate or
generally difficult to set up and tear down again.</p><p>Removes all duplicate keys. See <a href="#pop_first/3"><code class="inline">pop_first/3</code></a> for removing only the first entry.</p><h2 id="pop_lazy/3-examples" class="section-heading"><a href="#pop_lazy/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">keyword</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="9175852629-1">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="9175852629-1">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">fun</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="k" data-group-id="9175852629-2">fn</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="c1"># some expensive operation here</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="mi">13</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="9175852629-2">end</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop_lazy</samp><samp class="p" data-group-id="9175852629-3">(</samp><samp class="n">keyword</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">fun</samp><samp class="p" data-group-id="9175852629-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="9175852629-4">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="9175852629-5">[</samp><samp class="p" data-group-id="9175852629-5">]</samp><samp class="p" data-group-id="9175852629-4">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop_lazy</samp><samp class="p" data-group-id="9175852629-6">(</samp><samp class="n">keyword</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">fun</samp><samp class="p" data-group-id="9175852629-6">)</samp><samp class="w">
</samp><samp class="p" data-group-id="9175852629-7">{</samp><samp class="mi">13</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="9175852629-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="9175852629-8">]</samp><samp class="p" data-group-id="9175852629-7">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="pop_values/2">

  <div class="detail-header">
    <a href="#pop_values/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">pop_values(keywords, key)</h1>

        <span class="note">(since 1.10.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1381" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> pop_values(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>()) :: {[<a href="#t:value/0">value</a>()], <a href="#t:t/0">t</a>()}</pre>

      </div>

<p>Returns all values for <code class="inline">key</code> and removes all associated entries in the keyword list.</p><p>It returns a tuple where the first element is a list of values for <code class="inline">key</code> and the
second element is a keyword list with all entries associated with <code class="inline">key</code> removed.
If the <code class="inline">key</code> is not present in the keyword list, it returns <code class="inline">{[], keyword_list}</code>.</p><p>If you don't want to remove all the entries associated with <code class="inline">key</code> use <a href="#pop_first/3"><code class="inline">pop_first/3</code></a>
instead, which will remove only the first entry.</p><h2 id="pop_values/2-examples" class="section-heading"><a href="#pop_values/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop_values</samp><samp class="p" data-group-id="4184707967-1">(</samp><samp class="p" data-group-id="4184707967-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="4184707967-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="4184707967-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4184707967-3">{</samp><samp class="p" data-group-id="4184707967-4">[</samp><samp class="mi">1</samp><samp class="p" data-group-id="4184707967-4">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4184707967-5">[</samp><samp class="p" data-group-id="4184707967-5">]</samp><samp class="p" data-group-id="4184707967-3">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop_values</samp><samp class="p" data-group-id="4184707967-6">(</samp><samp class="p" data-group-id="4184707967-7">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="4184707967-7">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="4184707967-6">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4184707967-8">{</samp><samp class="p" data-group-id="4184707967-9">[</samp><samp class="p" data-group-id="4184707967-9">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4184707967-10">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="4184707967-10">]</samp><samp class="p" data-group-id="4184707967-8">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">pop_values</samp><samp class="p" data-group-id="4184707967-11">(</samp><samp class="p" data-group-id="4184707967-12">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4184707967-12">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p" data-group-id="4184707967-11">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4184707967-13">{</samp><samp class="p" data-group-id="4184707967-14">[</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4184707967-14">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4184707967-15">[</samp><samp class="p" data-group-id="4184707967-15">]</samp><samp class="p" data-group-id="4184707967-13">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="put/3">

  <div class="detail-header">
    <a href="#put/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">put(keywords, key, value)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L780" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> put(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Puts the given <code class="inline">value</code> under the specified <code class="inline">key</code>.</p><p>If a value under <code class="inline">key</code> already exists, it overrides the value
and removes all duplicate entries.</p><h2 id="put/3-examples" class="section-heading"><a href="#put/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">put</samp><samp class="p" data-group-id="7035772860-1">(</samp><samp class="p" data-group-id="7035772860-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7035772860-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7035772860-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7035772860-3">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7035772860-3">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">put</samp><samp class="p" data-group-id="7035772860-4">(</samp><samp class="p" data-group-id="7035772860-5">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7035772860-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="7035772860-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7035772860-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7035772860-6">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">put</samp><samp class="p" data-group-id="7035772860-7">(</samp><samp class="p" data-group-id="7035772860-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="7035772860-8">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="7035772860-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7035772860-9">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7035772860-9">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="put_new/3">

  <div class="detail-header">
    <a href="#put_new/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">put_new(keywords, key, value)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L825" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> put_new(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Puts the given <code class="inline">value</code> under <code class="inline">key</code>, unless the entry <code class="inline">key</code> already exists.</p><h2 id="put_new/3-examples" class="section-heading"><a href="#put_new/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">put_new</samp><samp class="p" data-group-id="1545591499-1">(</samp><samp class="p" data-group-id="1545591499-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1545591499-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1545591499-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1545591499-3">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1545591499-3">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">put_new</samp><samp class="p" data-group-id="1545591499-4">(</samp><samp class="p" data-group-id="1545591499-5">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1545591499-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="1545591499-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1545591499-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1545591499-6">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="put_new_lazy/3">

  <div class="detail-header">
    <a href="#put_new_lazy/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">put_new_lazy(keywords, key, fun)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L805" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> put_new_lazy(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), (-&gt; <a href="#t:value/0">value</a>())) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Evaluates <code class="inline">fun</code> and puts the result under <code class="inline">key</code>
in keyword list unless <code class="inline">key</code> is already present.</p><p>This is useful if the value is very expensive to calculate or
generally difficult to set up and tear down again.</p><h2 id="put_new_lazy/3-examples" class="section-heading"><a href="#put_new_lazy/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">keyword</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="1853060181-1">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1853060181-1">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">fun</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="k" data-group-id="1853060181-2">fn</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="c1"># some expensive operation here</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="w">  </samp><samp class="mi">13</samp><samp class="w">
</samp><samp class="gp unselectable">...&gt; </samp><samp class="k" data-group-id="1853060181-2">end</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">put_new_lazy</samp><samp class="p" data-group-id="1853060181-3">(</samp><samp class="n">keyword</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">fun</samp><samp class="p" data-group-id="1853060181-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1853060181-4">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1853060181-4">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">put_new_lazy</samp><samp class="p" data-group-id="1853060181-5">(</samp><samp class="n">keyword</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">fun</samp><samp class="p" data-group-id="1853060181-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1853060181-6">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">13</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1853060181-6">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="reject/2">

  <div class="detail-header">
    <a href="#reject/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">reject(keywords, fun)</h1>

        <span class="note">(since 1.13.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1512" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> reject(<a href="#t:t/0">t</a>(), ({<a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>()} -&gt; <a href="typespecs.xhtml#built-in-types">as_boolean</a>(<a href="typespecs.xhtml#built-in-types">term</a>()))) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Returns a keyword list excluding the entries from <code class="inline">keywords</code>
for which the function <code class="inline">fun</code> returns a truthy value.</p><p>See also <a href="#filter/2"><code class="inline">filter/2</code></a>.</p><h2 id="reject/2-examples" class="section-heading"><a href="#reject/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">reject</samp><samp class="p" data-group-id="9287820331-1">(</samp><samp class="p" data-group-id="9287820331-2">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">three</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="9287820331-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="9287820331-3">fn</samp><samp class="w"> </samp><samp class="p" data-group-id="9287820331-4">{</samp><samp class="c">_key</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">val</samp><samp class="p" data-group-id="9287820331-4">}</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">rem</samp><samp class="p" data-group-id="9287820331-5">(</samp><samp class="n">val</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="9287820331-5">)</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="w"> </samp><samp class="k" data-group-id="9287820331-3">end</samp><samp class="p" data-group-id="9287820331-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="9287820331-6">[</samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="9287820331-6">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="replace/3">

  <div class="detail-header">
    <a href="#replace/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">replace(keywords, key, value)</h1>

        <span class="note">(since 1.11.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L849" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> replace(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Puts a value under <code class="inline">key</code> only if the <code class="inline">key</code> already exists in <code class="inline">keywords</code>.</p><p>In case a key exists multiple times in the keyword list,
it removes later occurrences.</p><h2 id="replace/3-examples" class="section-heading"><a href="#replace/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">replace</samp><samp class="p" data-group-id="3984799473-1">(</samp><samp class="p" data-group-id="3984799473-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="3984799473-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="3984799473-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="3984799473-3">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="3984799473-3">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">replace</samp><samp class="p" data-group-id="3984799473-4">(</samp><samp class="p" data-group-id="3984799473-5">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="3984799473-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="3984799473-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="3984799473-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="3984799473-6">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="replace!/3">

  <div class="detail-header">
    <a href="#replace!/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">replace!(keywords, key, value)</h1>

        <span class="note">(since 1.5.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L883" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> replace!(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Puts a value under <code class="inline">key</code> only if the <code class="inline">key</code> already exists in <code class="inline">keywords</code>.</p><p>If <code class="inline">key</code> is not present in <code class="inline">keywords</code>, it raises a <a href="KeyError.xhtml"><code class="inline">KeyError</code></a>.</p><h2 id="replace!/3-examples" class="section-heading"><a href="#replace!/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">replace!</samp><samp class="p" data-group-id="1127615958-1">(</samp><samp class="p" data-group-id="1127615958-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="1127615958-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:new</samp><samp class="p" data-group-id="1127615958-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1127615958-3">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:new</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1127615958-3">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">replace!</samp><samp class="p" data-group-id="1127615958-4">(</samp><samp class="p" data-group-id="1127615958-5">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="1127615958-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:new</samp><samp class="p" data-group-id="1127615958-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1127615958-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:new</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="1127615958-6">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">replace!</samp><samp class="p" data-group-id="1127615958-7">(</samp><samp class="p" data-group-id="1127615958-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="1127615958-8">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1127615958-7">)</samp><samp class="w">
</samp><samp class="gt">** (KeyError) key :b not found in: [a: 1]</samp></code></pre>
  </section>
</section>
<section class="detail" id="replace_lazy/3">

  <div class="detail-header">
    <a href="#replace_lazy/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">replace_lazy(keywords, key, fun)</h1>

        <span class="note">(since 1.14.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L921" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> replace_lazy(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), (existing_value :: <a href="#t:value/0">value</a>() -&gt; new_value :: <a href="#t:value/0">value</a>())) ::
  <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Replaces the value under <code class="inline">key</code> using the given function only if
<code class="inline">key</code> already exists in <code class="inline">keywords</code>.</p><p>In comparison to <a href="#replace/3"><code class="inline">replace/3</code></a>, this can be useful when it's expensive to calculate the value.</p><p>If <code class="inline">key</code> does not exist, the original keyword list is returned unchanged.</p><h2 id="replace_lazy/3-examples" class="section-heading"><a href="#replace_lazy/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">replace_lazy</samp><samp class="p" data-group-id="0159940675-1">(</samp><samp class="p" data-group-id="0159940675-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0159940675-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="0159940675-3">fn</samp><samp class="w"> </samp><samp class="n">v</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">v</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="w"> </samp><samp class="k" data-group-id="0159940675-3">end</samp><samp class="p" data-group-id="0159940675-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0159940675-4">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0159940675-4">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">replace_lazy</samp><samp class="p" data-group-id="0159940675-5">(</samp><samp class="p" data-group-id="0159940675-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="0159940675-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="0159940675-7">fn</samp><samp class="w"> </samp><samp class="n">v</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">v</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="w"> </samp><samp class="k" data-group-id="0159940675-7">end</samp><samp class="p" data-group-id="0159940675-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0159940675-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">8</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0159940675-8">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">replace_lazy</samp><samp class="p" data-group-id="0159940675-9">(</samp><samp class="p" data-group-id="0159940675-10">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0159940675-10">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:c</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="0159940675-11">fn</samp><samp class="w"> </samp><samp class="n">v</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">v</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="w"> </samp><samp class="k" data-group-id="0159940675-11">end</samp><samp class="p" data-group-id="0159940675-9">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0159940675-12">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0159940675-12">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="split/2">

  <div class="detail-header">
    <a href="#split/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">split(keywords, keys)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1212" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> split(<a href="#t:t/0">t</a>(), [<a href="#t:key/0">key</a>()]) :: {<a href="#t:t/0">t</a>(), <a href="#t:t/0">t</a>()}</pre>

      </div>

<p>Takes all entries corresponding to the given <code class="inline">keys</code> and extracts them into a
separate keyword list.</p><p>Returns a tuple with the new list and the old list with removed keys.</p><p>Ignores keys for which there are no entries in the keyword list.</p><p>Entries with duplicate keys end up in the same keyword list.</p><h2 id="split/2-examples" class="section-heading"><a href="#split/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">split</samp><samp class="p" data-group-id="3488179021-1">(</samp><samp class="p" data-group-id="3488179021-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="3488179021-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="3488179021-3">[</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:c</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:e</samp><samp class="p" data-group-id="3488179021-3">]</samp><samp class="p" data-group-id="3488179021-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="3488179021-4">{</samp><samp class="p" data-group-id="3488179021-5">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="3488179021-5">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="3488179021-6">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="3488179021-6">]</samp><samp class="p" data-group-id="3488179021-4">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">split</samp><samp class="p" data-group-id="3488179021-7">(</samp><samp class="p" data-group-id="3488179021-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="3488179021-8">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="3488179021-9">[</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:c</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:e</samp><samp class="p" data-group-id="3488179021-9">]</samp><samp class="p" data-group-id="3488179021-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="3488179021-10">{</samp><samp class="p" data-group-id="3488179021-11">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="3488179021-11">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="3488179021-12">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="3488179021-12">]</samp><samp class="p" data-group-id="3488179021-10">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="split_with/2">

  <div class="detail-header">
    <a href="#split_with/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">split_with(keywords, fun)</h1>

        <span class="note">(since 1.15.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1252" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> split_with(<a href="#t:t/0">t</a>(), ({<a href="#t:key/0">key</a>(), <a href="#t:value/0">value</a>()} -&gt; <a href="typespecs.xhtml#built-in-types">as_boolean</a>(<a href="typespecs.xhtml#built-in-types">term</a>()))) :: {<a href="#t:t/0">t</a>(), <a href="#t:t/0">t</a>()}</pre>

      </div>

<p>Splits the <code class="inline">keywords</code> into two keyword lists according to the given function
<code class="inline">fun</code>.</p><p>The provided <code class="inline">fun</code> receives each <code class="inline">{key, value}</code> pair in the <code class="inline">keywords</code> as its only
argument. Returns a tuple with the first keyword list containing all the
elements in <code class="inline">keywords</code> for which applying <code class="inline">fun</code> returned a truthy value, and
a second keyword list with all the elements for which applying <code class="inline">fun</code> returned
a falsy value (<code class="inline">false</code> or <code class="inline">nil</code>).</p><h2 id="split_with/2-examples" class="section-heading"><a href="#split_with/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">split_with</samp><samp class="p" data-group-id="1000774214-1">(</samp><samp class="p" data-group-id="1000774214-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="1000774214-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="1000774214-3">fn</samp><samp class="w"> </samp><samp class="p" data-group-id="1000774214-4">{</samp><samp class="c">_k</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v</samp><samp class="p" data-group-id="1000774214-4">}</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">rem</samp><samp class="p" data-group-id="1000774214-5">(</samp><samp class="n">v</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1000774214-5">)</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="w"> </samp><samp class="k" data-group-id="1000774214-3">end</samp><samp class="p" data-group-id="1000774214-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1000774214-6">{</samp><samp class="p" data-group-id="1000774214-7">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1000774214-7">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1000774214-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="1000774214-8">]</samp><samp class="p" data-group-id="1000774214-6">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">split_with</samp><samp class="p" data-group-id="1000774214-9">(</samp><samp class="p" data-group-id="1000774214-10">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="1000774214-10">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="1000774214-11">fn</samp><samp class="w"> </samp><samp class="p" data-group-id="1000774214-12">{</samp><samp class="c">_k</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v</samp><samp class="p" data-group-id="1000774214-12">}</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">rem</samp><samp class="p" data-group-id="1000774214-13">(</samp><samp class="n">v</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1000774214-13">)</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="w"> </samp><samp class="k" data-group-id="1000774214-11">end</samp><samp class="p" data-group-id="1000774214-9">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1000774214-14">{</samp><samp class="p" data-group-id="1000774214-15">[</samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="1000774214-15">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1000774214-16">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="1000774214-16">]</samp><samp class="p" data-group-id="1000774214-14">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">split_with</samp><samp class="p" data-group-id="1000774214-17">(</samp><samp class="p" data-group-id="1000774214-18">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="1000774214-18">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="1000774214-19">fn</samp><samp class="w"> </samp><samp class="p" data-group-id="1000774214-20">{</samp><samp class="n">k</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v</samp><samp class="p" data-group-id="1000774214-20">}</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">k</samp><samp class="w"> </samp><samp class="ow">in</samp><samp class="w"> </samp><samp class="p" data-group-id="1000774214-21">[</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:c</samp><samp class="p" data-group-id="1000774214-21">]</samp><samp class="w"> </samp><samp class="ow">and</samp><samp class="w"> </samp><samp class="n">rem</samp><samp class="p" data-group-id="1000774214-22">(</samp><samp class="n">v</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1000774214-22">)</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="w"> </samp><samp class="k" data-group-id="1000774214-19">end</samp><samp class="p" data-group-id="1000774214-17">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1000774214-23">{</samp><samp class="p" data-group-id="1000774214-24">[</samp><samp class="p" data-group-id="1000774214-24">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1000774214-25">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="1000774214-25">]</samp><samp class="p" data-group-id="1000774214-23">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">split_with</samp><samp class="p" data-group-id="1000774214-26">(</samp><samp class="p" data-group-id="1000774214-27">[</samp><samp class="p" data-group-id="1000774214-27">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="1000774214-28">fn</samp><samp class="w"> </samp><samp class="p" data-group-id="1000774214-29">{</samp><samp class="c">_k</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">v</samp><samp class="p" data-group-id="1000774214-29">}</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">rem</samp><samp class="p" data-group-id="1000774214-30">(</samp><samp class="n">v</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="1000774214-30">)</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="w"> </samp><samp class="k" data-group-id="1000774214-28">end</samp><samp class="p" data-group-id="1000774214-26">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1000774214-31">{</samp><samp class="p" data-group-id="1000774214-32">[</samp><samp class="p" data-group-id="1000774214-32">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="1000774214-33">[</samp><samp class="p" data-group-id="1000774214-33">]</samp><samp class="p" data-group-id="1000774214-31">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="take/2">

  <div class="detail-header">
    <a href="#take/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">take(keywords, keys)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1279" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> take(<a href="#t:t/0">t</a>(), [<a href="#t:key/0">key</a>()]) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Takes all entries corresponding to the given <code class="inline">keys</code> and returns them as a new
keyword list.</p><p>Preserves duplicate keys in the new keyword list.</p><h2 id="take/2-examples" class="section-heading"><a href="#take/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">take</samp><samp class="p" data-group-id="9412404505-1">(</samp><samp class="p" data-group-id="9412404505-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="9412404505-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="9412404505-3">[</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:c</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:e</samp><samp class="p" data-group-id="9412404505-3">]</samp><samp class="p" data-group-id="9412404505-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="9412404505-4">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="9412404505-4">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">take</samp><samp class="p" data-group-id="9412404505-5">(</samp><samp class="p" data-group-id="9412404505-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p" data-group-id="9412404505-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="9412404505-7">[</samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:c</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:e</samp><samp class="p" data-group-id="9412404505-7">]</samp><samp class="p" data-group-id="9412404505-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="9412404505-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">5</samp><samp class="p" data-group-id="9412404505-8">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_list/1">

  <div class="detail-header">
    <a href="#to_list/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_list(keywords)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1459" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_list(<a href="#t:t/0">t</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Returns the keyword list itself.</p><h2 id="to_list/1-examples" class="section-heading"><a href="#to_list/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">to_list</samp><samp class="p" data-group-id="0846989451-1">(</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="0846989451-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0846989451-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="0846989451-2">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="update/4">

  <div class="detail-header">
    <a href="#update/4" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">update(keywords, key, default, fun)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1176" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> update(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), default :: <a href="#t:value/0">value</a>(), (existing_value :: <a href="#t:value/0">value</a>() -&gt;
                                          new_value :: <a href="#t:value/0">value</a>())) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Updates the value under <code class="inline">key</code> in <code class="inline">keywords</code> using the given function.</p><p>If the <code class="inline">key</code> does not exist, it inserts the given <code class="inline">default</code> value.
Does not pass the <code class="inline">default</code> value through the update function.</p><p>Removes all duplicate keys and only updates the first one.</p><h2 id="update/4-examples" class="section-heading"><a href="#update/4-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">update</samp><samp class="p" data-group-id="7555927743-1">(</samp><samp class="p" data-group-id="7555927743-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7555927743-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">13</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="7555927743-3">fn</samp><samp class="w"> </samp><samp class="n">existing_value</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">existing_value</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="w"> </samp><samp class="k" data-group-id="7555927743-3">end</samp><samp class="p" data-group-id="7555927743-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7555927743-4">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7555927743-4">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">update</samp><samp class="p" data-group-id="7555927743-5">(</samp><samp class="p" data-group-id="7555927743-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7555927743-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">13</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="7555927743-7">fn</samp><samp class="w"> </samp><samp class="n">existing_value</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">existing_value</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="w"> </samp><samp class="k" data-group-id="7555927743-7">end</samp><samp class="p" data-group-id="7555927743-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7555927743-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="7555927743-8">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">update</samp><samp class="p" data-group-id="7555927743-9">(</samp><samp class="p" data-group-id="7555927743-10">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7555927743-10">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="k" data-group-id="7555927743-11">fn</samp><samp class="w"> </samp><samp class="n">existing_value</samp><samp class="w"> </samp><samp class="o">-&gt;</samp><samp class="w"> </samp><samp class="n">existing_value</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="w"> </samp><samp class="k" data-group-id="7555927743-11">end</samp><samp class="p" data-group-id="7555927743-9">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7555927743-12">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">11</samp><samp class="p" data-group-id="7555927743-12">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="update!/3">

  <div class="detail-header">
    <a href="#update!/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">update!(keywords, key, fun)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L1138" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> update!(<a href="#t:t/0">t</a>(), <a href="#t:key/0">key</a>(), (current_value :: <a href="#t:value/0">value</a>() -&gt; new_value :: <a href="#t:value/0">value</a>())) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Updates the value under <code class="inline">key</code> using the given function.</p><p>Raises <a href="KeyError.xhtml"><code class="inline">KeyError</code></a> if the <code class="inline">key</code> does not exist.</p><p>Removes all duplicate keys and only updates the first one.</p><h2 id="update!/3-examples" class="section-heading"><a href="#update!/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">update!</samp><samp class="p" data-group-id="4982836514-1">(</samp><samp class="p" data-group-id="4982836514-2">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="4982836514-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="o">&amp;</samp><samp class="p" data-group-id="4982836514-3">(</samp><samp class="ni">&amp;1</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4982836514-3">)</samp><samp class="p" data-group-id="4982836514-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4982836514-4">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4982836514-4">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">update!</samp><samp class="p" data-group-id="4982836514-5">(</samp><samp class="p" data-group-id="4982836514-6">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="4982836514-6">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="o">&amp;</samp><samp class="p" data-group-id="4982836514-7">(</samp><samp class="ni">&amp;1</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4982836514-7">)</samp><samp class="p" data-group-id="4982836514-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4982836514-8">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">c</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="4982836514-8">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">update!</samp><samp class="p" data-group-id="4982836514-9">(</samp><samp class="p" data-group-id="4982836514-10">[</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="4982836514-10">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="o">&amp;</samp><samp class="p" data-group-id="4982836514-11">(</samp><samp class="ni">&amp;1</samp><samp class="w"> </samp><samp class="o">*</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4982836514-11">)</samp><samp class="p" data-group-id="4982836514-9">)</samp><samp class="w">
</samp><samp class="gt">** (KeyError) key :b not found in: [a: 1]</samp></code></pre>
  </section>
</section>
<section class="detail" id="validate/2">

  <div class="detail-header">
    <a href="#validate/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">validate(keyword, values)</h1>

        <span class="note">(since 1.13.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L259" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> validate(
  <a href="typespecs.xhtml#built-in-types">keyword</a>(),
  values :: [<a href="typespecs.xhtml#basic-types">atom</a>() | {<a href="typespecs.xhtml#basic-types">atom</a>(), <a href="typespecs.xhtml#built-in-types">term</a>()}]
) :: {:ok, <a href="typespecs.xhtml#built-in-types">keyword</a>()} | {:error, [<a href="typespecs.xhtml#basic-types">atom</a>()]}</pre>

      </div>

<p>Ensures the given <code class="inline">keyword</code> has only the keys given in <code class="inline">values</code>.</p><p>The second argument must be a list of atoms, specifying
a given key, or tuples specifying a key and a default value.</p><p>If the keyword list has only the given keys, it returns
<code class="inline">{:ok, keyword}</code> with default values applied. Otherwise it
returns <code class="inline">{:error, invalid_keys}</code> with invalid keys.</p><p>See also: <a href="#validate!/2"><code class="inline">validate!/2</code></a>.</p><h2 id="validate/2-examples" class="section-heading"><a href="#validate/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="6657951316-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">result</samp><samp class="p" data-group-id="6657951316-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate</samp><samp class="p" data-group-id="6657951316-2">(</samp><samp class="p" data-group-id="6657951316-3">[</samp><samp class="p" data-group-id="6657951316-3">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="6657951316-4">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="6657951316-4">]</samp><samp class="p" data-group-id="6657951316-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Enum</samp><samp class="o">.</samp><samp class="n">sort</samp><samp class="p" data-group-id="6657951316-5">(</samp><samp class="n">result</samp><samp class="p" data-group-id="6657951316-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6657951316-6">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="6657951316-6">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="6657951316-7">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">result</samp><samp class="p" data-group-id="6657951316-7">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate</samp><samp class="p" data-group-id="6657951316-8">(</samp><samp class="p" data-group-id="6657951316-9">[</samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="6657951316-9">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="6657951316-10">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="6657951316-10">]</samp><samp class="p" data-group-id="6657951316-8">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Enum</samp><samp class="o">.</samp><samp class="n">sort</samp><samp class="p" data-group-id="6657951316-11">(</samp><samp class="n">result</samp><samp class="p" data-group-id="6657951316-11">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6657951316-12">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="6657951316-12">]</samp></code></pre><p>If atoms are given, they are supported as keys but do not
provide a default value:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="2607284859-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">result</samp><samp class="p" data-group-id="2607284859-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate</samp><samp class="p" data-group-id="2607284859-2">(</samp><samp class="p" data-group-id="2607284859-3">[</samp><samp class="p" data-group-id="2607284859-3">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="2607284859-4">[</samp><samp class="ss">:one</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="2607284859-4">]</samp><samp class="p" data-group-id="2607284859-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Enum</samp><samp class="o">.</samp><samp class="n">sort</samp><samp class="p" data-group-id="2607284859-5">(</samp><samp class="n">result</samp><samp class="p" data-group-id="2607284859-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="2607284859-6">[</samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="2607284859-6">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="2607284859-7">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">result</samp><samp class="p" data-group-id="2607284859-7">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate</samp><samp class="p" data-group-id="2607284859-8">(</samp><samp class="p" data-group-id="2607284859-9">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="2607284859-9">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="2607284859-10">[</samp><samp class="ss">:one</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="2607284859-10">]</samp><samp class="p" data-group-id="2607284859-8">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Enum</samp><samp class="o">.</samp><samp class="n">sort</samp><samp class="p" data-group-id="2607284859-11">(</samp><samp class="n">result</samp><samp class="p" data-group-id="2607284859-11">)</samp><samp class="w">
</samp><samp class="p" data-group-id="2607284859-12">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="2607284859-12">]</samp></code></pre><p>Passing unknown keys returns an error:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate</samp><samp class="p" data-group-id="0515493121-1">(</samp><samp class="p" data-group-id="0515493121-2">[</samp><samp class="ss">three</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">four</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">4</samp><samp class="p" data-group-id="0515493121-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="0515493121-3">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="0515493121-3">]</samp><samp class="p" data-group-id="0515493121-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="0515493121-4">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="0515493121-5">[</samp><samp class="ss">:four</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:three</samp><samp class="p" data-group-id="0515493121-5">]</samp><samp class="p" data-group-id="0515493121-4">}</samp></code></pre><p>Passing the same key multiple times also errors:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate</samp><samp class="p" data-group-id="4018941392-1">(</samp><samp class="p" data-group-id="4018941392-2">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="4018941392-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4018941392-3">[</samp><samp class="ss">:one</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:two</samp><samp class="p" data-group-id="4018941392-3">]</samp><samp class="p" data-group-id="4018941392-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4018941392-4">{</samp><samp class="ss">:error</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4018941392-5">[</samp><samp class="ss">:one</samp><samp class="p" data-group-id="4018941392-5">]</samp><samp class="p" data-group-id="4018941392-4">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="validate!/2">

  <div class="detail-header">
    <a href="#validate!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">validate!(keyword, values)</h1>

        <span class="note">(since 1.13.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L342" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> validate!(
  <a href="typespecs.xhtml#built-in-types">keyword</a>(),
  values :: [<a href="typespecs.xhtml#basic-types">atom</a>() | {<a href="typespecs.xhtml#basic-types">atom</a>(), <a href="typespecs.xhtml#built-in-types">term</a>()}]
) :: <a href="typespecs.xhtml#built-in-types">keyword</a>()</pre>

      </div>

<p>Similar to <a href="#validate/2"><code class="inline">validate/2</code></a> but returns the keyword or raises an error.</p><h2 id="validate!/2-examples" class="section-heading"><a href="#validate!/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate!</samp><samp class="p" data-group-id="4568314360-1">(</samp><samp class="p" data-group-id="4568314360-2">[</samp><samp class="p" data-group-id="4568314360-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4568314360-3">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4568314360-3">]</samp><samp class="p" data-group-id="4568314360-1">)</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">Enum</samp><samp class="o">.</samp><samp class="n">sort</samp><samp class="p" data-group-id="4568314360-4">(</samp><samp class="p" data-group-id="4568314360-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4568314360-5">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4568314360-5">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate!</samp><samp class="p" data-group-id="4568314360-6">(</samp><samp class="p" data-group-id="4568314360-7">[</samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="4568314360-7">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4568314360-8">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4568314360-8">]</samp><samp class="p" data-group-id="4568314360-6">)</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">Enum</samp><samp class="o">.</samp><samp class="n">sort</samp><samp class="p" data-group-id="4568314360-9">(</samp><samp class="p" data-group-id="4568314360-9">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4568314360-10">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="4568314360-10">]</samp></code></pre><p>If atoms are given, they are supported as keys but do not
provide a default value:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate!</samp><samp class="p" data-group-id="3250233228-1">(</samp><samp class="p" data-group-id="3250233228-2">[</samp><samp class="p" data-group-id="3250233228-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="3250233228-3">[</samp><samp class="ss">:one</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="3250233228-3">]</samp><samp class="p" data-group-id="3250233228-1">)</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">Enum</samp><samp class="o">.</samp><samp class="n">sort</samp><samp class="p" data-group-id="3250233228-4">(</samp><samp class="p" data-group-id="3250233228-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="3250233228-5">[</samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="3250233228-5">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate!</samp><samp class="p" data-group-id="3250233228-6">(</samp><samp class="p" data-group-id="3250233228-7">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="3250233228-7">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="3250233228-8">[</samp><samp class="ss">:one</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="3250233228-8">]</samp><samp class="p" data-group-id="3250233228-6">)</samp><samp class="w"> </samp><samp class="o">|&gt;</samp><samp class="w"> </samp><samp class="nc">Enum</samp><samp class="o">.</samp><samp class="n">sort</samp><samp class="p" data-group-id="3250233228-9">(</samp><samp class="p" data-group-id="3250233228-9">)</samp><samp class="w">
</samp><samp class="p" data-group-id="3250233228-10">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="3250233228-10">]</samp></code></pre><p>Passing unknown keys raises an error:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate!</samp><samp class="p" data-group-id="9011645511-1">(</samp><samp class="p" data-group-id="9011645511-2">[</samp><samp class="ss">three</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="9011645511-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="9011645511-3">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="9011645511-3">]</samp><samp class="p" data-group-id="9011645511-1">)</samp><samp class="w">
</samp><samp class="gt">** (ArgumentError) unknown keys [:three] in [three: 3], the allowed keys are: [:one, :two]</samp></code></pre><p>Passing the same key multiple times also errors:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">validate!</samp><samp class="p" data-group-id="7570104673-1">(</samp><samp class="p" data-group-id="7570104673-2">[</samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">two</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">one</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p" data-group-id="7570104673-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="7570104673-3">[</samp><samp class="ss">:one</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:two</samp><samp class="p" data-group-id="7570104673-3">]</samp><samp class="p" data-group-id="7570104673-1">)</samp><samp class="w">
</samp><samp class="gt">** (ArgumentError) duplicate keys [:one] in [one: 1, two: 2, one: 1]</samp></code></pre>
  </section>
</section>
<section class="detail" id="values/1">

  <div class="detail-header">
    <a href="#values/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">values(keywords)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/keyword.ex#L675" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> values(<a href="#t:t/0">t</a>()) :: [<a href="#t:value/0">value</a>()]</pre>

      </div>

<p>Returns all values from the keyword list.</p><p>Keeps values from duplicate keys in the resulting list of values.</p><h2 id="values/1-examples" class="section-heading"><a href="#values/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">values</samp><samp class="p" data-group-id="8485929086-1">(</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="8485929086-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8485929086-2">[</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="8485929086-2">]</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Keyword</samp><samp class="o">.</samp><samp class="n">values</samp><samp class="p" data-group-id="8485929086-3">(</samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">b</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">a</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="8485929086-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8485929086-4">[</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="8485929086-4">]</samp></code></pre>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
