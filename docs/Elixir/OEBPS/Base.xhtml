<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Base - Elixir v1.18.4</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Base 
    </h1>


      <section id="moduledoc" class="docstring">
<p>This module provides data encoding and decoding functions
according to <a href="https://tools.ietf.org/html/rfc4648">RFC 4648</a>.</p><p>This document defines the commonly used base 16, base 32, and base
64 encoding schemes.</p><h2 id="module-base-16-alphabet">Base 16 alphabet</h2><table><thead><tr><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th></tr></thead><tbody><tr><td style="text-align: right;">0</td><td style="text-align: left;">0</td><td style="text-align: right;">4</td><td style="text-align: left;">4</td><td style="text-align: right;">8</td><td style="text-align: left;">8</td><td style="text-align: right;">12</td><td style="text-align: left;">C</td></tr><tr><td style="text-align: right;">1</td><td style="text-align: left;">1</td><td style="text-align: right;">5</td><td style="text-align: left;">5</td><td style="text-align: right;">9</td><td style="text-align: left;">9</td><td style="text-align: right;">13</td><td style="text-align: left;">D</td></tr><tr><td style="text-align: right;">2</td><td style="text-align: left;">2</td><td style="text-align: right;">6</td><td style="text-align: left;">6</td><td style="text-align: right;">10</td><td style="text-align: left;">A</td><td style="text-align: right;">14</td><td style="text-align: left;">E</td></tr><tr><td style="text-align: right;">3</td><td style="text-align: left;">3</td><td style="text-align: right;">7</td><td style="text-align: left;">7</td><td style="text-align: right;">11</td><td style="text-align: left;">B</td><td style="text-align: right;">15</td><td style="text-align: left;">F</td></tr></tbody></table><h2 id="module-base-32-alphabet">Base 32 alphabet</h2><table><thead><tr><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th></tr></thead><tbody><tr><td style="text-align: right;">0</td><td style="text-align: left;">A</td><td style="text-align: right;">9</td><td style="text-align: left;">J</td><td style="text-align: right;">18</td><td style="text-align: left;">S</td><td style="text-align: right;">27</td><td style="text-align: left;">3</td></tr><tr><td style="text-align: right;">1</td><td style="text-align: left;">B</td><td style="text-align: right;">10</td><td style="text-align: left;">K</td><td style="text-align: right;">19</td><td style="text-align: left;">T</td><td style="text-align: right;">28</td><td style="text-align: left;">4</td></tr><tr><td style="text-align: right;">2</td><td style="text-align: left;">C</td><td style="text-align: right;">11</td><td style="text-align: left;">L</td><td style="text-align: right;">20</td><td style="text-align: left;">U</td><td style="text-align: right;">29</td><td style="text-align: left;">5</td></tr><tr><td style="text-align: right;">3</td><td style="text-align: left;">D</td><td style="text-align: right;">12</td><td style="text-align: left;">M</td><td style="text-align: right;">21</td><td style="text-align: left;">V</td><td style="text-align: right;">30</td><td style="text-align: left;">6</td></tr><tr><td style="text-align: right;">4</td><td style="text-align: left;">E</td><td style="text-align: right;">13</td><td style="text-align: left;">N</td><td style="text-align: right;">22</td><td style="text-align: left;">W</td><td style="text-align: right;">31</td><td style="text-align: left;">7</td></tr><tr><td style="text-align: right;">5</td><td style="text-align: left;">F</td><td style="text-align: right;">14</td><td style="text-align: left;">O</td><td style="text-align: right;">23</td><td style="text-align: left;">X</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr><tr><td style="text-align: right;">6</td><td style="text-align: left;">G</td><td style="text-align: right;">15</td><td style="text-align: left;">P</td><td style="text-align: right;">24</td><td style="text-align: left;">Y</td><td style="text-align: right;">(pad)</td><td style="text-align: left;">=</td></tr><tr><td style="text-align: right;">7</td><td style="text-align: left;">H</td><td style="text-align: right;">16</td><td style="text-align: left;">Q</td><td style="text-align: right;">25</td><td style="text-align: left;">Z</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr><tr><td style="text-align: right;">8</td><td style="text-align: left;">I</td><td style="text-align: right;">17</td><td style="text-align: left;">R</td><td style="text-align: right;">26</td><td style="text-align: left;">2</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr></tbody></table><h2 id="module-base-32-extended-hex-alphabet">Base 32 (extended hex) alphabet</h2><table><thead><tr><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th></tr></thead><tbody><tr><td style="text-align: right;">0</td><td style="text-align: left;">0</td><td style="text-align: right;">9</td><td style="text-align: left;">9</td><td style="text-align: right;">18</td><td style="text-align: left;">I</td><td style="text-align: right;">27</td><td style="text-align: left;">R</td></tr><tr><td style="text-align: right;">1</td><td style="text-align: left;">1</td><td style="text-align: right;">10</td><td style="text-align: left;">A</td><td style="text-align: right;">19</td><td style="text-align: left;">J</td><td style="text-align: right;">28</td><td style="text-align: left;">S</td></tr><tr><td style="text-align: right;">2</td><td style="text-align: left;">2</td><td style="text-align: right;">11</td><td style="text-align: left;">B</td><td style="text-align: right;">20</td><td style="text-align: left;">K</td><td style="text-align: right;">29</td><td style="text-align: left;">T</td></tr><tr><td style="text-align: right;">3</td><td style="text-align: left;">3</td><td style="text-align: right;">12</td><td style="text-align: left;">C</td><td style="text-align: right;">21</td><td style="text-align: left;">L</td><td style="text-align: right;">30</td><td style="text-align: left;">U</td></tr><tr><td style="text-align: right;">4</td><td style="text-align: left;">4</td><td style="text-align: right;">13</td><td style="text-align: left;">D</td><td style="text-align: right;">22</td><td style="text-align: left;">M</td><td style="text-align: right;">31</td><td style="text-align: left;">V</td></tr><tr><td style="text-align: right;">5</td><td style="text-align: left;">5</td><td style="text-align: right;">14</td><td style="text-align: left;">E</td><td style="text-align: right;">23</td><td style="text-align: left;">N</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr><tr><td style="text-align: right;">6</td><td style="text-align: left;">6</td><td style="text-align: right;">15</td><td style="text-align: left;">F</td><td style="text-align: right;">24</td><td style="text-align: left;">O</td><td style="text-align: right;">(pad)</td><td style="text-align: left;">=</td></tr><tr><td style="text-align: right;">7</td><td style="text-align: left;">7</td><td style="text-align: right;">16</td><td style="text-align: left;">G</td><td style="text-align: right;">25</td><td style="text-align: left;">P</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr><tr><td style="text-align: right;">8</td><td style="text-align: left;">8</td><td style="text-align: right;">17</td><td style="text-align: left;">H</td><td style="text-align: right;">26</td><td style="text-align: left;">Q</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr></tbody></table><h2 id="module-base-64-alphabet">Base 64 alphabet</h2><table><thead><tr><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th></tr></thead><tbody><tr><td style="text-align: right;">0</td><td style="text-align: left;">A</td><td style="text-align: right;">17</td><td style="text-align: left;">R</td><td style="text-align: right;">34</td><td style="text-align: left;">i</td><td style="text-align: right;">51</td><td style="text-align: left;">z</td></tr><tr><td style="text-align: right;">1</td><td style="text-align: left;">B</td><td style="text-align: right;">18</td><td style="text-align: left;">S</td><td style="text-align: right;">35</td><td style="text-align: left;">j</td><td style="text-align: right;">52</td><td style="text-align: left;">0</td></tr><tr><td style="text-align: right;">2</td><td style="text-align: left;">C</td><td style="text-align: right;">19</td><td style="text-align: left;">T</td><td style="text-align: right;">36</td><td style="text-align: left;">k</td><td style="text-align: right;">53</td><td style="text-align: left;">1</td></tr><tr><td style="text-align: right;">3</td><td style="text-align: left;">D</td><td style="text-align: right;">20</td><td style="text-align: left;">U</td><td style="text-align: right;">37</td><td style="text-align: left;">l</td><td style="text-align: right;">54</td><td style="text-align: left;">2</td></tr><tr><td style="text-align: right;">4</td><td style="text-align: left;">E</td><td style="text-align: right;">21</td><td style="text-align: left;">V</td><td style="text-align: right;">38</td><td style="text-align: left;">m</td><td style="text-align: right;">55</td><td style="text-align: left;">3</td></tr><tr><td style="text-align: right;">5</td><td style="text-align: left;">F</td><td style="text-align: right;">22</td><td style="text-align: left;">W</td><td style="text-align: right;">39</td><td style="text-align: left;">n</td><td style="text-align: right;">56</td><td style="text-align: left;">4</td></tr><tr><td style="text-align: right;">6</td><td style="text-align: left;">G</td><td style="text-align: right;">23</td><td style="text-align: left;">X</td><td style="text-align: right;">40</td><td style="text-align: left;">o</td><td style="text-align: right;">57</td><td style="text-align: left;">5</td></tr><tr><td style="text-align: right;">7</td><td style="text-align: left;">H</td><td style="text-align: right;">24</td><td style="text-align: left;">Y</td><td style="text-align: right;">41</td><td style="text-align: left;">p</td><td style="text-align: right;">58</td><td style="text-align: left;">6</td></tr><tr><td style="text-align: right;">8</td><td style="text-align: left;">I</td><td style="text-align: right;">25</td><td style="text-align: left;">Z</td><td style="text-align: right;">42</td><td style="text-align: left;">q</td><td style="text-align: right;">59</td><td style="text-align: left;">7</td></tr><tr><td style="text-align: right;">9</td><td style="text-align: left;">J</td><td style="text-align: right;">26</td><td style="text-align: left;">a</td><td style="text-align: right;">43</td><td style="text-align: left;">r</td><td style="text-align: right;">60</td><td style="text-align: left;">8</td></tr><tr><td style="text-align: right;">10</td><td style="text-align: left;">K</td><td style="text-align: right;">27</td><td style="text-align: left;">b</td><td style="text-align: right;">44</td><td style="text-align: left;">s</td><td style="text-align: right;">61</td><td style="text-align: left;">9</td></tr><tr><td style="text-align: right;">11</td><td style="text-align: left;">L</td><td style="text-align: right;">28</td><td style="text-align: left;">c</td><td style="text-align: right;">45</td><td style="text-align: left;">t</td><td style="text-align: right;">62</td><td style="text-align: left;">+</td></tr><tr><td style="text-align: right;">12</td><td style="text-align: left;">M</td><td style="text-align: right;">29</td><td style="text-align: left;">d</td><td style="text-align: right;">46</td><td style="text-align: left;">u</td><td style="text-align: right;">63</td><td style="text-align: left;">/</td></tr><tr><td style="text-align: right;">13</td><td style="text-align: left;">N</td><td style="text-align: right;">30</td><td style="text-align: left;">e</td><td style="text-align: right;">47</td><td style="text-align: left;">v</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr><tr><td style="text-align: right;">14</td><td style="text-align: left;">O</td><td style="text-align: right;">31</td><td style="text-align: left;">f</td><td style="text-align: right;">48</td><td style="text-align: left;">w</td><td style="text-align: right;">(pad)</td><td style="text-align: left;">=</td></tr><tr><td style="text-align: right;">15</td><td style="text-align: left;">P</td><td style="text-align: right;">32</td><td style="text-align: left;">g</td><td style="text-align: right;">49</td><td style="text-align: left;">x</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr><tr><td style="text-align: right;">16</td><td style="text-align: left;">Q</td><td style="text-align: right;">33</td><td style="text-align: left;">h</td><td style="text-align: right;">50</td><td style="text-align: left;">y</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr></tbody></table><h2 id="module-base-64-url-and-filename-safe-alphabet">Base 64 (URL and filename safe) alphabet</h2><table><thead><tr><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th><th style="text-align: right;">Value</th><th style="text-align: left;">Encoding</th></tr></thead><tbody><tr><td style="text-align: right;">0</td><td style="text-align: left;">A</td><td style="text-align: right;">17</td><td style="text-align: left;">R</td><td style="text-align: right;">34</td><td style="text-align: left;">i</td><td style="text-align: right;">51</td><td style="text-align: left;">z</td></tr><tr><td style="text-align: right;">1</td><td style="text-align: left;">B</td><td style="text-align: right;">18</td><td style="text-align: left;">S</td><td style="text-align: right;">35</td><td style="text-align: left;">j</td><td style="text-align: right;">52</td><td style="text-align: left;">0</td></tr><tr><td style="text-align: right;">2</td><td style="text-align: left;">C</td><td style="text-align: right;">19</td><td style="text-align: left;">T</td><td style="text-align: right;">36</td><td style="text-align: left;">k</td><td style="text-align: right;">53</td><td style="text-align: left;">1</td></tr><tr><td style="text-align: right;">3</td><td style="text-align: left;">D</td><td style="text-align: right;">20</td><td style="text-align: left;">U</td><td style="text-align: right;">37</td><td style="text-align: left;">l</td><td style="text-align: right;">54</td><td style="text-align: left;">2</td></tr><tr><td style="text-align: right;">4</td><td style="text-align: left;">E</td><td style="text-align: right;">21</td><td style="text-align: left;">V</td><td style="text-align: right;">38</td><td style="text-align: left;">m</td><td style="text-align: right;">55</td><td style="text-align: left;">3</td></tr><tr><td style="text-align: right;">5</td><td style="text-align: left;">F</td><td style="text-align: right;">22</td><td style="text-align: left;">W</td><td style="text-align: right;">39</td><td style="text-align: left;">n</td><td style="text-align: right;">56</td><td style="text-align: left;">4</td></tr><tr><td style="text-align: right;">6</td><td style="text-align: left;">G</td><td style="text-align: right;">23</td><td style="text-align: left;">X</td><td style="text-align: right;">40</td><td style="text-align: left;">o</td><td style="text-align: right;">57</td><td style="text-align: left;">5</td></tr><tr><td style="text-align: right;">7</td><td style="text-align: left;">H</td><td style="text-align: right;">24</td><td style="text-align: left;">Y</td><td style="text-align: right;">41</td><td style="text-align: left;">p</td><td style="text-align: right;">58</td><td style="text-align: left;">6</td></tr><tr><td style="text-align: right;">8</td><td style="text-align: left;">I</td><td style="text-align: right;">25</td><td style="text-align: left;">Z</td><td style="text-align: right;">42</td><td style="text-align: left;">q</td><td style="text-align: right;">59</td><td style="text-align: left;">7</td></tr><tr><td style="text-align: right;">9</td><td style="text-align: left;">J</td><td style="text-align: right;">26</td><td style="text-align: left;">a</td><td style="text-align: right;">43</td><td style="text-align: left;">r</td><td style="text-align: right;">60</td><td style="text-align: left;">8</td></tr><tr><td style="text-align: right;">10</td><td style="text-align: left;">K</td><td style="text-align: right;">27</td><td style="text-align: left;">b</td><td style="text-align: right;">44</td><td style="text-align: left;">s</td><td style="text-align: right;">61</td><td style="text-align: left;">9</td></tr><tr><td style="text-align: right;">11</td><td style="text-align: left;">L</td><td style="text-align: right;">28</td><td style="text-align: left;">c</td><td style="text-align: right;">45</td><td style="text-align: left;">t</td><td style="text-align: right;">62</td><td style="text-align: left;">-</td></tr><tr><td style="text-align: right;">12</td><td style="text-align: left;">M</td><td style="text-align: right;">29</td><td style="text-align: left;">d</td><td style="text-align: right;">46</td><td style="text-align: left;">u</td><td style="text-align: right;">63</td><td style="text-align: left;">_</td></tr><tr><td style="text-align: right;">13</td><td style="text-align: left;">N</td><td style="text-align: right;">30</td><td style="text-align: left;">e</td><td style="text-align: right;">47</td><td style="text-align: left;">v</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr><tr><td style="text-align: right;">14</td><td style="text-align: left;">O</td><td style="text-align: right;">31</td><td style="text-align: left;">f</td><td style="text-align: right;">48</td><td style="text-align: left;">w</td><td style="text-align: right;">(pad)</td><td style="text-align: left;">=</td></tr><tr><td style="text-align: right;">15</td><td style="text-align: left;">P</td><td style="text-align: right;">32</td><td style="text-align: left;">g</td><td style="text-align: right;">49</td><td style="text-align: left;">x</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr><tr><td style="text-align: right;">16</td><td style="text-align: left;">Q</td><td style="text-align: right;">33</td><td style="text-align: left;">h</td><td style="text-align: right;">50</td><td style="text-align: left;">y</td><td style="text-align: right;"></td><td style="text-align: left;"></td></tr></tbody></table>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-types summary">
  <h2>
    <a href="#types">Types</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:decode_case/0" data-no-tooltip="" translate="no">decode_case()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:encode_case/0" data-no-tooltip="" translate="no">encode_case()</a>

      </div>

    </div>

</div>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#decode16/2" data-no-tooltip="" translate="no">decode16(string, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Decodes a base 16 encoded string into a binary string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#decode16!/2" data-no-tooltip="" translate="no">decode16!(string, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Decodes a base 16 encoded string into a binary string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#decode32/2" data-no-tooltip="" translate="no">decode32(string, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Decodes a base 32 encoded string into a binary string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#decode32!/2" data-no-tooltip="" translate="no">decode32!(string, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Decodes a base 32 encoded string into a binary string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#decode64/2" data-no-tooltip="" translate="no">decode64(string, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Decodes a base 64 encoded string into a binary string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#decode64!/2" data-no-tooltip="" translate="no">decode64!(string, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Decodes a base 64 encoded string into a binary string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#encode16/2" data-no-tooltip="" translate="no">encode16(data, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Encodes a binary string into a base 16 encoded string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#encode32/2" data-no-tooltip="" translate="no">encode32(data, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Encodes a binary string into a base 32 encoded string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#encode64/2" data-no-tooltip="" translate="no">encode64(data, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Encodes a binary string into a base 64 encoded string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#hex_decode32/2" data-no-tooltip="" translate="no">hex_decode32(string, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Decodes a base 32 encoded string with extended hexadecimal alphabet
into a binary string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#hex_decode32!/2" data-no-tooltip="" translate="no">hex_decode32!(string, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Decodes a base 32 encoded string with extended hexadecimal alphabet
into a binary string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#hex_encode32/2" data-no-tooltip="" translate="no">hex_encode32(data, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Encodes a binary string into a base 32 encoded string with an
extended hexadecimal alphabet.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#url_decode64/2" data-no-tooltip="" translate="no">url_decode64(string, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Decodes a base 64 encoded string with URL and filename safe alphabet
into a binary string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#url_decode64!/2" data-no-tooltip="" translate="no">url_decode64!(string, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Decodes a base 64 encoded string with URL and filename safe alphabet
into a binary string.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#url_encode64/2" data-no-tooltip="" translate="no">url_encode64(data, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Encodes a binary string into a base 64 encoded string with URL and filename
safe alphabet.</p></div>

    </div>

</div>

      </section>


      <section id="types" class="details-list">
        <h1 class="section-heading">Types</h1>

        <div class="types-list">
<section class="detail" id="t:decode_case/0">

  <div class="detail-header">
    <a href="#t:decode_case/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">decode_case()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L96" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> decode_case() :: :upper | :lower | :mixed</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:encode_case/0">

  <div class="detail-header">
    <a href="#t:encode_case/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">encode_case()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L95" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> encode_case() :: :upper | :lower</pre>

      </div>


  </section>
</section>

        </div>
      </section>

      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>

        <div class="functions-list">
<section class="detail" id="decode16/2">

    <span id="decode16/1"></span>

  <div class="detail-header">
    <a href="#decode16/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">decode16(string, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L265" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> decode16(<a href="typespecs.xhtml#built-in-types">binary</a>(), [{:case, <a href="#t:decode_case/0">decode_case</a>()}]) :: {:ok, <a href="typespecs.xhtml#built-in-types">binary</a>()} | :error</pre>

      </div>

<p>Decodes a base 16 encoded string into a binary string.</p><h2 id="decode16/2-options" class="section-heading"><a href="#decode16/2-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><p>The accepted options are:</p><ul><li><code class="inline">:case</code> - specifies the character case to accept when decoding</li></ul><p>The values for <code class="inline">:case</code> can be:</p><ul><li><code class="inline">:upper</code> - only allows upper case characters (default)</li><li><code class="inline">:lower</code> - only allows lower case characters</li><li><code class="inline">:mixed</code> - allows mixed case characters</li></ul><h2 id="decode16/2-examples" class="section-heading"><a href="#decode16/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode16</samp><samp class="p" data-group-id="7202351084-1">(</samp><samp class="s">&quot;666F6F626172&quot;</samp><samp class="p" data-group-id="7202351084-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7202351084-2">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="7202351084-2">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode16</samp><samp class="p" data-group-id="7202351084-3">(</samp><samp class="s">&quot;666f6f626172&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:lower</samp><samp class="p" data-group-id="7202351084-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7202351084-4">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="7202351084-4">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode16</samp><samp class="p" data-group-id="7202351084-5">(</samp><samp class="s">&quot;666f6F626172&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:mixed</samp><samp class="p" data-group-id="7202351084-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="7202351084-6">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="7202351084-6">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="decode16!/2">

    <span id="decode16!/1"></span>

  <div class="detail-header">
    <a href="#decode16!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">decode16!(string, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L302" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> decode16!(<a href="typespecs.xhtml#built-in-types">binary</a>(), [{:case, <a href="#t:decode_case/0">decode_case</a>()}]) :: <a href="typespecs.xhtml#built-in-types">binary</a>()</pre>

      </div>

<p>Decodes a base 16 encoded string into a binary string.</p><h2 id="decode16!/2-options" class="section-heading"><a href="#decode16!/2-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><p>The accepted options are:</p><ul><li><code class="inline">:case</code> - specifies the character case to accept when decoding</li></ul><p>The values for <code class="inline">:case</code> can be:</p><ul><li><code class="inline">:upper</code> - only allows upper case characters (default)</li><li><code class="inline">:lower</code> - only allows lower case characters</li><li><code class="inline">:mixed</code> - allows mixed case characters</li></ul><p>An <a href="ArgumentError.xhtml"><code class="inline">ArgumentError</code></a> exception is raised if the padding is incorrect or
a non-alphabet character is present in the string.</p><h2 id="decode16!/2-examples" class="section-heading"><a href="#decode16!/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode16!</samp><samp class="p" data-group-id="1880265959-1">(</samp><samp class="s">&quot;666F6F626172&quot;</samp><samp class="p" data-group-id="1880265959-1">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode16!</samp><samp class="p" data-group-id="1880265959-2">(</samp><samp class="s">&quot;666f6f626172&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:lower</samp><samp class="p" data-group-id="1880265959-2">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode16!</samp><samp class="p" data-group-id="1880265959-3">(</samp><samp class="s">&quot;666f6F626172&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:mixed</samp><samp class="p" data-group-id="1880265959-3">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="decode32/2">

    <span id="decode32/1"></span>

  <div class="detail-header">
    <a href="#decode32/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">decode32(string, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L930" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> decode32(<a href="typespecs.xhtml#built-in-types">binary</a>(), case: <a href="#t:decode_case/0">decode_case</a>(), padding: <a href="typespecs.xhtml#built-in-types">boolean</a>()) ::
  {:ok, <a href="typespecs.xhtml#built-in-types">binary</a>()} | :error</pre>

      </div>

<p>Decodes a base 32 encoded string into a binary string.</p><h2 id="decode32/2-options" class="section-heading"><a href="#decode32/2-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><p>The accepted options are:</p><ul><li><code class="inline">:case</code> - specifies the character case to accept when decoding</li><li><code class="inline">:padding</code> - specifies whether to require padding</li></ul><p>The values for <code class="inline">:case</code> can be:</p><ul><li><code class="inline">:upper</code> - only allows  upper case characters (default)</li><li><code class="inline">:lower</code> - only allows lower case characters</li><li><code class="inline">:mixed</code> - allows mixed case characters</li></ul><p>The values for <code class="inline">:padding</code> can be:</p><ul><li><code class="inline">true</code> - requires the input string to be padded to the nearest multiple of 8 (default)</li><li><code class="inline">false</code> - ignores padding from the input string</li></ul><h2 id="decode32/2-examples" class="section-heading"><a href="#decode32/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode32</samp><samp class="p" data-group-id="4157503173-1">(</samp><samp class="s">&quot;MZXW6YTBOI======&quot;</samp><samp class="p" data-group-id="4157503173-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4157503173-2">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="4157503173-2">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode32</samp><samp class="p" data-group-id="4157503173-3">(</samp><samp class="s">&quot;mzxw6ytboi======&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:lower</samp><samp class="p" data-group-id="4157503173-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4157503173-4">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="4157503173-4">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode32</samp><samp class="p" data-group-id="4157503173-5">(</samp><samp class="s">&quot;mzXW6ytBOi======&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:mixed</samp><samp class="p" data-group-id="4157503173-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4157503173-6">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="4157503173-6">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode32</samp><samp class="p" data-group-id="4157503173-7">(</samp><samp class="s">&quot;MZXW6YTBOI&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="4157503173-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4157503173-8">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="4157503173-8">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="decode32!/2">

    <span id="decode32!/1"></span>

  <div class="detail-header">
    <a href="#decode32!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">decode32!(string, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L976" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> decode32!(<a href="typespecs.xhtml#built-in-types">binary</a>(), case: <a href="#t:decode_case/0">decode_case</a>(), padding: <a href="typespecs.xhtml#built-in-types">boolean</a>()) :: <a href="typespecs.xhtml#built-in-types">binary</a>()</pre>

      </div>

<p>Decodes a base 32 encoded string into a binary string.</p><p>An <a href="ArgumentError.xhtml"><code class="inline">ArgumentError</code></a> exception is raised if the padding is incorrect or
a non-alphabet character is present in the string.</p><h2 id="decode32!/2-options" class="section-heading"><a href="#decode32!/2-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><p>The accepted options are:</p><ul><li><code class="inline">:case</code> - specifies the character case to accept when decoding</li><li><code class="inline">:padding</code> - specifies whether to require padding</li></ul><p>The values for <code class="inline">:case</code> can be:</p><ul><li><code class="inline">:upper</code> - only allows upper case characters (default)</li><li><code class="inline">:lower</code> - only allows lower case characters</li><li><code class="inline">:mixed</code> - allows mixed case characters</li></ul><p>The values for <code class="inline">:padding</code> can be:</p><ul><li><code class="inline">true</code> - requires the input string to be padded to the nearest multiple of 8 (default)</li><li><code class="inline">false</code> - ignores padding from the input string</li></ul><h2 id="decode32!/2-examples" class="section-heading"><a href="#decode32!/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode32!</samp><samp class="p" data-group-id="1031121396-1">(</samp><samp class="s">&quot;MZXW6YTBOI======&quot;</samp><samp class="p" data-group-id="1031121396-1">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode32!</samp><samp class="p" data-group-id="1031121396-2">(</samp><samp class="s">&quot;mzxw6ytboi======&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:lower</samp><samp class="p" data-group-id="1031121396-2">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode32!</samp><samp class="p" data-group-id="1031121396-3">(</samp><samp class="s">&quot;mzXW6ytBOi======&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:mixed</samp><samp class="p" data-group-id="1031121396-3">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode32!</samp><samp class="p" data-group-id="1031121396-4">(</samp><samp class="s">&quot;MZXW6YTBOI&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="1031121396-4">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="decode64/2">

    <span id="decode64/1"></span>

  <div class="detail-header">
    <a href="#decode64/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">decode64(string, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L519" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> decode64(<a href="typespecs.xhtml#built-in-types">binary</a>(), ignore: :whitespace, padding: <a href="typespecs.xhtml#built-in-types">boolean</a>()) ::
  {:ok, <a href="typespecs.xhtml#built-in-types">binary</a>()} | :error</pre>

      </div>

<p>Decodes a base 64 encoded string into a binary string.</p><p>Accepts <code class="inline">ignore: :whitespace</code> option which will ignore all the
whitespace characters in the input string.</p><p>Accepts <code class="inline">padding: false</code> option which will ignore padding from
the input string.</p><h2 id="decode64/2-examples" class="section-heading"><a href="#decode64/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode64</samp><samp class="p" data-group-id="8261601218-1">(</samp><samp class="s">&quot;Zm9vYmFy&quot;</samp><samp class="p" data-group-id="8261601218-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8261601218-2">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="8261601218-2">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode64</samp><samp class="p" data-group-id="8261601218-3">(</samp><samp class="s">&quot;Zm9vYmFy</samp><samp class="se">\n</samp><samp class="s">&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">ignore</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:whitespace</samp><samp class="p" data-group-id="8261601218-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8261601218-4">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="8261601218-4">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode64</samp><samp class="p" data-group-id="8261601218-5">(</samp><samp class="s">&quot;Zm9vYg==&quot;</samp><samp class="p" data-group-id="8261601218-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8261601218-6">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foob&quot;</samp><samp class="p" data-group-id="8261601218-6">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode64</samp><samp class="p" data-group-id="8261601218-7">(</samp><samp class="s">&quot;Zm9vYg&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="8261601218-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8261601218-8">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foob&quot;</samp><samp class="p" data-group-id="8261601218-8">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="decode64!/2">

    <span id="decode64!/1"></span>

  <div class="detail-header">
    <a href="#decode64!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">decode64!(string, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L553" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> decode64!(<a href="typespecs.xhtml#built-in-types">binary</a>(), ignore: :whitespace, padding: <a href="typespecs.xhtml#built-in-types">boolean</a>()) :: <a href="typespecs.xhtml#built-in-types">binary</a>()</pre>

      </div>

<p>Decodes a base 64 encoded string into a binary string.</p><p>Accepts <code class="inline">ignore: :whitespace</code> option which will ignore all the
whitespace characters in the input string.</p><p>Accepts <code class="inline">padding: false</code> option which will ignore padding from
the input string.</p><p>An <a href="ArgumentError.xhtml"><code class="inline">ArgumentError</code></a> exception is raised if the padding is incorrect or
a non-alphabet character is present in the string.</p><h2 id="decode64!/2-examples" class="section-heading"><a href="#decode64!/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode64!</samp><samp class="p" data-group-id="0883360537-1">(</samp><samp class="s">&quot;Zm9vYmFy&quot;</samp><samp class="p" data-group-id="0883360537-1">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode64!</samp><samp class="p" data-group-id="0883360537-2">(</samp><samp class="s">&quot;Zm9vYmFy</samp><samp class="se">\n</samp><samp class="s">&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">ignore</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:whitespace</samp><samp class="p" data-group-id="0883360537-2">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode64!</samp><samp class="p" data-group-id="0883360537-3">(</samp><samp class="s">&quot;Zm9vYg==&quot;</samp><samp class="p" data-group-id="0883360537-3">)</samp><samp class="w">
</samp><samp class="s">&quot;foob&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">decode64!</samp><samp class="p" data-group-id="0883360537-4">(</samp><samp class="s">&quot;Zm9vYg&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="0883360537-4">)</samp><samp class="w">
</samp><samp class="s">&quot;foob&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="encode16/2">

    <span id="encode16/1"></span>

  <div class="detail-header">
    <a href="#encode16/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">encode16(data, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L178" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> encode16(<a href="typespecs.xhtml#built-in-types">binary</a>(), [{:case, <a href="#t:encode_case/0">encode_case</a>()}]) :: <a href="typespecs.xhtml#built-in-types">binary</a>()</pre>

      </div>

<p>Encodes a binary string into a base 16 encoded string.</p><h2 id="encode16/2-options" class="section-heading"><a href="#encode16/2-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><p>The accepted options are:</p><ul><li><code class="inline">:case</code> - specifies the character case to use when encoding</li></ul><p>The values for <code class="inline">:case</code> can be:</p><ul><li><code class="inline">:upper</code> - uses upper case characters (default)</li><li><code class="inline">:lower</code> - uses lower case characters</li></ul><h2 id="encode16/2-examples" class="section-heading"><a href="#encode16/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">encode16</samp><samp class="p" data-group-id="6658058923-1">(</samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="6658058923-1">)</samp><samp class="w">
</samp><samp class="s">&quot;666F6F626172&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">encode16</samp><samp class="p" data-group-id="6658058923-2">(</samp><samp class="s">&quot;foobar&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:lower</samp><samp class="p" data-group-id="6658058923-2">)</samp><samp class="w">
</samp><samp class="s">&quot;666f6f626172&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="encode32/2">

    <span id="encode32/1"></span>

  <div class="detail-header">
    <a href="#encode32/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">encode32(data, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L773" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> encode32(<a href="typespecs.xhtml#built-in-types">binary</a>(), case: <a href="#t:encode_case/0">encode_case</a>(), padding: <a href="typespecs.xhtml#built-in-types">boolean</a>()) :: <a href="typespecs.xhtml#built-in-types">binary</a>()</pre>

      </div>

<p>Encodes a binary string into a base 32 encoded string.</p><h2 id="encode32/2-options" class="section-heading"><a href="#encode32/2-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><p>The accepted options are:</p><ul><li><code class="inline">:case</code> - specifies the character case to use when encoding</li><li><code class="inline">:padding</code> - specifies whether to apply padding</li></ul><p>The values for <code class="inline">:case</code> can be:</p><ul><li><code class="inline">:upper</code> - uses upper case characters (default)</li><li><code class="inline">:lower</code> - uses lower case characters</li></ul><p>The values for <code class="inline">:padding</code> can be:</p><ul><li><code class="inline">true</code> - pad the output string to the nearest multiple of 8 (default)</li><li><code class="inline">false</code> - omit padding from the output string</li></ul><h2 id="encode32/2-examples" class="section-heading"><a href="#encode32/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">encode32</samp><samp class="p" data-group-id="0399855460-1">(</samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="0399855460-1">)</samp><samp class="w">
</samp><samp class="s">&quot;MZXW6YTBOI======&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">encode32</samp><samp class="p" data-group-id="0399855460-2">(</samp><samp class="s">&quot;foobar&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:lower</samp><samp class="p" data-group-id="0399855460-2">)</samp><samp class="w">
</samp><samp class="s">&quot;mzxw6ytboi======&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">encode32</samp><samp class="p" data-group-id="0399855460-3">(</samp><samp class="s">&quot;foobar&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="0399855460-3">)</samp><samp class="w">
</samp><samp class="s">&quot;MZXW6YTBOI&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="encode64/2">

    <span id="encode64/1"></span>

  <div class="detail-header">
    <a href="#encode64/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">encode64(data, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L393" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> encode64(<a href="typespecs.xhtml#built-in-types">binary</a>(), [{:padding, <a href="typespecs.xhtml#built-in-types">boolean</a>()}]) :: <a href="typespecs.xhtml#built-in-types">binary</a>()</pre>

      </div>

<p>Encodes a binary string into a base 64 encoded string.</p><p>Accepts <code class="inline">padding: false</code> option which will omit padding from
the output string.</p><h2 id="encode64/2-examples" class="section-heading"><a href="#encode64/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">encode64</samp><samp class="p" data-group-id="1203532066-1">(</samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="1203532066-1">)</samp><samp class="w">
</samp><samp class="s">&quot;Zm9vYmFy&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">encode64</samp><samp class="p" data-group-id="1203532066-2">(</samp><samp class="s">&quot;foob&quot;</samp><samp class="p" data-group-id="1203532066-2">)</samp><samp class="w">
</samp><samp class="s">&quot;Zm9vYg==&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">encode64</samp><samp class="p" data-group-id="1203532066-3">(</samp><samp class="s">&quot;foob&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="1203532066-3">)</samp><samp class="w">
</samp><samp class="s">&quot;Zm9vYg&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="hex_decode32/2">

    <span id="hex_decode32/1"></span>

  <div class="detail-header">
    <a href="#hex_decode32/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">hex_decode32(string, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L1024" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> hex_decode32(<a href="typespecs.xhtml#built-in-types">binary</a>(), case: <a href="#t:decode_case/0">decode_case</a>(), padding: <a href="typespecs.xhtml#built-in-types">boolean</a>()) ::
  {:ok, <a href="typespecs.xhtml#built-in-types">binary</a>()} | :error</pre>

      </div>

<p>Decodes a base 32 encoded string with extended hexadecimal alphabet
into a binary string.</p><h2 id="hex_decode32/2-options" class="section-heading"><a href="#hex_decode32/2-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><p>The accepted options are:</p><ul><li><code class="inline">:case</code> - specifies the character case to accept when decoding</li><li><code class="inline">:padding</code> - specifies whether to require padding</li></ul><p>The values for <code class="inline">:case</code> can be:</p><ul><li><code class="inline">:upper</code> - only allows upper case characters (default)</li><li><code class="inline">:lower</code> - only allows lower case characters</li><li><code class="inline">:mixed</code> - allows mixed case characters</li></ul><p>The values for <code class="inline">:padding</code> can be:</p><ul><li><code class="inline">true</code> - requires the input string to be padded to the nearest multiple of 8 (default)</li><li><code class="inline">false</code> - ignores padding from the input string</li></ul><h2 id="hex_decode32/2-examples" class="section-heading"><a href="#hex_decode32/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_decode32</samp><samp class="p" data-group-id="2221327286-1">(</samp><samp class="s">&quot;CPNMUOJ1E8======&quot;</samp><samp class="p" data-group-id="2221327286-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="2221327286-2">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="2221327286-2">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_decode32</samp><samp class="p" data-group-id="2221327286-3">(</samp><samp class="s">&quot;cpnmuoj1e8======&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:lower</samp><samp class="p" data-group-id="2221327286-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="2221327286-4">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="2221327286-4">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_decode32</samp><samp class="p" data-group-id="2221327286-5">(</samp><samp class="s">&quot;cpnMuOJ1E8======&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:mixed</samp><samp class="p" data-group-id="2221327286-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="2221327286-6">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="2221327286-6">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_decode32</samp><samp class="p" data-group-id="2221327286-7">(</samp><samp class="s">&quot;CPNMUOJ1E8&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="2221327286-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="2221327286-8">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="2221327286-8">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="hex_decode32!/2">

    <span id="hex_decode32!/1"></span>

  <div class="detail-header">
    <a href="#hex_decode32!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">hex_decode32!(string, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L1071" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> hex_decode32!(<a href="typespecs.xhtml#built-in-types">binary</a>(), case: <a href="#t:decode_case/0">decode_case</a>(), padding: <a href="typespecs.xhtml#built-in-types">boolean</a>()) :: <a href="typespecs.xhtml#built-in-types">binary</a>()</pre>

      </div>

<p>Decodes a base 32 encoded string with extended hexadecimal alphabet
into a binary string.</p><p>An <a href="ArgumentError.xhtml"><code class="inline">ArgumentError</code></a> exception is raised if the padding is incorrect or
a non-alphabet character is present in the string.</p><h2 id="hex_decode32!/2-options" class="section-heading"><a href="#hex_decode32!/2-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><p>The accepted options are:</p><ul><li><code class="inline">:case</code> - specifies the character case to accept when decoding</li><li><code class="inline">:padding</code> - specifies whether to require padding</li></ul><p>The values for <code class="inline">:case</code> can be:</p><ul><li><code class="inline">:upper</code> - only allows upper case characters (default)</li><li><code class="inline">:lower</code> - only allows lower case characters</li><li><code class="inline">:mixed</code> - allows mixed case characters</li></ul><p>The values for <code class="inline">:padding</code> can be:</p><ul><li><code class="inline">true</code> - requires the input string to be padded to the nearest multiple of 8 (default)</li><li><code class="inline">false</code> - ignores padding from the input string</li></ul><h2 id="hex_decode32!/2-examples" class="section-heading"><a href="#hex_decode32!/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_decode32!</samp><samp class="p" data-group-id="0671215384-1">(</samp><samp class="s">&quot;CPNMUOJ1E8======&quot;</samp><samp class="p" data-group-id="0671215384-1">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_decode32!</samp><samp class="p" data-group-id="0671215384-2">(</samp><samp class="s">&quot;cpnmuoj1e8======&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:lower</samp><samp class="p" data-group-id="0671215384-2">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_decode32!</samp><samp class="p" data-group-id="0671215384-3">(</samp><samp class="s">&quot;cpnMuOJ1E8======&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:mixed</samp><samp class="p" data-group-id="0671215384-3">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_decode32!</samp><samp class="p" data-group-id="0671215384-4">(</samp><samp class="s">&quot;CPNMUOJ1E8&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="0671215384-4">)</samp><samp class="w">
</samp><samp class="s">&quot;foobar&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="hex_encode32/2">

    <span id="hex_encode32/1"></span>

  <div class="detail-header">
    <a href="#hex_encode32/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">hex_encode32(data, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L816" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> hex_encode32(<a href="typespecs.xhtml#built-in-types">binary</a>(), case: <a href="#t:encode_case/0">encode_case</a>(), padding: <a href="typespecs.xhtml#built-in-types">boolean</a>()) :: <a href="typespecs.xhtml#built-in-types">binary</a>()</pre>

      </div>

<p>Encodes a binary string into a base 32 encoded string with an
extended hexadecimal alphabet.</p><h2 id="hex_encode32/2-options" class="section-heading"><a href="#hex_encode32/2-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><p>The accepted options are:</p><ul><li><code class="inline">:case</code> - specifies the character case to use when encoding</li><li><code class="inline">:padding</code> - specifies whether to apply padding</li></ul><p>The values for <code class="inline">:case</code> can be:</p><ul><li><code class="inline">:upper</code> - uses upper case characters (default)</li><li><code class="inline">:lower</code> - uses lower case characters</li></ul><p>The values for <code class="inline">:padding</code> can be:</p><ul><li><code class="inline">true</code> - pad the output string to the nearest multiple of 8 (default)</li><li><code class="inline">false</code> - omit padding from the output string</li></ul><h2 id="hex_encode32/2-examples" class="section-heading"><a href="#hex_encode32/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_encode32</samp><samp class="p" data-group-id="7467584154-1">(</samp><samp class="s">&quot;foobar&quot;</samp><samp class="p" data-group-id="7467584154-1">)</samp><samp class="w">
</samp><samp class="s">&quot;CPNMUOJ1E8======&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_encode32</samp><samp class="p" data-group-id="7467584154-2">(</samp><samp class="s">&quot;foobar&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">case</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:lower</samp><samp class="p" data-group-id="7467584154-2">)</samp><samp class="w">
</samp><samp class="s">&quot;cpnmuoj1e8======&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">hex_encode32</samp><samp class="p" data-group-id="7467584154-3">(</samp><samp class="s">&quot;foobar&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="7467584154-3">)</samp><samp class="w">
</samp><samp class="s">&quot;CPNMUOJ1E8&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="url_decode64/2">

    <span id="url_decode64/1"></span>

  <div class="detail-header">
    <a href="#url_decode64/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">url_decode64(string, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L581" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> url_decode64(<a href="typespecs.xhtml#built-in-types">binary</a>(), ignore: :whitespace, padding: <a href="typespecs.xhtml#built-in-types">boolean</a>()) ::
  {:ok, <a href="typespecs.xhtml#built-in-types">binary</a>()} | :error</pre>

      </div>

<p>Decodes a base 64 encoded string with URL and filename safe alphabet
into a binary string.</p><p>Accepts <code class="inline">ignore: :whitespace</code> option which will ignore all the
whitespace characters in the input string.</p><p>Accepts <code class="inline">padding: false</code> option which will ignore padding from
the input string.</p><h2 id="url_decode64/2-examples" class="section-heading"><a href="#url_decode64/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">url_decode64</samp><samp class="p" data-group-id="8561973912-1">(</samp><samp class="s">&quot;_3_-_A==&quot;</samp><samp class="p" data-group-id="8561973912-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8561973912-2">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="8561973912-3">&lt;&lt;</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">127</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">254</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">252</samp><samp class="p" data-group-id="8561973912-3">&gt;&gt;</samp><samp class="p" data-group-id="8561973912-2">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">url_decode64</samp><samp class="p" data-group-id="8561973912-4">(</samp><samp class="s">&quot;_3_-_A==</samp><samp class="se">\n</samp><samp class="s">&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">ignore</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:whitespace</samp><samp class="p" data-group-id="8561973912-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8561973912-5">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="8561973912-6">&lt;&lt;</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">127</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">254</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">252</samp><samp class="p" data-group-id="8561973912-6">&gt;&gt;</samp><samp class="p" data-group-id="8561973912-5">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">url_decode64</samp><samp class="p" data-group-id="8561973912-7">(</samp><samp class="s">&quot;_3_-_A&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="8561973912-7">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8561973912-8">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="8561973912-9">&lt;&lt;</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">127</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">254</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">252</samp><samp class="p" data-group-id="8561973912-9">&gt;&gt;</samp><samp class="p" data-group-id="8561973912-8">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="url_decode64!/2">

    <span id="url_decode64!/1"></span>

  <div class="detail-header">
    <a href="#url_decode64!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">url_decode64!(string, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L613" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> url_decode64!(<a href="typespecs.xhtml#built-in-types">binary</a>(), ignore: :whitespace, padding: <a href="typespecs.xhtml#built-in-types">boolean</a>()) :: <a href="typespecs.xhtml#built-in-types">binary</a>()</pre>

      </div>

<p>Decodes a base 64 encoded string with URL and filename safe alphabet
into a binary string.</p><p>Accepts <code class="inline">ignore: :whitespace</code> option which will ignore all the
whitespace characters in the input string.</p><p>Accepts <code class="inline">padding: false</code> option which will ignore padding from
the input string.</p><p>An <a href="ArgumentError.xhtml"><code class="inline">ArgumentError</code></a> exception is raised if the padding is incorrect or
a non-alphabet character is present in the string.</p><h2 id="url_decode64!/2-examples" class="section-heading"><a href="#url_decode64!/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">url_decode64!</samp><samp class="p" data-group-id="1344586927-1">(</samp><samp class="s">&quot;_3_-_A==&quot;</samp><samp class="p" data-group-id="1344586927-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1344586927-2">&lt;&lt;</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">127</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">254</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">252</samp><samp class="p" data-group-id="1344586927-2">&gt;&gt;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">url_decode64!</samp><samp class="p" data-group-id="1344586927-3">(</samp><samp class="s">&quot;_3_-_A==</samp><samp class="se">\n</samp><samp class="s">&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">ignore</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:whitespace</samp><samp class="p" data-group-id="1344586927-3">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1344586927-4">&lt;&lt;</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">127</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">254</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">252</samp><samp class="p" data-group-id="1344586927-4">&gt;&gt;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">url_decode64!</samp><samp class="p" data-group-id="1344586927-5">(</samp><samp class="s">&quot;_3_-_A&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="1344586927-5">)</samp><samp class="w">
</samp><samp class="p" data-group-id="1344586927-6">&lt;&lt;</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">127</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">254</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">252</samp><samp class="p" data-group-id="1344586927-6">&gt;&gt;</samp></code></pre>
  </section>
</section>
<section class="detail" id="url_encode64/2">

    <span id="url_encode64/1"></span>

  <div class="detail-header">
    <a href="#url_encode64/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">url_encode64(data, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/base.ex#L415" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> url_encode64(<a href="typespecs.xhtml#built-in-types">binary</a>(), [{:padding, <a href="typespecs.xhtml#built-in-types">boolean</a>()}]) :: <a href="typespecs.xhtml#built-in-types">binary</a>()</pre>

      </div>

<p>Encodes a binary string into a base 64 encoded string with URL and filename
safe alphabet.</p><p>Accepts <code class="inline">padding: false</code> option which will omit padding from
the output string.</p><h2 id="url_encode64/2-examples" class="section-heading"><a href="#url_encode64/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">url_encode64</samp><samp class="p" data-group-id="5320353502-1">(</samp><samp class="p" data-group-id="5320353502-2">&lt;&lt;</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">127</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">254</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">252</samp><samp class="p" data-group-id="5320353502-2">&gt;&gt;</samp><samp class="p" data-group-id="5320353502-1">)</samp><samp class="w">
</samp><samp class="s">&quot;_3_-_A==&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Base</samp><samp class="o">.</samp><samp class="n">url_encode64</samp><samp class="p" data-group-id="5320353502-3">(</samp><samp class="p" data-group-id="5320353502-4">&lt;&lt;</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">127</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">254</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">252</samp><samp class="p" data-group-id="5320353502-4">&gt;&gt;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">padding</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="5320353502-3">)</samp><samp class="w">
</samp><samp class="s">&quot;_3_-_A&quot;</samp></code></pre>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
