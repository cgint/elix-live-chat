<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Version - Elixir v1.18.4</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Version 
    </h1>


      <section id="moduledoc" class="docstring">
<p>Functions for parsing and matching versions against requirements.</p><p>A version is a string in a specific format or a <a href="Version.xhtml"><code class="inline">Version</code></a>
generated after parsing via <a href="#parse/1"><code class="inline">Version.parse/1</code></a>.</p><p>Although Elixir projects are not required to follow SemVer,
they must follow the format outlined on <a href="https://semver.org/">SemVer 2.0 schema</a>.</p><h2 id="module-versions">Versions</h2><p>In a nutshell, a version is represented by three numbers:</p><pre><code class="makeup elixir" translate="no"><samp class="nc">MAJOR.MINOR.PATCH</samp></code></pre><p>Pre-releases are supported by optionally appending a hyphen and a series of
period-separated identifiers immediately following the patch version.
Identifiers consist of only ASCII alphanumeric characters and hyphens (<code class="inline">[0-9A-Za-z-]</code>):</p><pre><code class="makeup elixir" translate="no"><samp class="s">&quot;1.0.0-alpha.3&quot;</samp></code></pre><p>Build information can be added by appending a plus sign and a series of
dot-separated identifiers immediately following the patch or pre-release version.
Identifiers consist of only ASCII alphanumeric characters and hyphens (<code class="inline">[0-9A-Za-z-]</code>):</p><pre><code class="makeup elixir" translate="no"><samp class="s">&quot;1.0.0-alpha.3+20130417140000.amd64&quot;</samp></code></pre><h2 id="module-requirements">Requirements</h2><p>Requirements allow you to specify which versions of a given
dependency you are willing to work against. Requirements support the common
comparison operators such as <code class="inline">&gt;</code>, <code class="inline">&gt;=</code>, <code class="inline">&lt;</code>, <code class="inline">&lt;=</code>, and <code class="inline">==</code> that work as one
would expect, and additionally the special operator <code class="inline">~&gt;</code> described in detail
further below.</p><pre><code class="makeup elixir" translate="no"><samp class="c1"># Only version 2.0.0</samp><samp class="w">
</samp><samp class="s">&quot;== 2.0.0&quot;</samp><samp class="w">

</samp><samp class="c1"># Anything later than 2.0.0</samp><samp class="w">
</samp><samp class="s">&quot;&gt; 2.0.0&quot;</samp></code></pre><p>Requirements also support <code class="inline">and</code> and <code class="inline">or</code> for complex conditions:</p><pre><code class="makeup elixir" translate="no"><samp class="c1"># 2.0.0 and later until 2.1.0</samp><samp class="w">
</samp><samp class="s">&quot;&gt;= 2.0.0 and &lt; 2.1.0&quot;</samp></code></pre><p>Since the example above is such a common requirement, it can
be expressed as:</p><pre><code class="makeup elixir" translate="no"><samp class="s">&quot;~&gt; 2.0.0&quot;</samp></code></pre><p><code class="inline">~&gt;</code> will never include pre-release versions of its upper bound,
regardless of the usage of the <code class="inline">:allow_pre</code> option, or whether the operand
is a pre-release version. It can also be used to set an upper bound on only the major
version part. See the table below for <code class="inline">~&gt;</code> requirements and
their corresponding translations.</p><table><thead><tr><th style="text-align: left;"><code class="inline">~&gt;</code></th><th style="text-align: left;">Translation</th></tr></thead><tbody><tr><td style="text-align: left;"><code class="inline">~&gt; 2.0.0</code></td><td style="text-align: left;"><code class="inline">&gt;= 2.0.0 and &lt; 2.1.0</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.1.2</code></td><td style="text-align: left;"><code class="inline">&gt;= 2.1.2 and &lt; 2.2.0</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.1.3-dev</code></td><td style="text-align: left;"><code class="inline">&gt;= 2.1.3-dev and &lt; 2.2.0</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.0</code></td><td style="text-align: left;"><code class="inline">&gt;= 2.0.0 and &lt; 3.0.0</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.1</code></td><td style="text-align: left;"><code class="inline">&gt;= 2.1.0 and &lt; 3.0.0</code></td></tr></tbody></table><p>The requirement operand after the <code class="inline">~&gt;</code> is allowed to omit the patch version,
allowing us to express <code class="inline">~&gt; 2.1</code> or <code class="inline">~&gt; 2.1-dev</code>, something that wouldn't be allowed
when using the common comparison operators.</p><p>When the <code class="inline">:allow_pre</code> option is set <code class="inline">false</code> in <a href="#match?/3"><code class="inline">Version.match?/3</code></a>, the requirement
will not match a pre-release version unless the operand is a pre-release version.
The default is to always allow pre-releases but note that in
Hex <code class="inline">:allow_pre</code> is set to <code class="inline">false</code>. See the table below for examples.</p><table><thead><tr><th style="text-align: left;">Requirement</th><th style="text-align: left;">Version</th><th style="text-align: left;"><code class="inline">:allow_pre</code></th><th style="text-align: left;">Matches</th></tr></thead><tbody><tr><td style="text-align: left;"><code class="inline">~&gt; 2.0</code></td><td style="text-align: left;"><code class="inline">2.1.0</code></td><td style="text-align: left;"><code class="inline">true</code> or <code class="inline">false</code></td><td style="text-align: left;"><code class="inline">true</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.0</code></td><td style="text-align: left;"><code class="inline">3.0.0</code></td><td style="text-align: left;"><code class="inline">true</code> or <code class="inline">false</code></td><td style="text-align: left;"><code class="inline">false</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.0.0</code></td><td style="text-align: left;"><code class="inline">2.0.5</code></td><td style="text-align: left;"><code class="inline">true</code> or <code class="inline">false</code></td><td style="text-align: left;"><code class="inline">true</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.0.0</code></td><td style="text-align: left;"><code class="inline">2.1.0</code></td><td style="text-align: left;"><code class="inline">true</code> or <code class="inline">false</code></td><td style="text-align: left;"><code class="inline">false</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.1.2</code></td><td style="text-align: left;"><code class="inline">2.1.6-dev</code></td><td style="text-align: left;"><code class="inline">true</code></td><td style="text-align: left;"><code class="inline">true</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.1.2</code></td><td style="text-align: left;"><code class="inline">2.1.6-dev</code></td><td style="text-align: left;"><code class="inline">false</code></td><td style="text-align: left;"><code class="inline">false</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.1-dev</code></td><td style="text-align: left;"><code class="inline">2.2.0-dev</code></td><td style="text-align: left;"><code class="inline">true</code> or <code class="inline">false</code></td><td style="text-align: left;"><code class="inline">true</code></td></tr><tr><td style="text-align: left;"><code class="inline">~&gt; 2.1.2-dev</code></td><td style="text-align: left;"><code class="inline">2.1.6-dev</code></td><td style="text-align: left;"><code class="inline">true</code> or <code class="inline">false</code></td><td style="text-align: left;"><code class="inline">true</code></td></tr><tr><td style="text-align: left;"><code class="inline">&gt;= 2.1.0</code></td><td style="text-align: left;"><code class="inline">2.2.0-dev</code></td><td style="text-align: left;"><code class="inline">true</code></td><td style="text-align: left;"><code class="inline">true</code></td></tr><tr><td style="text-align: left;"><code class="inline">&gt;= 2.1.0</code></td><td style="text-align: left;"><code class="inline">2.2.0-dev</code></td><td style="text-align: left;"><code class="inline">false</code></td><td style="text-align: left;"><code class="inline">false</code></td></tr><tr><td style="text-align: left;"><code class="inline">&gt;= 2.1.0-dev</code></td><td style="text-align: left;"><code class="inline">2.2.6-dev</code></td><td style="text-align: left;"><code class="inline">true</code> or <code class="inline">false</code></td><td style="text-align: left;"><code class="inline">true</code></td></tr></tbody></table>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-types summary">
  <h2>
    <a href="#types">Types</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:build/0" data-no-tooltip="" translate="no">build()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:major/0" data-no-tooltip="" translate="no">major()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:minor/0" data-no-tooltip="" translate="no">minor()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:patch/0" data-no-tooltip="" translate="no">patch()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:pre/0" data-no-tooltip="" translate="no">pre()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:requirement/0" data-no-tooltip="" translate="no">requirement()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:t/0" data-no-tooltip="" translate="no">t()</a>

      </div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#t:version/0" data-no-tooltip="" translate="no">version()</a>

      </div>

    </div>

</div>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#__struct__/0" data-no-tooltip="" translate="no">%Version{}</a>

      </div>

        <div class="summary-synopsis"><p>The Version struct.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#compare/2" data-no-tooltip="" translate="no">compare(version1, version2)</a>

      </div>

        <div class="summary-synopsis"><p>Compares two versions.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#compile_requirement/1" data-no-tooltip="" translate="no">compile_requirement(requirement)</a>

      </div>

        <div class="summary-synopsis"><p>Compiles a requirement to an internal representation that may optimize matching.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#match?/3" data-no-tooltip="" translate="no">match?(version, requirement, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Checks if the given version matches the specification.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#parse/1" data-no-tooltip="" translate="no">parse(string)</a>

      </div>

        <div class="summary-synopsis"><p>Parses a version string into a <a><code class="inline">Version</code></a> struct.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#parse!/1" data-no-tooltip="" translate="no">parse!(string)</a>

      </div>

        <div class="summary-synopsis"><p>Parses a version string into a <a><code class="inline">Version</code></a>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#parse_requirement/1" data-no-tooltip="" translate="no">parse_requirement(string)</a>

      </div>

        <div class="summary-synopsis"><p>Parses a version requirement string into a <a><code class="inline">Version.Requirement</code></a> struct.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#parse_requirement!/1" data-no-tooltip="" translate="no">parse_requirement!(string)</a>

      </div>

        <div class="summary-synopsis"><p>Parses a version requirement string into a <a><code class="inline">Version.Requirement</code></a> struct.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_string/1" data-no-tooltip="" translate="no">to_string(version)</a>

      </div>

        <div class="summary-synopsis"><p>Converts the given version to a string.</p></div>

    </div>

</div>

      </section>


      <section id="types" class="details-list">
        <h1 class="section-heading">Types</h1>

        <div class="types-list">
<section class="detail" id="t:build/0">

  <div class="detail-header">
    <a href="#t:build/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">build()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L114" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> build() :: <a href="String.xhtml#t:t/0">String.t</a>() | nil</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:major/0">

  <div class="detail-header">
    <a href="#t:major/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">major()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L110" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> major() :: <a href="typespecs.xhtml#basic-types">non_neg_integer</a>()</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:minor/0">

  <div class="detail-header">
    <a href="#t:minor/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">minor()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L111" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> minor() :: <a href="typespecs.xhtml#basic-types">non_neg_integer</a>()</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:patch/0">

  <div class="detail-header">
    <a href="#t:patch/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">patch()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L112" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> patch() :: <a href="typespecs.xhtml#basic-types">non_neg_integer</a>()</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:pre/0">

  <div class="detail-header">
    <a href="#t:pre/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">pre()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L113" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> pre() :: [<a href="String.xhtml#t:t/0">String.t</a>() | <a href="typespecs.xhtml#basic-types">non_neg_integer</a>()]</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:requirement/0">

  <div class="detail-header">
    <a href="#t:requirement/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">requirement()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L109" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> requirement() :: <a href="String.xhtml#t:t/0">String.t</a>() | <a href="Version.Requirement.xhtml#t:t/0">Version.Requirement.t</a>()</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:t/0">

  <div class="detail-header">
    <a href="#t:t/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">t()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L115" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> t() :: %Version{
  build: <a href="#t:build/0">build</a>(),
  major: <a href="#t:major/0">major</a>(),
  minor: <a href="#t:minor/0">minor</a>(),
  patch: <a href="#t:patch/0">patch</a>(),
  pre: <a href="#t:pre/0">pre</a>()
}</pre>

      </div>


  </section>
</section>
<section class="detail" id="t:version/0">

  <div class="detail-header">
    <a href="#t:version/0" class="detail-link" data-no-tooltip="" aria-label="Link to this type">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">version()</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L108" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@type</span> version() :: <a href="String.xhtml#t:t/0">String.t</a>() | <a href="#t:t/0">t</a>()</pre>

      </div>


  </section>
</section>

        </div>
      </section>

      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>

        <div class="functions-list">
<section class="detail" id="__struct__/0">

  <div class="detail-header">
    <a href="#__struct__/0" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">%Version{}</h1>

        <span class="note">(struct)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L106" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

<p>The Version struct.</p><p>It contains the fields <code class="inline">:major</code>, <code class="inline">:minor</code>, <code class="inline">:patch</code>, <code class="inline">:pre</code>, and
<code class="inline">:build</code> according to SemVer 2.0, where <code class="inline">:pre</code> is a list.</p><p>You can read those fields but you should not create a new <a href="Version.xhtml"><code class="inline">Version</code></a>
directly via the struct syntax. Instead use the functions in this
module.</p>
  </section>
</section>
<section class="detail" id="compare/2">

  <div class="detail-header">
    <a href="#compare/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">compare(version1, version2)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L346" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> compare(<a href="#t:version/0">version</a>(), <a href="#t:version/0">version</a>()) :: :gt | :eq | :lt</pre>

      </div>

<p>Compares two versions.</p><p>Returns <code class="inline">:gt</code> if the first version is greater than the second one, and <code class="inline">:lt</code>
for vice versa. If the two versions are equal, <code class="inline">:eq</code> is returned.</p><p>Pre-releases are strictly less than their corresponding release versions.</p><p>Patch segments are compared lexicographically if they are alphanumeric, and
numerically otherwise.</p><p>Build segments are ignored: if two versions differ only in their build segment
they are considered to be equal.</p><p>Raises a <a href="Version.InvalidVersionError.xhtml"><code class="inline">Version.InvalidVersionError</code></a> exception if any of the two given
versions are not parsable. If given an already parsed version this function
won't raise.</p><h2 id="compare/2-examples" class="section-heading"><a href="#compare/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">compare</samp><samp class="p" data-group-id="8723370538-1">(</samp><samp class="s">&quot;2.0.1-alpha1&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;2.0.0&quot;</samp><samp class="p" data-group-id="8723370538-1">)</samp><samp class="w">
</samp><samp class="ss">:gt</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">compare</samp><samp class="p" data-group-id="8723370538-2">(</samp><samp class="s">&quot;1.0.0-beta&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;1.0.0-rc1&quot;</samp><samp class="p" data-group-id="8723370538-2">)</samp><samp class="w">
</samp><samp class="ss">:lt</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">compare</samp><samp class="p" data-group-id="8723370538-3">(</samp><samp class="s">&quot;1.0.0-10&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;1.0.0-2&quot;</samp><samp class="p" data-group-id="8723370538-3">)</samp><samp class="w">
</samp><samp class="ss">:gt</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">compare</samp><samp class="p" data-group-id="8723370538-4">(</samp><samp class="s">&quot;2.0.1+build0&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;2.0.1&quot;</samp><samp class="p" data-group-id="8723370538-4">)</samp><samp class="w">
</samp><samp class="ss">:eq</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">compare</samp><samp class="p" data-group-id="8723370538-5">(</samp><samp class="s">&quot;invalid&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;2.0.1&quot;</samp><samp class="p" data-group-id="8723370538-5">)</samp><samp class="w">
</samp><samp class="gt">** (Version.InvalidVersionError) invalid version: &quot;invalid&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="compile_requirement/1">

  <div class="detail-header">
    <a href="#compile_requirement/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">compile_requirement(requirement)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L463" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> compile_requirement(<a href="Version.Requirement.xhtml#t:t/0">Version.Requirement.t</a>()) :: <a href="Version.Requirement.xhtml#t:t/0">Version.Requirement.t</a>()</pre>

      </div>

<p>Compiles a requirement to an internal representation that may optimize matching.</p><p>The internal representation is opaque.</p>
  </section>
</section>
<section class="detail" id="match?/3">

    <span id="match?/2"></span>

  <div class="detail-header">
    <a href="#match?/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">match?(version, requirement, opts \\ [])</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L296" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> match?(<a href="#t:version/0">version</a>(), <a href="#t:requirement/0">requirement</a>(), <a href="typespecs.xhtml#built-in-types">keyword</a>()) :: <a href="typespecs.xhtml#built-in-types">boolean</a>()</pre>

      </div>

<p>Checks if the given version matches the specification.</p><p>Returns <code class="inline">true</code> if <code class="inline">version</code> satisfies <code class="inline">requirement</code>, <code class="inline">false</code> otherwise.
Raises a <a href="Version.InvalidRequirementError.xhtml"><code class="inline">Version.InvalidRequirementError</code></a> exception if <code class="inline">requirement</code> is not
parsable, or a <a href="Version.InvalidVersionError.xhtml"><code class="inline">Version.InvalidVersionError</code></a> exception if <code class="inline">version</code> is not parsable.
If given an already parsed version and requirement this function won't
raise.</p><h2 id="match?/3-options" class="section-heading"><a href="#match?/3-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><ul><li><code class="inline">:allow_pre</code> (boolean) - when <code class="inline">false</code>, pre-release versions will not match
unless the operand is a pre-release version. Defaults to <code class="inline">true</code>.
For examples, please refer to the table above under the &quot;Requirements&quot; section.</li></ul><h2 id="match?/3-examples" class="section-heading"><a href="#match?/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">match?</samp><samp class="p" data-group-id="1189494452-1">(</samp><samp class="s">&quot;2.0.0&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;&gt; 1.0.0&quot;</samp><samp class="p" data-group-id="1189494452-1">)</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">match?</samp><samp class="p" data-group-id="1189494452-2">(</samp><samp class="s">&quot;2.0.0&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;== 1.0.0&quot;</samp><samp class="p" data-group-id="1189494452-2">)</samp><samp class="w">
</samp><samp class="no">false</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">match?</samp><samp class="p" data-group-id="1189494452-3">(</samp><samp class="s">&quot;2.1.6-dev&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;~&gt; 2.1.2&quot;</samp><samp class="p" data-group-id="1189494452-3">)</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">match?</samp><samp class="p" data-group-id="1189494452-4">(</samp><samp class="s">&quot;2.1.6-dev&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;~&gt; 2.1.2&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">allow_pre</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="no">false</samp><samp class="p" data-group-id="1189494452-4">)</samp><samp class="w">
</samp><samp class="no">false</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">match?</samp><samp class="p" data-group-id="1189494452-5">(</samp><samp class="s">&quot;foo&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;== 1.0.0&quot;</samp><samp class="p" data-group-id="1189494452-5">)</samp><samp class="w">
</samp><samp class="gt">** (Version.InvalidVersionError) invalid version: &quot;foo&quot;</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">match?</samp><samp class="p" data-group-id="1189494452-6">(</samp><samp class="s">&quot;2.0.0&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;== == 1.0.0&quot;</samp><samp class="p" data-group-id="1189494452-6">)</samp><samp class="w">
</samp><samp class="gt">** (Version.InvalidRequirementError) invalid requirement: &quot;== == 1.0.0&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="parse/1">

  <div class="detail-header">
    <a href="#parse/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">parse(string)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L379" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> parse(<a href="String.xhtml#t:t/0">String.t</a>()) :: {:ok, <a href="#t:t/0">t</a>()} | :error</pre>

      </div>

<p>Parses a version string into a <a href="Version.xhtml"><code class="inline">Version</code></a> struct.</p><h2 id="parse/1-examples" class="section-heading"><a href="#parse/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse</samp><samp class="p" data-group-id="8427034870-1">(</samp><samp class="s">&quot;2.0.1-alpha1&quot;</samp><samp class="p" data-group-id="8427034870-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="8427034870-2">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="8427034870-3">%</samp><samp class="nc" data-group-id="8427034870-3">Version</samp><samp class="p" data-group-id="8427034870-3">{</samp><samp class="ss">major</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minor</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">patch</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">pre</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="8427034870-4">[</samp><samp class="s">&quot;alpha1&quot;</samp><samp class="p" data-group-id="8427034870-4">]</samp><samp class="p" data-group-id="8427034870-3">}</samp><samp class="p" data-group-id="8427034870-2">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse</samp><samp class="p" data-group-id="8427034870-5">(</samp><samp class="s">&quot;2.0-alpha1&quot;</samp><samp class="p" data-group-id="8427034870-5">)</samp><samp class="w">
</samp><samp class="ss">:error</samp></code></pre>
  </section>
</section>
<section class="detail" id="parse!/1">

  <div class="detail-header">
    <a href="#parse!/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">parse!(string)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L406" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> parse!(<a href="String.xhtml#t:t/0">String.t</a>()) :: <a href="#t:t/0">t</a>()</pre>

      </div>

<p>Parses a version string into a <a href="Version.xhtml"><code class="inline">Version</code></a>.</p><p>If <code class="inline">string</code> is an invalid version, a <a href="Version.InvalidVersionError.xhtml"><code class="inline">Version.InvalidVersionError</code></a> is raised.</p><h2 id="parse!/1-examples" class="section-heading"><a href="#parse!/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse!</samp><samp class="p" data-group-id="6510994984-1">(</samp><samp class="s">&quot;2.0.1-alpha1&quot;</samp><samp class="p" data-group-id="6510994984-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="6510994984-2">%</samp><samp class="nc" data-group-id="6510994984-2">Version</samp><samp class="p" data-group-id="6510994984-2">{</samp><samp class="ss">major</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minor</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">patch</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">pre</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="6510994984-3">[</samp><samp class="s">&quot;alpha1&quot;</samp><samp class="p" data-group-id="6510994984-3">]</samp><samp class="p" data-group-id="6510994984-2">}</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse!</samp><samp class="p" data-group-id="6510994984-4">(</samp><samp class="s">&quot;2.0-alpha1&quot;</samp><samp class="p" data-group-id="6510994984-4">)</samp><samp class="w">
</samp><samp class="gt">** (Version.InvalidVersionError) invalid version: &quot;2.0-alpha1&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="parse_requirement/1">

  <div class="detail-header">
    <a href="#parse_requirement/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">parse_requirement(string)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L427" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> parse_requirement(<a href="String.xhtml#t:t/0">String.t</a>()) :: {:ok, <a href="Version.Requirement.xhtml#t:t/0">Version.Requirement.t</a>()} | :error</pre>

      </div>

<p>Parses a version requirement string into a <a href="Version.Requirement.xhtml"><code class="inline">Version.Requirement</code></a> struct.</p><h2 id="parse_requirement/1-examples" class="section-heading"><a href="#parse_requirement/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="3695169056-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">requirement</samp><samp class="p" data-group-id="3695169056-1">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse_requirement</samp><samp class="p" data-group-id="3695169056-2">(</samp><samp class="s">&quot;== 2.0.1&quot;</samp><samp class="p" data-group-id="3695169056-2">)</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">requirement</samp><samp class="w">
</samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse_requirement!</samp><samp class="p" data-group-id="3695169056-3">(</samp><samp class="s">&quot;== 2.0.1&quot;</samp><samp class="p" data-group-id="3695169056-3">)</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse_requirement</samp><samp class="p" data-group-id="3695169056-4">(</samp><samp class="s">&quot;== == 2.0.1&quot;</samp><samp class="p" data-group-id="3695169056-4">)</samp><samp class="w">
</samp><samp class="ss">:error</samp></code></pre>
  </section>
</section>
<section class="detail" id="parse_requirement!/1">

  <div class="detail-header">
    <a href="#parse_requirement!/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">parse_requirement!(string)</h1>

        <span class="note">(since 1.8.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L450" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> parse_requirement!(<a href="String.xhtml#t:t/0">String.t</a>()) :: <a href="Version.Requirement.xhtml#t:t/0">Version.Requirement.t</a>()</pre>

      </div>

<p>Parses a version requirement string into a <a href="Version.Requirement.xhtml"><code class="inline">Version.Requirement</code></a> struct.</p><p>If <code class="inline">string</code> is an invalid requirement, a <a href="Version.InvalidRequirementError.xhtml"><code class="inline">Version.InvalidRequirementError</code></a> is raised.</p><h1>Examples</h1><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse_requirement!</samp><samp class="p" data-group-id="0456681115-1">(</samp><samp class="s">&quot;== 2.0.1&quot;</samp><samp class="p" data-group-id="0456681115-1">)</samp><samp class="w">
</samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse_requirement!</samp><samp class="p" data-group-id="0456681115-2">(</samp><samp class="s">&quot;== 2.0.1&quot;</samp><samp class="p" data-group-id="0456681115-2">)</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse_requirement!</samp><samp class="p" data-group-id="0456681115-3">(</samp><samp class="s">&quot;== == 2.0.1&quot;</samp><samp class="p" data-group-id="0456681115-3">)</samp><samp class="w">
</samp><samp class="gt">** (Version.InvalidRequirementError) invalid requirement: &quot;== == 2.0.1&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_string/1">

  <div class="detail-header">
    <a href="#to_string/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_string(version)</h1>

        <span class="note">(since 1.14.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/version.ex#L491" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_string(<a href="#t:t/0">t</a>()) :: <a href="String.xhtml#t:t/0">String.t</a>()</pre>

      </div>

<p>Converts the given version to a string.</p><h3 id="to_string/1-examples" class="section-heading"><a href="#to_string/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h3><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">to_string</samp><samp class="p" data-group-id="4267318614-1">(</samp><samp class="p" data-group-id="4267318614-2">%</samp><samp class="nc" data-group-id="4267318614-2">Version</samp><samp class="p" data-group-id="4267318614-2">{</samp><samp class="ss">major</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">minor</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">patch</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="4267318614-2">}</samp><samp class="p" data-group-id="4267318614-1">)</samp><samp class="w">
</samp><samp class="s">&quot;1.2.3&quot;</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">to_string</samp><samp class="p" data-group-id="4267318614-3">(</samp><samp class="nc">Version</samp><samp class="o">.</samp><samp class="n">parse!</samp><samp class="p" data-group-id="4267318614-4">(</samp><samp class="s">&quot;1.14.0-rc.0+build0&quot;</samp><samp class="p" data-group-id="4267318614-4">)</samp><samp class="p" data-group-id="4267318614-3">)</samp><samp class="w">
</samp><samp class="s">&quot;1.14.0-rc.0+build0&quot;</samp></code></pre>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
