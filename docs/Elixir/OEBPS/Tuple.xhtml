<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Tuple - Elixir v1.18.4</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Tuple 
    </h1>


      <section id="moduledoc" class="docstring">
<p>Functions for working with tuples.</p><p>Please note the following functions for tuples are found in <a href="Kernel.xhtml"><code class="inline">Kernel</code></a>:</p><ul><li><a href="Kernel.xhtml#elem/2"><code class="inline">elem/2</code></a> - accesses a tuple by index</li><li><a href="Kernel.xhtml#put_elem/3"><code class="inline">put_elem/3</code></a> - inserts a value into a tuple by index</li><li><a href="Kernel.xhtml#tuple_size/1"><code class="inline">tuple_size/1</code></a> - gets the number of elements in a tuple</li></ul><p>Tuples are intended as fixed-size containers for multiple elements.
To manipulate a collection of elements, use a list instead. <a href="Enum.xhtml"><code class="inline">Enum</code></a>
functions do not work on tuples.</p><p>Tuples are denoted with curly braces:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="9893810329-1">{</samp><samp class="p" data-group-id="9893810329-1">}</samp><samp class="w">
</samp><samp class="p" data-group-id="9893810329-2">{</samp><samp class="p" data-group-id="9893810329-2">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="p" data-group-id="9893810329-3">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:two</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;three&quot;</samp><samp class="p" data-group-id="9893810329-3">}</samp><samp class="w">
</samp><samp class="p" data-group-id="9893810329-4">{</samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:two</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;three&quot;</samp><samp class="p" data-group-id="9893810329-4">}</samp></code></pre><p>A tuple may contain elements of different types, which are stored
contiguously in memory. Accessing any element takes constant time,
but modifying a tuple, which produces a shallow copy, takes linear time.
Tuples are good for reading data while lists are better for traversals.</p><p>Tuples are typically used either when a function has multiple return values
or for error handling. <a href="File.xhtml#read/1"><code class="inline">File.read/1</code></a> returns <code class="inline">{:ok, contents}</code> if reading
the given file is successful, or else <code class="inline">{:error, reason}</code> such as when
the file does not exist.</p><p>The functions in this module that add and remove elements from tuples are
rarely used in practice, as they typically imply tuples are being used as
collections. To append to a tuple, it is preferable to extract the elements
from the old tuple with pattern matching, and then create a new tuple:</p><pre><code class="makeup elixir" translate="no"><samp class="n">tuple</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="9291270299-1">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:example</samp><samp class="p" data-group-id="9291270299-1">}</samp><samp class="w">

</samp><samp class="c1"># Avoid</samp><samp class="w">
</samp><samp class="n">result</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">insert_at</samp><samp class="p" data-group-id="9291270299-2">(</samp><samp class="n">tuple</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="9291270299-3">%{</samp><samp class="p" data-group-id="9291270299-3">}</samp><samp class="p" data-group-id="9291270299-2">)</samp><samp class="w">

</samp><samp class="c1"># Prefer</samp><samp class="w">
</samp><samp class="p" data-group-id="9291270299-4">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">atom</samp><samp class="p" data-group-id="9291270299-4">}</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="n">tuple</samp><samp class="w">
</samp><samp class="n">result</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="9291270299-5">{</samp><samp class="ss">:ok</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="n">atom</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="9291270299-6">%{</samp><samp class="p" data-group-id="9291270299-6">}</samp><samp class="p" data-group-id="9291270299-5">}</samp></code></pre>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#delete_at/2" data-no-tooltip="" translate="no">delete_at(tuple, index)</a>

      </div>

        <div class="summary-synopsis"><p>Removes an element from a tuple.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#duplicate/2" data-no-tooltip="" translate="no">duplicate(data, size)</a>

      </div>

        <div class="summary-synopsis"><p>Creates a new tuple.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#insert_at/3" data-no-tooltip="" translate="no">insert_at(tuple, index, value)</a>

      </div>

        <div class="summary-synopsis"><p>Inserts an element into a tuple.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#product/1" data-no-tooltip="" translate="no">product(tuple)</a>

      </div>

        <div class="summary-synopsis"><p>Computes a product of tuple elements.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#sum/1" data-no-tooltip="" translate="no">sum(tuple)</a>

      </div>

        <div class="summary-synopsis"><p>Computes a sum of tuple elements.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_list/1" data-no-tooltip="" translate="no">to_list(tuple)</a>

      </div>

        <div class="summary-synopsis"><p>Converts a tuple to a list.</p></div>

    </div>

</div>

      </section>


      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>

        <div class="functions-list">
<section class="detail" id="delete_at/2">

  <div class="detail-header">
    <a href="#delete_at/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">delete_at(tuple, index)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/tuple.ex#L113" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> delete_at(<a href="typespecs.xhtml#basic-types">tuple</a>(), <a href="typespecs.xhtml#basic-types">non_neg_integer</a>()) :: <a href="typespecs.xhtml#basic-types">tuple</a>()</pre>

      </div>

<p>Removes an element from a tuple.</p><p>Deletes the element at the given <code class="inline">index</code> from <code class="inline">tuple</code>.
Raises an <a href="ArgumentError.xhtml"><code class="inline">ArgumentError</code></a> if <code class="inline">index</code> is negative or greater than
or equal to the length of <code class="inline">tuple</code>. Index is zero-based.</p><p>Inlined by the compiler.</p><h2 id="delete_at/2-examples" class="section-heading"><a href="#delete_at/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">tuple</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="3436897248-1">{</samp><samp class="ss">:foo</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:baz</samp><samp class="p" data-group-id="3436897248-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">delete_at</samp><samp class="p" data-group-id="3436897248-2">(</samp><samp class="n">tuple</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p" data-group-id="3436897248-2">)</samp><samp class="w">
</samp><samp class="p" data-group-id="3436897248-3">{</samp><samp class="ss">:bar</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:baz</samp><samp class="p" data-group-id="3436897248-3">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="duplicate/2">

  <div class="detail-header">
    <a href="#duplicate/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">duplicate(data, size)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/tuple.ex#L63" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> duplicate(<a href="typespecs.xhtml#built-in-types">term</a>(), <a href="typespecs.xhtml#basic-types">non_neg_integer</a>()) :: <a href="typespecs.xhtml#basic-types">tuple</a>()</pre>

      </div>

<p>Creates a new tuple.</p><p>Creates a tuple of <code class="inline">size</code> containing the
given <code class="inline">data</code> at every position.</p><p>Inlined by the compiler.</p><h2 id="duplicate/2-examples" class="section-heading"><a href="#duplicate/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">duplicate</samp><samp class="p" data-group-id="2474840075-1">(</samp><samp class="ss">:hello</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">3</samp><samp class="p" data-group-id="2474840075-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="2474840075-2">{</samp><samp class="ss">:hello</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:hello</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:hello</samp><samp class="p" data-group-id="2474840075-2">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="insert_at/3">

  <div class="detail-header">
    <a href="#insert_at/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">insert_at(tuple, index, value)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/tuple.ex#L86" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> insert_at(<a href="typespecs.xhtml#basic-types">tuple</a>(), <a href="typespecs.xhtml#basic-types">non_neg_integer</a>(), <a href="typespecs.xhtml#built-in-types">term</a>()) :: <a href="typespecs.xhtml#basic-types">tuple</a>()</pre>

      </div>

<p>Inserts an element into a tuple.</p><p>Inserts <code class="inline">value</code> into <code class="inline">tuple</code> at the given <code class="inline">index</code>.
Raises an <a href="ArgumentError.xhtml"><code class="inline">ArgumentError</code></a> if <code class="inline">index</code> is negative or greater than the
length of <code class="inline">tuple</code>. Index is zero-based.</p><p>Inlined by the compiler.</p><h2 id="insert_at/3-examples" class="section-heading"><a href="#insert_at/3-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">tuple</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="5978959852-1">{</samp><samp class="ss">:bar</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:baz</samp><samp class="p" data-group-id="5978959852-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">insert_at</samp><samp class="p" data-group-id="5978959852-2">(</samp><samp class="n">tuple</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">0</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:foo</samp><samp class="p" data-group-id="5978959852-2">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5978959852-3">{</samp><samp class="ss">:foo</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:baz</samp><samp class="p" data-group-id="5978959852-3">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">insert_at</samp><samp class="p" data-group-id="5978959852-4">(</samp><samp class="n">tuple</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:bong</samp><samp class="p" data-group-id="5978959852-4">)</samp><samp class="w">
</samp><samp class="p" data-group-id="5978959852-5">{</samp><samp class="ss">:bar</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:baz</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:bong</samp><samp class="p" data-group-id="5978959852-5">}</samp></code></pre>
  </section>
</section>
<section class="detail" id="product/1">

  <div class="detail-header">
    <a href="#product/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">product(tuple)</h1>

        <span class="note">(since 1.12.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/tuple.ex#L150" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> product(<a href="typespecs.xhtml#basic-types">tuple</a>()) :: <a href="typespecs.xhtml#built-in-types">number</a>()</pre>

      </div>

<p>Computes a product of tuple elements.</p><h2 id="product/1-examples" class="section-heading"><a href="#product/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">product</samp><samp class="p" data-group-id="4999651945-1">(</samp><samp class="p" data-group-id="4999651945-2">{</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">255</samp><samp class="p" data-group-id="4999651945-2">}</samp><samp class="p" data-group-id="4999651945-1">)</samp><samp class="w">
</samp><samp class="mi">65025</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">product</samp><samp class="p" data-group-id="4999651945-3">(</samp><samp class="p" data-group-id="4999651945-4">{</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mf">1.0</samp><samp class="p" data-group-id="4999651945-4">}</samp><samp class="p" data-group-id="4999651945-3">)</samp><samp class="w">
</samp><samp class="mf">255.0</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">product</samp><samp class="p" data-group-id="4999651945-5">(</samp><samp class="p" data-group-id="4999651945-6">{</samp><samp class="p" data-group-id="4999651945-6">}</samp><samp class="p" data-group-id="4999651945-5">)</samp><samp class="w">
</samp><samp class="mi">1</samp></code></pre>
  </section>
</section>
<section class="detail" id="sum/1">

  <div class="detail-header">
    <a href="#sum/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">sum(tuple)</h1>

        <span class="note">(since 1.12.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/tuple.ex#L131" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> sum(<a href="typespecs.xhtml#basic-types">tuple</a>()) :: <a href="typespecs.xhtml#built-in-types">number</a>()</pre>

      </div>

<p>Computes a sum of tuple elements.</p><h2 id="sum/1-examples" class="section-heading"><a href="#sum/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">sum</samp><samp class="p" data-group-id="1255203732-1">(</samp><samp class="p" data-group-id="1255203732-2">{</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mi">255</samp><samp class="p" data-group-id="1255203732-2">}</samp><samp class="p" data-group-id="1255203732-1">)</samp><samp class="w">
</samp><samp class="mi">510</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">sum</samp><samp class="p" data-group-id="1255203732-3">(</samp><samp class="p" data-group-id="1255203732-4">{</samp><samp class="mi">255</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="mf">0.0</samp><samp class="p" data-group-id="1255203732-4">}</samp><samp class="p" data-group-id="1255203732-3">)</samp><samp class="w">
</samp><samp class="mf">255.0</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">sum</samp><samp class="p" data-group-id="1255203732-5">(</samp><samp class="p" data-group-id="1255203732-6">{</samp><samp class="p" data-group-id="1255203732-6">}</samp><samp class="p" data-group-id="1255203732-5">)</samp><samp class="w">
</samp><samp class="mi">0</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_list/1">

  <div class="detail-header">
    <a href="#to_list/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_list(tuple)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/tuple.ex#L170" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_list(<a href="typespecs.xhtml#basic-types">tuple</a>()) :: <a href="typespecs.xhtml#built-in-types">list</a>()</pre>

      </div>

<p>Converts a tuple to a list.</p><p>Returns a new list with all the tuple elements.</p><p>Inlined by the compiler.</p><h2 id="to_list/1-examples" class="section-heading"><a href="#to_list/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="n">tuple</samp><samp class="w"> </samp><samp class="o">=</samp><samp class="w"> </samp><samp class="p" data-group-id="3228413276-1">{</samp><samp class="ss">:foo</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:baz</samp><samp class="p" data-group-id="3228413276-1">}</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Tuple</samp><samp class="o">.</samp><samp class="n">to_list</samp><samp class="p" data-group-id="3228413276-2">(</samp><samp class="n">tuple</samp><samp class="p" data-group-id="3228413276-2">)</samp><samp class="w">
</samp><samp class="p" data-group-id="3228413276-3">[</samp><samp class="ss">:foo</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:bar</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">:baz</samp><samp class="p" data-group-id="3228413276-3">]</samp></code></pre>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
