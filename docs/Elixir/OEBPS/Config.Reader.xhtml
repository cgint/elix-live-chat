<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Config.Reader - Elixir v1.18.4</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Config.Reader 
    </h1>


      <section id="moduledoc" class="docstring">
<p>API for reading config files defined with <a href="Config.xhtml"><code class="inline">Config</code></a>.</p><h2 id="module-as-a-provider">As a provider</h2><p><a href="Config.Reader.xhtml"><code class="inline">Config.Reader</code></a> can also be used as a <a href="Config.Provider.xhtml"><code class="inline">Config.Provider</code></a>. A config
provider is used during releases to customize how applications are
configured. When used as a provider, it expects a single argument:
the configuration path (as outlined in <a href="Config.Provider.xhtml#t:config_path/0"><code class="inline">Config.Provider.config_path/0</code></a>)
for the file to be read and loaded during the system boot.</p><p>For example, if you expect the target system to have a config file
in an absolute path, you can add this inside the <code class="inline">def project</code> portion
of  your <code class="inline">mix.exs</code>:</p><pre><code class="makeup elixir" translate="no"><samp class="ss">releases</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5929000490-1">[</samp><samp class="w">
  </samp><samp class="ss">demo</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5929000490-2">[</samp><samp class="w">
    </samp><samp class="ss">config_providers</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5929000490-3">[</samp><samp class="w">
      </samp><samp class="p" data-group-id="5929000490-4">{</samp><samp class="nc">Config.Reader</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;/etc/config.exs&quot;</samp><samp class="p" data-group-id="5929000490-4">}</samp><samp class="w">
    </samp><samp class="p" data-group-id="5929000490-3">]</samp><samp class="w">
  </samp><samp class="p" data-group-id="5929000490-2">]</samp><samp class="w">
</samp><samp class="p" data-group-id="5929000490-1">]</samp></code></pre><p>Or if you want to read a custom path inside the release:</p><pre><code class="makeup elixir" translate="no"><samp class="ss">config_providers</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="2949418291-1">[</samp><samp class="p" data-group-id="2949418291-2">{</samp><samp class="nc">Config.Reader</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="2949418291-3">{</samp><samp class="ss">:system</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;RELEASE_ROOT&quot;</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="s">&quot;/config.exs&quot;</samp><samp class="p" data-group-id="2949418291-3">}</samp><samp class="p" data-group-id="2949418291-2">}</samp><samp class="p" data-group-id="2949418291-1">]</samp></code></pre><p>You can also pass a keyword list of options to the reader,
where the <code class="inline">:path</code> is a required key:</p><pre><code class="makeup elixir" translate="no"><samp class="ss">config_providers</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="5979605772-1">[</samp><samp class="w">
  </samp><samp class="p" data-group-id="5979605772-2">{</samp><samp class="nc">Config.Reader</samp><samp class="p">,</samp><samp class="w">
   </samp><samp class="ss">path</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="s">&quot;/etc/config.exs&quot;</samp><samp class="p">,</samp><samp class="w">
   </samp><samp class="ss">env</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:prod</samp><samp class="p">,</samp><samp class="w">
   </samp><samp class="ss">imports</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:disabled</samp><samp class="p" data-group-id="5979605772-2">}</samp><samp class="w">
</samp><samp class="p" data-group-id="5979605772-1">]</samp></code></pre><p>Remember Mix already loads <code class="inline">config/runtime.exs</code> by default.
For more examples and scenarios, see the <a href="Config.Provider.xhtml"><code class="inline">Config.Provider</code></a> module.</p>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#eval!/3" data-no-tooltip="" translate="no">eval!(file, contents, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Evaluates the configuration <code class="inline">contents</code> for the given <code class="inline">file</code>.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#merge/2" data-no-tooltip="" translate="no">merge(config1, config2)</a>

      </div>

        <div class="summary-synopsis"><p>Merges two configurations.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#read!/2" data-no-tooltip="" translate="no">read!(file, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Reads the configuration file.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#read_imports!/2" data-no-tooltip="" translate="no">read_imports!(file, opts \\ [])</a>

      </div>

        <div class="summary-synopsis"><p>Reads the given configuration file and returns the configuration
with its imports.</p></div>

    </div>

</div>

      </section>


      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>

        <div class="functions-list">
<section class="detail" id="eval!/3">

    <span id="eval!/2"></span>

  <div class="detail-header">
    <a href="#eval!/3" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">eval!(file, contents, opts \\ [])</h1>

        <span class="note">(since 1.11.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/config/reader.ex#L68" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> eval!(<a href="Path.xhtml#t:t/0">Path.t</a>(), <a href="typespecs.xhtml#built-in-types">binary</a>(), <a href="typespecs.xhtml#built-in-types">keyword</a>()) :: <a href="typespecs.xhtml#built-in-types">keyword</a>()</pre>

      </div>

<p>Evaluates the configuration <code class="inline">contents</code> for the given <code class="inline">file</code>.</p><p>Accepts the same options as <a href="#read!/2"><code class="inline">read!/2</code></a>.</p>
  </section>
</section>
<section class="detail" id="merge/2">

  <div class="detail-header">
    <a href="#merge/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">merge(config1, config2)</h1>

        <span class="note">(since 1.9.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/config/reader.ex#L135" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> merge(<a href="typespecs.xhtml#built-in-types">keyword</a>(), <a href="typespecs.xhtml#built-in-types">keyword</a>()) :: <a href="typespecs.xhtml#built-in-types">keyword</a>()</pre>

      </div>

<p>Merges two configurations.</p><p>The configurations are merged together with the values in
the second one having higher preference than the first in
case of conflicts. In case both values are set to keyword
lists, it deep merges them.</p><h2 id="merge/2-examples" class="section-heading"><a href="#merge/2-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Config.Reader</samp><samp class="o">.</samp><samp class="n">merge</samp><samp class="p" data-group-id="4701745382-1">(</samp><samp class="p" data-group-id="4701745382-2">[</samp><samp class="ss">app</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-3">[</samp><samp class="ss">k</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:v1</samp><samp class="p" data-group-id="4701745382-3">]</samp><samp class="p" data-group-id="4701745382-2">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-4">[</samp><samp class="ss">app</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-5">[</samp><samp class="ss">k</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:v2</samp><samp class="p" data-group-id="4701745382-5">]</samp><samp class="p" data-group-id="4701745382-4">]</samp><samp class="p" data-group-id="4701745382-1">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4701745382-6">[</samp><samp class="ss">app</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-7">[</samp><samp class="ss">k</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:v2</samp><samp class="p" data-group-id="4701745382-7">]</samp><samp class="p" data-group-id="4701745382-6">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Config.Reader</samp><samp class="o">.</samp><samp class="n">merge</samp><samp class="p" data-group-id="4701745382-8">(</samp><samp class="p" data-group-id="4701745382-9">[</samp><samp class="ss">app</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-10">[</samp><samp class="ss">k</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-11">[</samp><samp class="ss">v1</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">v2</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">2</samp><samp class="p" data-group-id="4701745382-11">]</samp><samp class="p" data-group-id="4701745382-10">]</samp><samp class="p" data-group-id="4701745382-9">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-12">[</samp><samp class="ss">app</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-13">[</samp><samp class="ss">k</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-14">[</samp><samp class="ss">v2</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">v3</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="4701745382-14">]</samp><samp class="p" data-group-id="4701745382-13">]</samp><samp class="p" data-group-id="4701745382-12">]</samp><samp class="p" data-group-id="4701745382-8">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4701745382-15">[</samp><samp class="ss">app</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-16">[</samp><samp class="ss">k</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-17">[</samp><samp class="ss">v1</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="mi">1</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">v2</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:a</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">v3</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="ss">:b</samp><samp class="p" data-group-id="4701745382-17">]</samp><samp class="p" data-group-id="4701745382-16">]</samp><samp class="p" data-group-id="4701745382-15">]</samp><samp class="w">

</samp><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Config.Reader</samp><samp class="o">.</samp><samp class="n">merge</samp><samp class="p" data-group-id="4701745382-18">(</samp><samp class="p" data-group-id="4701745382-19">[</samp><samp class="ss">app1</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-20">[</samp><samp class="p" data-group-id="4701745382-20">]</samp><samp class="p" data-group-id="4701745382-19">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-21">[</samp><samp class="ss">app2</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-22">[</samp><samp class="p" data-group-id="4701745382-22">]</samp><samp class="p" data-group-id="4701745382-21">]</samp><samp class="p" data-group-id="4701745382-18">)</samp><samp class="w">
</samp><samp class="p" data-group-id="4701745382-23">[</samp><samp class="ss">app1</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-24">[</samp><samp class="p" data-group-id="4701745382-24">]</samp><samp class="p">,</samp><samp class="w"> </samp><samp class="ss">app2</samp><samp class="p">:</samp><samp class="w"> </samp><samp class="p" data-group-id="4701745382-25">[</samp><samp class="p" data-group-id="4701745382-25">]</samp><samp class="p" data-group-id="4701745382-23">]</samp></code></pre>
  </section>
</section>
<section class="detail" id="read!/2">

    <span id="read!/1"></span>

  <div class="detail-header">
    <a href="#read!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">read!(file, opts \\ [])</h1>

        <span class="note">(since 1.9.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/config/reader.ex#L90" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> read!(
  <a href="Path.xhtml#t:t/0">Path.t</a>(),
  <a href="typespecs.xhtml#built-in-types">keyword</a>()
) :: <a href="typespecs.xhtml#built-in-types">keyword</a>()</pre>

      </div>

<p>Reads the configuration file.</p><h2 id="read!/2-options" class="section-heading"><a href="#read!/2-options" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Options</span></h2><ul><li><p><code class="inline">:imports</code> - a list of already imported paths or <code class="inline">:disabled</code>
to disable imports</p></li><li><p><code class="inline">:env</code> - the environment the configuration file runs on.
See <a href="Config.xhtml#config_env/0"><code class="inline">Config.config_env/0</code></a> for sample usage</p></li><li><p><code class="inline">:target</code> - the target the configuration file runs on.
See <a href="Config.xhtml#config_target/0"><code class="inline">Config.config_target/0</code></a> for sample usage</p></li></ul>
  </section>
</section>
<section class="detail" id="read_imports!/2">

    <span id="read_imports!/1"></span>

  <div class="detail-header">
    <a href="#read_imports!/2" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">read_imports!(file, opts \\ [])</h1>

        <span class="note">(since 1.9.0)</span>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/config/reader.ex#L104" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> read_imports!(
  <a href="Path.xhtml#t:t/0">Path.t</a>(),
  <a href="typespecs.xhtml#built-in-types">keyword</a>()
) :: {<a href="typespecs.xhtml#built-in-types">keyword</a>(), [<a href="Path.xhtml#t:t/0">Path.t</a>()]}</pre>

      </div>

<p>Reads the given configuration file and returns the configuration
with its imports.</p><p>Accepts the same options as <a href="#read!/2"><code class="inline">read!/2</code></a>. Although note the <code class="inline">:imports</code>
option cannot be disabled in <a href="#read_imports!/2"><code class="inline">read_imports!/2</code></a>.</p>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
