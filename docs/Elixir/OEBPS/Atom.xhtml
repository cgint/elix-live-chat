<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"
      xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Atom - Elixir v1.18.4</title>
    <meta name="generator" content="ExDoc v0.38.2" />
    <link type="text/css" rel="stylesheet" href="dist/epub-elixir-FNUUKFP7.css" />
    <script src="dist/epub-4WIP524F.js"></script>

  </head>
  <body class="content-inner">

    <h1 id="content">
Atom 
    </h1>


      <section id="moduledoc" class="docstring">
<p>Atoms are constants whose values are their own name.</p><p>They are often useful to enumerate over distinct values, such as:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="ss">:apple</samp><samp class="w">
</samp><samp class="ss">:apple</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="ss">:orange</samp><samp class="w">
</samp><samp class="ss">:orange</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="ss">:watermelon</samp><samp class="w">
</samp><samp class="ss">:watermelon</samp></code></pre><p>Atoms are equal if their names are equal.</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="ss">:apple</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="ss">:apple</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="ss">:apple</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="ss">:orange</samp><samp class="w">
</samp><samp class="no">false</samp></code></pre><p>Often they are used to express the state of an operation, by using
values such as <code class="inline">:ok</code> and <code class="inline">:error</code>.</p><p>The booleans <code class="inline">true</code> and <code class="inline">false</code> are also atoms:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="no">true</samp><samp class="w"> </samp><samp class="o">==</samp><samp class="w"> </samp><samp class="ss">:true</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">is_atom</samp><samp class="p" data-group-id="9577083265-1">(</samp><samp class="no">false</samp><samp class="p" data-group-id="9577083265-1">)</samp><samp class="w">
</samp><samp class="no">true</samp><samp class="w">
</samp><samp class="gp unselectable">iex&gt; </samp><samp class="n">is_boolean</samp><samp class="p" data-group-id="9577083265-2">(</samp><samp class="ss">:false</samp><samp class="p" data-group-id="9577083265-2">)</samp><samp class="w">
</samp><samp class="no">true</samp></code></pre><p>Elixir allows you to skip the leading <code class="inline">:</code> for the atoms <code class="inline">false</code>, <code class="inline">true</code>,
and <code class="inline">nil</code>.</p><p>Atoms must be composed of Unicode characters such as letters, numbers,
underscore, and <code class="inline">@</code>. If the keyword has a character that does not
belong to the category above, such as spaces, you can wrap it in
quotes:</p><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="ss">:&quot;this is an atom with spaces&quot;</samp><samp class="w">
</samp><samp class="ss">:&quot;this is an atom with spaces&quot;</samp></code></pre>
      </section>


      <section id="summary" class="details-list">
        <h1 class="section-heading">Summary</h1>
<div class="summary-functions summary">
  <h2>
    <a href="#functions">Functions</a>
  </h2>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_charlist/1" data-no-tooltip="" translate="no">to_charlist(atom)</a>

      </div>

        <div class="summary-synopsis"><p>Converts an atom to a charlist.</p></div>

    </div>

    <div class="summary-row">
      <div class="summary-signature">
        <a href="#to_string/1" data-no-tooltip="" translate="no">to_string(atom)</a>

      </div>

        <div class="summary-synopsis"><p>Converts an atom to a string.</p></div>

    </div>

</div>

      </section>


      <section id="functions" class="details-list">
        <h1 class="section-heading">Functions</h1>

        <div class="functions-list">
<section class="detail" id="to_charlist/1">

  <div class="detail-header">
    <a href="#to_charlist/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_charlist(atom)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/atom.ex#L74" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_charlist(<a href="typespecs.xhtml#basic-types">atom</a>()) :: <a href="typespecs.xhtml#built-in-types">charlist</a>()</pre>

      </div>

<p>Converts an atom to a charlist.</p><p>Inlined by the compiler.</p><h2 id="to_charlist/1-examples" class="section-heading"><a href="#to_charlist/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Atom</samp><samp class="o">.</samp><samp class="n">to_charlist</samp><samp class="p" data-group-id="4386481503-1">(</samp><samp class="ss">:&quot;An atom&quot;</samp><samp class="p" data-group-id="4386481503-1">)</samp><samp class="w">
</samp><samp class="s">~c&quot;An atom&quot;</samp></code></pre>
  </section>
</section>
<section class="detail" id="to_string/1">

  <div class="detail-header">
    <a href="#to_string/1" class="detail-link" data-no-tooltip="" aria-label="Link to this function">
      <i class="ri-link-m" aria-hidden="true"></i>
    </a>
    <div class="heading-with-actions">
      <h1 class="signature" translate="no">to_string(atom)</h1>


        <a href="https://github.com/elixir-lang/elixir/blob/v1.18.4/lib/elixir/lib/atom.ex#L58" class="icon-action" rel="help" aria-label="View Source">
          <i class="ri-code-s-slash-line" aria-hidden="true"></i>
        </a>

    </div>
  </div>

  <section class="docstring">

      <div class="specs">

          <pre translate="no"><span class="attribute">@spec</span> to_string(<a href="typespecs.xhtml#basic-types">atom</a>()) :: <a href="String.xhtml#t:t/0">String.t</a>()</pre>

      </div>

<p>Converts an atom to a string.</p><p>Inlined by the compiler.</p><h2 id="to_string/1-examples" class="section-heading"><a href="#to_string/1-examples" class="hover-link"><i class="ri-link-m" aria-hidden="true"></i></a><span class="text">Examples</span></h2><pre><code class="makeup elixir" translate="no"><samp class="gp unselectable">iex&gt; </samp><samp class="nc">Atom</samp><samp class="o">.</samp><samp class="n">to_string</samp><samp class="p" data-group-id="2173454218-1">(</samp><samp class="ss">:foo</samp><samp class="p" data-group-id="2173454218-1">)</samp><samp class="w">
</samp><samp class="s">&quot;foo&quot;</samp></code></pre>
  </section>
</section>

        </div>
      </section>


  </body>
</html>
